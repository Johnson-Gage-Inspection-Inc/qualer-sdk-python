name: Publish Python Package

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: release  # Use GitHub environment for additional security
    permissions:
      id-token: write  # For trusted publishing to PyPI

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Full history for setuptools-scm

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.13"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools-scm

    - name: Verify version matches tag
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        SCM_VERSION=$(python -c "import setuptools_scm; print(setuptools_scm.get_version())")
        echo "üîñ Git tag version: $TAG_VERSION"
        echo "üì¶ SCM version: $SCM_VERSION"
        
        # Check if versions are compatible (SCM version should start with tag version)
        if [[ "$SCM_VERSION" != "$TAG_VERSION"* ]]; then
          echo "‚ùå Version mismatch! Tag: $TAG_VERSION, SCM: $SCM_VERSION"
          exit 1
        fi
        echo "‚úÖ Version verification passed"

    - name: Build package
      run: |
        python -m build

    - name: Check package integrity
      run: |
        twine check dist/*

    - name: Test installation
      run: |
        pip install dist/*.whl
        python -c "import qualer_sdk; print(f'‚úÖ Package version: {qualer_sdk.__version__}')"

    # Option 1: Trusted publishing (recommended - no API tokens needed)
    - name: Publish to PyPI (Trusted Publishing)
      uses: pypa/gh-action-pypi-publish@release/v1
      # Uncomment when ready to enable automatic publishing:
      # with:
      #   repository-url: https://upload.pypi.org/legacy/  # Remove for TestPyPI

    # Option 2: Token-based publishing (alternative)
    # - name: Publish to PyPI (Token-based)
    #   env:
    #     TWINE_USERNAME: __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #   run: |
    #     twine upload dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
