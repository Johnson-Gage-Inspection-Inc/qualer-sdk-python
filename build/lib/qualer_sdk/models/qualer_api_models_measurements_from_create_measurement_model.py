# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsMeasurementsFromCreateMeasurementModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'values': 'str',
        'mean': 'float',
        'sd': 'float',
        'range': 'float',
        'delta': 'float',
        'cv': 'float',
        'cmc': 'float',
        'mu': 'float',
        'tur': 'float',
        'tar': 'float',
        'max_value': 'float',
        'min_value': 'float',
        'error': 'float',
        'result': 'str',
        'updated_on': 'datetime',
        'updated_by': 'str'
    }

    attribute_map = {
        'values': 'Values',
        'mean': 'Mean',
        'sd': 'SD',
        'range': 'Range',
        'delta': 'Delta',
        'cv': 'CV',
        'cmc': 'CMC',
        'mu': 'MU',
        'tur': 'TUR',
        'tar': 'TAR',
        'max_value': 'MaxValue',
        'min_value': 'MinValue',
        'error': 'Error',
        'result': 'Result',
        'updated_on': 'UpdatedOn',
        'updated_by': 'UpdatedBy'
    }

    def __init__(self, values=None, mean=None, sd=None, range=None, delta=None, cv=None, cmc=None, mu=None, tur=None, tar=None, max_value=None, min_value=None, error=None, result=None, updated_on=None, updated_by=None, _configuration=None):  # noqa: E501
        """QualerApiModelsMeasurementsFromCreateMeasurementModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._values = None
        self._mean = None
        self._sd = None
        self._range = None
        self._delta = None
        self._cv = None
        self._cmc = None
        self._mu = None
        self._tur = None
        self._tar = None
        self._max_value = None
        self._min_value = None
        self._error = None
        self._result = None
        self._updated_on = None
        self._updated_by = None
        self.discriminator = None

        if values is not None:
            self.values = values
        if mean is not None:
            self.mean = mean
        if sd is not None:
            self.sd = sd
        if range is not None:
            self.range = range
        if delta is not None:
            self.delta = delta
        if cv is not None:
            self.cv = cv
        if cmc is not None:
            self.cmc = cmc
        if mu is not None:
            self.mu = mu
        if tur is not None:
            self.tur = tur
        if tar is not None:
            self.tar = tar
        if max_value is not None:
            self.max_value = max_value
        if min_value is not None:
            self.min_value = min_value
        if error is not None:
            self.error = error
        if result is not None:
            self.result = result
        if updated_on is not None:
            self.updated_on = updated_on
        if updated_by is not None:
            self.updated_by = updated_by

    @property
    def values(self):
        """Gets the values of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The values of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: str
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param values: The values of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: str
        """

        self._values = values

    @property
    def mean(self):
        """Gets the mean of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The mean of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._mean

    @mean.setter
    def mean(self, mean):
        """Sets the mean of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param mean: The mean of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._mean = mean

    @property
    def sd(self):
        """Gets the sd of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The sd of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._sd

    @sd.setter
    def sd(self, sd):
        """Sets the sd of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param sd: The sd of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._sd = sd

    @property
    def range(self):
        """Gets the range of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The range of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param range: The range of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._range = range

    @property
    def delta(self):
        """Gets the delta of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The delta of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._delta

    @delta.setter
    def delta(self, delta):
        """Sets the delta of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param delta: The delta of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._delta = delta

    @property
    def cv(self):
        """Gets the cv of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The cv of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._cv

    @cv.setter
    def cv(self, cv):
        """Sets the cv of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param cv: The cv of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._cv = cv

    @property
    def cmc(self):
        """Gets the cmc of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The cmc of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._cmc

    @cmc.setter
    def cmc(self, cmc):
        """Sets the cmc of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param cmc: The cmc of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._cmc = cmc

    @property
    def mu(self):
        """Gets the mu of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The mu of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._mu

    @mu.setter
    def mu(self, mu):
        """Sets the mu of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param mu: The mu of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._mu = mu

    @property
    def tur(self):
        """Gets the tur of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The tur of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._tur

    @tur.setter
    def tur(self, tur):
        """Sets the tur of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param tur: The tur of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._tur = tur

    @property
    def tar(self):
        """Gets the tar of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The tar of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._tar

    @tar.setter
    def tar(self, tar):
        """Sets the tar of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param tar: The tar of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._tar = tar

    @property
    def max_value(self):
        """Gets the max_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The max_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._max_value

    @max_value.setter
    def max_value(self, max_value):
        """Sets the max_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param max_value: The max_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._max_value = max_value

    @property
    def min_value(self):
        """Gets the min_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The min_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._min_value

    @min_value.setter
    def min_value(self, min_value):
        """Sets the min_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param min_value: The min_value of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._min_value = min_value

    @property
    def error(self):
        """Gets the error of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The error of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: float
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param error: The error of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: float
        """

        self._error = error

    @property
    def result(self):
        """Gets the result of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The result of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param result: The result of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: str
        """

        self._result = result

    @property
    def updated_on(self):
        """Gets the updated_on of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The updated_on of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_on

    @updated_on.setter
    def updated_on(self, updated_on):
        """Sets the updated_on of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param updated_on: The updated_on of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: datetime
        """

        self._updated_on = updated_on

    @property
    def updated_by(self):
        """Gets the updated_by of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501


        :return: The updated_by of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this QualerApiModelsMeasurementsFromCreateMeasurementModel.


        :param updated_by: The updated_by of this QualerApiModelsMeasurementsFromCreateMeasurementModel.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsMeasurementsFromCreateMeasurementModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsMeasurementsFromCreateMeasurementModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsMeasurementsFromCreateMeasurementModel):
            return True

        return self.to_dict() != other.to_dict()
