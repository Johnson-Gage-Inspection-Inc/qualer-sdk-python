# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsReportDatasetsToToolRangeAttributeResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'measurement_point_id': 'int',
        'service_order_item_id': 'int',
        'tool_id': 'int',
        'range_title': 'str',
        'range_subtitle': 'str',
        'attribute_name': 'str',
        'attribute_value': 'str'
    }

    attribute_map = {
        'measurement_point_id': 'MeasurementPointId',
        'service_order_item_id': 'ServiceOrderItemId',
        'tool_id': 'ToolId',
        'range_title': 'RangeTitle',
        'range_subtitle': 'RangeSubtitle',
        'attribute_name': 'AttributeName',
        'attribute_value': 'AttributeValue'
    }

    def __init__(self, measurement_point_id=None, service_order_item_id=None, tool_id=None, range_title=None, range_subtitle=None, attribute_name=None, attribute_value=None, _configuration=None):  # noqa: E501
        """QualerApiModelsReportDatasetsToToolRangeAttributeResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._measurement_point_id = None
        self._service_order_item_id = None
        self._tool_id = None
        self._range_title = None
        self._range_subtitle = None
        self._attribute_name = None
        self._attribute_value = None
        self.discriminator = None

        if measurement_point_id is not None:
            self.measurement_point_id = measurement_point_id
        if service_order_item_id is not None:
            self.service_order_item_id = service_order_item_id
        if tool_id is not None:
            self.tool_id = tool_id
        if range_title is not None:
            self.range_title = range_title
        if range_subtitle is not None:
            self.range_subtitle = range_subtitle
        if attribute_name is not None:
            self.attribute_name = attribute_name
        if attribute_value is not None:
            self.attribute_value = attribute_value

    @property
    def measurement_point_id(self):
        """Gets the measurement_point_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501


        :return: The measurement_point_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_point_id

    @measurement_point_id.setter
    def measurement_point_id(self, measurement_point_id):
        """Sets the measurement_point_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.


        :param measurement_point_id: The measurement_point_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :type: int
        """

        self._measurement_point_id = measurement_point_id

    @property
    def service_order_item_id(self):
        """Gets the service_order_item_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501


        :return: The service_order_item_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :rtype: int
        """
        return self._service_order_item_id

    @service_order_item_id.setter
    def service_order_item_id(self, service_order_item_id):
        """Sets the service_order_item_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.


        :param service_order_item_id: The service_order_item_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :type: int
        """

        self._service_order_item_id = service_order_item_id

    @property
    def tool_id(self):
        """Gets the tool_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501


        :return: The tool_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :rtype: int
        """
        return self._tool_id

    @tool_id.setter
    def tool_id(self, tool_id):
        """Sets the tool_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.


        :param tool_id: The tool_id of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :type: int
        """

        self._tool_id = tool_id

    @property
    def range_title(self):
        """Gets the range_title of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501


        :return: The range_title of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :rtype: str
        """
        return self._range_title

    @range_title.setter
    def range_title(self, range_title):
        """Sets the range_title of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.


        :param range_title: The range_title of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :type: str
        """

        self._range_title = range_title

    @property
    def range_subtitle(self):
        """Gets the range_subtitle of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501


        :return: The range_subtitle of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :rtype: str
        """
        return self._range_subtitle

    @range_subtitle.setter
    def range_subtitle(self, range_subtitle):
        """Sets the range_subtitle of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.


        :param range_subtitle: The range_subtitle of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :type: str
        """

        self._range_subtitle = range_subtitle

    @property
    def attribute_name(self):
        """Gets the attribute_name of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501


        :return: The attribute_name of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.


        :param attribute_name: The attribute_name of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :type: str
        """

        self._attribute_name = attribute_name

    @property
    def attribute_value(self):
        """Gets the attribute_value of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501


        :return: The attribute_value of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :rtype: str
        """
        return self._attribute_value

    @attribute_value.setter
    def attribute_value(self, attribute_value):
        """Sets the attribute_value of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.


        :param attribute_value: The attribute_value of this QualerApiModelsReportDatasetsToToolRangeAttributeResponse.  # noqa: E501
        :type: str
        """

        self._attribute_value = attribute_value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsReportDatasetsToToolRangeAttributeResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToToolRangeAttributeResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToToolRangeAttributeResponse):
            return True

        return self.to_dict() != other.to_dict()
