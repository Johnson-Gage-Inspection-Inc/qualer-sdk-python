# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsServiceOrdersFromAddPaymentModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'payment_type': 'str',
        'payment_amount': 'float',
        'details': 'str'
    }

    attribute_map = {
        'payment_type': 'PaymentType',
        'payment_amount': 'PaymentAmount',
        'details': 'Details'
    }

    def __init__(self, payment_type=None, payment_amount=None, details=None, _configuration=None):  # noqa: E501
        """QualerApiModelsServiceOrdersFromAddPaymentModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._payment_type = None
        self._payment_amount = None
        self._details = None
        self.discriminator = None

        if payment_type is not None:
            self.payment_type = payment_type
        if payment_amount is not None:
            self.payment_amount = payment_amount
        if details is not None:
            self.details = details

    @property
    def payment_type(self):
        """Gets the payment_type of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501


        :return: The payment_type of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501
        :rtype: str
        """
        return self._payment_type

    @payment_type.setter
    def payment_type(self, payment_type):
        """Sets the payment_type of this QualerApiModelsServiceOrdersFromAddPaymentModel.


        :param payment_type: The payment_type of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501
        :type: str
        """

        self._payment_type = payment_type

    @property
    def payment_amount(self):
        """Gets the payment_amount of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501


        :return: The payment_amount of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501
        :rtype: float
        """
        return self._payment_amount

    @payment_amount.setter
    def payment_amount(self, payment_amount):
        """Sets the payment_amount of this QualerApiModelsServiceOrdersFromAddPaymentModel.


        :param payment_amount: The payment_amount of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501
        :type: float
        """

        self._payment_amount = payment_amount

    @property
    def details(self):
        """Gets the details of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501


        :return: The details of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this QualerApiModelsServiceOrdersFromAddPaymentModel.


        :param details: The details of this QualerApiModelsServiceOrdersFromAddPaymentModel.  # noqa: E501
        :type: str
        """

        self._details = details

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsServiceOrdersFromAddPaymentModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsServiceOrdersFromAddPaymentModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsServiceOrdersFromAddPaymentModel):
            return True

        return self.to_dict() != other.to_dict()
