# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsVendorsFromVendorCompanySearchModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_number_text': 'str',
        'company_name': 'str',
        'take': 'int',
        'modified_after': 'datetime'
    }

    attribute_map = {
        'account_number_text': 'AccountNumberText',
        'company_name': 'CompanyName',
        'take': 'Take',
        'modified_after': 'ModifiedAfter'
    }

    def __init__(self, account_number_text=None, company_name=None, take=None, modified_after=None, _configuration=None):  # noqa: E501
        """QualerApiModelsVendorsFromVendorCompanySearchModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account_number_text = None
        self._company_name = None
        self._take = None
        self._modified_after = None
        self.discriminator = None

        if account_number_text is not None:
            self.account_number_text = account_number_text
        if company_name is not None:
            self.company_name = company_name
        if take is not None:
            self.take = take
        if modified_after is not None:
            self.modified_after = modified_after

    @property
    def account_number_text(self):
        """Gets the account_number_text of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501


        :return: The account_number_text of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :rtype: str
        """
        return self._account_number_text

    @account_number_text.setter
    def account_number_text(self, account_number_text):
        """Sets the account_number_text of this QualerApiModelsVendorsFromVendorCompanySearchModel.


        :param account_number_text: The account_number_text of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :type: str
        """

        self._account_number_text = account_number_text

    @property
    def company_name(self):
        """Gets the company_name of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501


        :return: The company_name of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this QualerApiModelsVendorsFromVendorCompanySearchModel.


        :param company_name: The company_name of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def take(self):
        """Gets the take of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501


        :return: The take of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :rtype: int
        """
        return self._take

    @take.setter
    def take(self, take):
        """Sets the take of this QualerApiModelsVendorsFromVendorCompanySearchModel.


        :param take: The take of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :type: int
        """

        self._take = take

    @property
    def modified_after(self):
        """Gets the modified_after of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501


        :return: The modified_after of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_after

    @modified_after.setter
    def modified_after(self, modified_after):
        """Sets the modified_after of this QualerApiModelsVendorsFromVendorCompanySearchModel.


        :param modified_after: The modified_after of this QualerApiModelsVendorsFromVendorCompanySearchModel.  # noqa: E501
        :type: datetime
        """

        self._modified_after = modified_after

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsVendorsFromVendorCompanySearchModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsVendorsFromVendorCompanySearchModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsVendorsFromVendorCompanySearchModel):
            return True

        return self.to_dict() != other.to_dict()
