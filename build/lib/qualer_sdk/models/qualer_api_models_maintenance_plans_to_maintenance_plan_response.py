# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsMaintenancePlansToMaintenancePlanResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'maintenance_plan_id': 'int',
        'maintenance_plan_name': 'str',
        'is_template': 'bool',
        'company_name': 'str',
        'maintenance_tasks': 'list[QualerApiModelsMaintenancePlansToMaintenanceTaskResponse]'
    }

    attribute_map = {
        'maintenance_plan_id': 'MaintenancePlanId',
        'maintenance_plan_name': 'MaintenancePlanName',
        'is_template': 'IsTemplate',
        'company_name': 'CompanyName',
        'maintenance_tasks': 'MaintenanceTasks'
    }

    def __init__(self, maintenance_plan_id=None, maintenance_plan_name=None, is_template=None, company_name=None, maintenance_tasks=None, _configuration=None):  # noqa: E501
        """QualerApiModelsMaintenancePlansToMaintenancePlanResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._maintenance_plan_id = None
        self._maintenance_plan_name = None
        self._is_template = None
        self._company_name = None
        self._maintenance_tasks = None
        self.discriminator = None

        if maintenance_plan_id is not None:
            self.maintenance_plan_id = maintenance_plan_id
        if maintenance_plan_name is not None:
            self.maintenance_plan_name = maintenance_plan_name
        if is_template is not None:
            self.is_template = is_template
        if company_name is not None:
            self.company_name = company_name
        if maintenance_tasks is not None:
            self.maintenance_tasks = maintenance_tasks

    @property
    def maintenance_plan_id(self):
        """Gets the maintenance_plan_id of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501


        :return: The maintenance_plan_id of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :rtype: int
        """
        return self._maintenance_plan_id

    @maintenance_plan_id.setter
    def maintenance_plan_id(self, maintenance_plan_id):
        """Sets the maintenance_plan_id of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.


        :param maintenance_plan_id: The maintenance_plan_id of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :type: int
        """

        self._maintenance_plan_id = maintenance_plan_id

    @property
    def maintenance_plan_name(self):
        """Gets the maintenance_plan_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501


        :return: The maintenance_plan_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :rtype: str
        """
        return self._maintenance_plan_name

    @maintenance_plan_name.setter
    def maintenance_plan_name(self, maintenance_plan_name):
        """Sets the maintenance_plan_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.


        :param maintenance_plan_name: The maintenance_plan_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :type: str
        """

        self._maintenance_plan_name = maintenance_plan_name

    @property
    def is_template(self):
        """Gets the is_template of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501


        :return: The is_template of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_template

    @is_template.setter
    def is_template(self, is_template):
        """Sets the is_template of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.


        :param is_template: The is_template of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :type: bool
        """

        self._is_template = is_template

    @property
    def company_name(self):
        """Gets the company_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501


        :return: The company_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.


        :param company_name: The company_name of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def maintenance_tasks(self):
        """Gets the maintenance_tasks of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501


        :return: The maintenance_tasks of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :rtype: list[QualerApiModelsMaintenancePlansToMaintenanceTaskResponse]
        """
        return self._maintenance_tasks

    @maintenance_tasks.setter
    def maintenance_tasks(self, maintenance_tasks):
        """Sets the maintenance_tasks of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.


        :param maintenance_tasks: The maintenance_tasks of this QualerApiModelsMaintenancePlansToMaintenancePlanResponse.  # noqa: E501
        :type: list[QualerApiModelsMaintenancePlansToMaintenanceTaskResponse]
        """

        self._maintenance_tasks = maintenance_tasks

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsMaintenancePlansToMaintenancePlanResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsMaintenancePlansToMaintenancePlanResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsMaintenancePlansToMaintenancePlanResponse):
            return True

        return self.to_dict() != other.to_dict()
