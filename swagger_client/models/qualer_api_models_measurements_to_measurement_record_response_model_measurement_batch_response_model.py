# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'batch_type': 'str',
        'batch_result': 'str',
        'specification': 'QualerApiModelsMeasurementsToMeasurementRecordResponseModelSpecificationResponseModel',
        'measurement_sets': 'list[QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModelMeasurementSetResponseModel]'
    }

    attribute_map = {
        'batch_type': 'BatchType',
        'batch_result': 'BatchResult',
        'specification': 'Specification',
        'measurement_sets': 'MeasurementSets'
    }

    def __init__(self, batch_type=None, batch_result=None, specification=None, measurement_sets=None):  # noqa: E501
        """QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel - a model defined in Swagger"""  # noqa: E501
        self._batch_type = None
        self._batch_result = None
        self._specification = None
        self._measurement_sets = None
        self.discriminator = None
        if batch_type is not None:
            self.batch_type = batch_type
        if batch_result is not None:
            self.batch_result = batch_result
        if specification is not None:
            self.specification = specification
        if measurement_sets is not None:
            self.measurement_sets = measurement_sets

    @property
    def batch_type(self):
        """Gets the batch_type of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501


        :return: The batch_type of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._batch_type

    @batch_type.setter
    def batch_type(self, batch_type):
        """Sets the batch_type of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.


        :param batch_type: The batch_type of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :type: str
        """

        self._batch_type = batch_type

    @property
    def batch_result(self):
        """Gets the batch_result of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501


        :return: The batch_result of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._batch_result

    @batch_result.setter
    def batch_result(self, batch_result):
        """Sets the batch_result of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.


        :param batch_result: The batch_result of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :type: str
        """

        self._batch_result = batch_result

    @property
    def specification(self):
        """Gets the specification of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501


        :return: The specification of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :rtype: QualerApiModelsMeasurementsToMeasurementRecordResponseModelSpecificationResponseModel
        """
        return self._specification

    @specification.setter
    def specification(self, specification):
        """Sets the specification of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.


        :param specification: The specification of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :type: QualerApiModelsMeasurementsToMeasurementRecordResponseModelSpecificationResponseModel
        """

        self._specification = specification

    @property
    def measurement_sets(self):
        """Gets the measurement_sets of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501


        :return: The measurement_sets of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :rtype: list[QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModelMeasurementSetResponseModel]
        """
        return self._measurement_sets

    @measurement_sets.setter
    def measurement_sets(self, measurement_sets):
        """Sets the measurement_sets of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.


        :param measurement_sets: The measurement_sets of this QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel.  # noqa: E501
        :type: list[QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModelMeasurementSetResponseModel]
        """

        self._measurement_sets = measurement_sets

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsMeasurementsToMeasurementRecordResponseModelMeasurementBatchResponseModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
