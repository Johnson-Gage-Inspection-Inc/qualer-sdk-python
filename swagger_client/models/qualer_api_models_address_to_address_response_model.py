# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class QualerApiModelsAddressToAddressResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'first_name': 'str',
        'last_name': 'str',
        'email': 'str',
        'company': 'str',
        'city': 'str',
        'address1': 'str',
        'address2': 'str',
        'zip_postal_code': 'str',
        'phone_number': 'str',
        'fax_number': 'str',
        'attention1': 'str',
        'attention2': 'str',
        'country': 'str',
        'state_province': 'str',
        'state_province_abbreviation': 'str'
    }

    attribute_map = {
        'first_name': 'FirstName',
        'last_name': 'LastName',
        'email': 'Email',
        'company': 'Company',
        'city': 'City',
        'address1': 'Address1',
        'address2': 'Address2',
        'zip_postal_code': 'ZipPostalCode',
        'phone_number': 'PhoneNumber',
        'fax_number': 'FaxNumber',
        'attention1': 'Attention1',
        'attention2': 'Attention2',
        'country': 'Country',
        'state_province': 'StateProvince',
        'state_province_abbreviation': 'StateProvinceAbbreviation'
    }

    def __init__(self, first_name=None, last_name=None, email=None, company=None, city=None, address1=None, address2=None, zip_postal_code=None, phone_number=None, fax_number=None, attention1=None, attention2=None, country=None, state_province=None, state_province_abbreviation=None):  # noqa: E501
        """QualerApiModelsAddressToAddressResponseModel - a model defined in Swagger"""  # noqa: E501
        self._first_name = None
        self._last_name = None
        self._email = None
        self._company = None
        self._city = None
        self._address1 = None
        self._address2 = None
        self._zip_postal_code = None
        self._phone_number = None
        self._fax_number = None
        self._attention1 = None
        self._attention2 = None
        self._country = None
        self._state_province = None
        self._state_province_abbreviation = None
        self.discriminator = None
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if email is not None:
            self.email = email
        if company is not None:
            self.company = company
        if city is not None:
            self.city = city
        if address1 is not None:
            self.address1 = address1
        if address2 is not None:
            self.address2 = address2
        if zip_postal_code is not None:
            self.zip_postal_code = zip_postal_code
        if phone_number is not None:
            self.phone_number = phone_number
        if fax_number is not None:
            self.fax_number = fax_number
        if attention1 is not None:
            self.attention1 = attention1
        if attention2 is not None:
            self.attention2 = attention2
        if country is not None:
            self.country = country
        if state_province is not None:
            self.state_province = state_province
        if state_province_abbreviation is not None:
            self.state_province_abbreviation = state_province_abbreviation

    @property
    def first_name(self):
        """Gets the first_name of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The first_name of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this QualerApiModelsAddressToAddressResponseModel.


        :param first_name: The first_name of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The last_name of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this QualerApiModelsAddressToAddressResponseModel.


        :param last_name: The last_name of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def email(self):
        """Gets the email of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The email of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this QualerApiModelsAddressToAddressResponseModel.


        :param email: The email of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def company(self):
        """Gets the company of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The company of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this QualerApiModelsAddressToAddressResponseModel.


        :param company: The company of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._company = company

    @property
    def city(self):
        """Gets the city of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The city of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this QualerApiModelsAddressToAddressResponseModel.


        :param city: The city of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._city = city

    @property
    def address1(self):
        """Gets the address1 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The address1 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._address1

    @address1.setter
    def address1(self, address1):
        """Sets the address1 of this QualerApiModelsAddressToAddressResponseModel.


        :param address1: The address1 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._address1 = address1

    @property
    def address2(self):
        """Gets the address2 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The address2 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._address2

    @address2.setter
    def address2(self, address2):
        """Sets the address2 of this QualerApiModelsAddressToAddressResponseModel.


        :param address2: The address2 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._address2 = address2

    @property
    def zip_postal_code(self):
        """Gets the zip_postal_code of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The zip_postal_code of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._zip_postal_code

    @zip_postal_code.setter
    def zip_postal_code(self, zip_postal_code):
        """Sets the zip_postal_code of this QualerApiModelsAddressToAddressResponseModel.


        :param zip_postal_code: The zip_postal_code of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._zip_postal_code = zip_postal_code

    @property
    def phone_number(self):
        """Gets the phone_number of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The phone_number of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this QualerApiModelsAddressToAddressResponseModel.


        :param phone_number: The phone_number of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._phone_number = phone_number

    @property
    def fax_number(self):
        """Gets the fax_number of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The fax_number of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._fax_number

    @fax_number.setter
    def fax_number(self, fax_number):
        """Sets the fax_number of this QualerApiModelsAddressToAddressResponseModel.


        :param fax_number: The fax_number of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._fax_number = fax_number

    @property
    def attention1(self):
        """Gets the attention1 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The attention1 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._attention1

    @attention1.setter
    def attention1(self, attention1):
        """Sets the attention1 of this QualerApiModelsAddressToAddressResponseModel.


        :param attention1: The attention1 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._attention1 = attention1

    @property
    def attention2(self):
        """Gets the attention2 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The attention2 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._attention2

    @attention2.setter
    def attention2(self, attention2):
        """Sets the attention2 of this QualerApiModelsAddressToAddressResponseModel.


        :param attention2: The attention2 of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._attention2 = attention2

    @property
    def country(self):
        """Gets the country of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The country of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this QualerApiModelsAddressToAddressResponseModel.


        :param country: The country of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._country = country

    @property
    def state_province(self):
        """Gets the state_province of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The state_province of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._state_province

    @state_province.setter
    def state_province(self, state_province):
        """Sets the state_province of this QualerApiModelsAddressToAddressResponseModel.


        :param state_province: The state_province of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._state_province = state_province

    @property
    def state_province_abbreviation(self):
        """Gets the state_province_abbreviation of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501


        :return: The state_province_abbreviation of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._state_province_abbreviation

    @state_province_abbreviation.setter
    def state_province_abbreviation(self, state_province_abbreviation):
        """Sets the state_province_abbreviation of this QualerApiModelsAddressToAddressResponseModel.


        :param state_province_abbreviation: The state_province_abbreviation of this QualerApiModelsAddressToAddressResponseModel.  # noqa: E501
        :type: str
        """

        self._state_province_abbreviation = state_province_abbreviation

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsAddressToAddressResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsAddressToAddressResponseModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
