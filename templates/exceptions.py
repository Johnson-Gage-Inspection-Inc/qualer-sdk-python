# coding: utf-8

"""
Qualer SDK Exception Classes

Exception classes used by the Qualer SDK for error handling.
This file is auto-generated by regenerate_sdk.py - do not edit manually.
"""


class OpenApiException(Exception):
    """Base exception class for OpenAPI related errors."""

    pass


class ApiException(OpenApiException):
    """General API exception for HTTP-related errors."""

    def __init__(self, status=None, reason=None, http_resp=None):
        self.status = status
        self.reason = reason
        self.http_resp = http_resp

        if http_resp:
            self.body = http_resp.data
            self.headers = http_resp.getheaders()
        else:
            self.body = None
            self.headers = None

        message = f"({status}) Reason: {reason}"
        if self.body:
            message += f"\nHTTP response body: {self.body}"

        super().__init__(message)


class ApiValueError(OpenApiException, ValueError):
    """Exception raised for invalid input values."""

    pass


class ApiTypeError(OpenApiException, TypeError):
    """Exception raised for type-related errors."""

    pass


class ApiKeyError(OpenApiException, KeyError):
    """Exception raised for key-related errors."""

    pass


class ApiAttributeError(OpenApiException, AttributeError):
    """Exception raised for attribute-related errors."""

    pass


class UnauthorizedException(ApiException):
    """Exception raised for 401 Unauthorized responses."""

    def __init__(self, http_resp=None):
        super().__init__(status=401, reason="Unauthorized", http_resp=http_resp)


class ForbiddenException(ApiException):
    """Exception raised for 403 Forbidden responses."""

    def __init__(self, http_resp=None):
        super().__init__(status=403, reason="Forbidden", http_resp=http_resp)


class NotFoundException(ApiException):
    """Exception raised for 404 Not Found responses."""

    def __init__(self, http_resp=None):
        super().__init__(status=404, reason="Not Found", http_resp=http_resp)


class ServiceException(ApiException):
    """Exception raised for 5xx Server Error responses."""

    def __init__(self, status=None, reason=None, http_resp=None):
        if status is None:
            status = 500
        if reason is None:
            reason = "Internal Server Error"
        super().__init__(status=status, reason=reason, http_resp=http_resp)
