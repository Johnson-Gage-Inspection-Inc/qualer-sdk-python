# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class QualerApiModelsReportDatasetsToMeasurementChartResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'service_order_item_id': 'int',
        'measurement_set_id': 'int',
        'chart_type': 'int',
        'chart_image': 'str',
        'nominal': 'str',
        'title': 'str',
        'unit_of_measure': 'str',
        'abbreviated_uom': 'str'
    }

    attribute_map = {
        'service_order_item_id': 'ServiceOrderItemId',
        'measurement_set_id': 'MeasurementSetId',
        'chart_type': 'ChartType',
        'chart_image': 'ChartImage',
        'nominal': 'Nominal',
        'title': 'Title',
        'unit_of_measure': 'UnitOfMeasure',
        'abbreviated_uom': 'AbbreviatedUOM'
    }

    def __init__(self, service_order_item_id=None, measurement_set_id=None, chart_type=None, chart_image=None, nominal=None, title=None, unit_of_measure=None, abbreviated_uom=None, _configuration=None):  # noqa: E501
        """QualerApiModelsReportDatasetsToMeasurementChartResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._service_order_item_id = None
        self._measurement_set_id = None
        self._chart_type = None
        self._chart_image = None
        self._nominal = None
        self._title = None
        self._unit_of_measure = None
        self._abbreviated_uom = None
        self.discriminator = None

        if service_order_item_id is not None:
            self.service_order_item_id = service_order_item_id
        if measurement_set_id is not None:
            self.measurement_set_id = measurement_set_id
        if chart_type is not None:
            self.chart_type = chart_type
        if chart_image is not None:
            self.chart_image = chart_image
        if nominal is not None:
            self.nominal = nominal
        if title is not None:
            self.title = title
        if unit_of_measure is not None:
            self.unit_of_measure = unit_of_measure
        if abbreviated_uom is not None:
            self.abbreviated_uom = abbreviated_uom

    @property
    def service_order_item_id(self):
        """Gets the service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: int
        """
        return self._service_order_item_id

    @service_order_item_id.setter
    def service_order_item_id(self, service_order_item_id):
        """Sets the service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param service_order_item_id: The service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: int
        """

        self._service_order_item_id = service_order_item_id

    @property
    def measurement_set_id(self):
        """Gets the measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_set_id

    @measurement_set_id.setter
    def measurement_set_id(self, measurement_set_id):
        """Sets the measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param measurement_set_id: The measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: int
        """

        self._measurement_set_id = measurement_set_id

    @property
    def chart_type(self):
        """Gets the chart_type of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The chart_type of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: int
        """
        return self._chart_type

    @chart_type.setter
    def chart_type(self, chart_type):
        """Sets the chart_type of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param chart_type: The chart_type of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: int
        """

        self._chart_type = chart_type

    @property
    def chart_image(self):
        """Gets the chart_image of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The chart_image of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: str
        """
        return self._chart_image

    @chart_image.setter
    def chart_image(self, chart_image):
        """Sets the chart_image of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param chart_image: The chart_image of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                chart_image is not None and not re.search(r'^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$', chart_image)):  # noqa: E501
            raise ValueError(r"Invalid value for `chart_image`, must be a follow pattern or equal to `/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/`")  # noqa: E501

        self._chart_image = chart_image

    @property
    def nominal(self):
        """Gets the nominal of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The nominal of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: str
        """
        return self._nominal

    @nominal.setter
    def nominal(self, nominal):
        """Sets the nominal of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param nominal: The nominal of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: str
        """

        self._nominal = nominal

    @property
    def title(self):
        """Gets the title of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The title of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param title: The title of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def unit_of_measure(self):
        """Gets the unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: str
        """
        return self._unit_of_measure

    @unit_of_measure.setter
    def unit_of_measure(self, unit_of_measure):
        """Sets the unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param unit_of_measure: The unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: str
        """

        self._unit_of_measure = unit_of_measure

    @property
    def abbreviated_uom(self):
        """Gets the abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501


        :return: The abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :rtype: str
        """
        return self._abbreviated_uom

    @abbreviated_uom.setter
    def abbreviated_uom(self, abbreviated_uom):
        """Sets the abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementChartResponse.


        :param abbreviated_uom: The abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementChartResponse.  # noqa: E501
        :type: str
        """

        self._abbreviated_uom = abbreviated_uom

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsReportDatasetsToMeasurementChartResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToMeasurementChartResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToMeasurementChartResponse):
            return True

        return self.to_dict() != other.to_dict()
