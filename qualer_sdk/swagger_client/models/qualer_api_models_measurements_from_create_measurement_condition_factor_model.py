# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'factor_id': 'str',
        'factor_name': 'str',
        'factor_value': 'float',
        'factor_uom': 'str',
        'last_modified_on_utc': 'datetime'
    }

    attribute_map = {
        'factor_id': 'FactorId',
        'factor_name': 'FactorName',
        'factor_value': 'FactorValue',
        'factor_uom': 'FactorUom',
        'last_modified_on_utc': 'LastModifiedOnUtc'
    }

    def __init__(self, factor_id=None, factor_name=None, factor_value=None, factor_uom=None, last_modified_on_utc=None, _configuration=None):  # noqa: E501
        """QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._factor_id = None
        self._factor_name = None
        self._factor_value = None
        self._factor_uom = None
        self._last_modified_on_utc = None
        self.discriminator = None

        if factor_id is not None:
            self.factor_id = factor_id
        if factor_name is not None:
            self.factor_name = factor_name
        if factor_value is not None:
            self.factor_value = factor_value
        if factor_uom is not None:
            self.factor_uom = factor_uom
        if last_modified_on_utc is not None:
            self.last_modified_on_utc = last_modified_on_utc

    @property
    def factor_id(self):
        """Gets the factor_id of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501


        :return: The factor_id of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :rtype: str
        """
        return self._factor_id

    @factor_id.setter
    def factor_id(self, factor_id):
        """Sets the factor_id of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.


        :param factor_id: The factor_id of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :type: str
        """

        self._factor_id = factor_id

    @property
    def factor_name(self):
        """Gets the factor_name of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501


        :return: The factor_name of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :rtype: str
        """
        return self._factor_name

    @factor_name.setter
    def factor_name(self, factor_name):
        """Sets the factor_name of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.


        :param factor_name: The factor_name of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :type: str
        """

        self._factor_name = factor_name

    @property
    def factor_value(self):
        """Gets the factor_value of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501


        :return: The factor_value of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :rtype: float
        """
        return self._factor_value

    @factor_value.setter
    def factor_value(self, factor_value):
        """Sets the factor_value of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.


        :param factor_value: The factor_value of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :type: float
        """

        self._factor_value = factor_value

    @property
    def factor_uom(self):
        """Gets the factor_uom of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501


        :return: The factor_uom of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :rtype: str
        """
        return self._factor_uom

    @factor_uom.setter
    def factor_uom(self, factor_uom):
        """Sets the factor_uom of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.


        :param factor_uom: The factor_uom of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :type: str
        """

        self._factor_uom = factor_uom

    @property
    def last_modified_on_utc(self):
        """Gets the last_modified_on_utc of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501


        :return: The last_modified_on_utc of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :rtype: datetime
        """
        return self._last_modified_on_utc

    @last_modified_on_utc.setter
    def last_modified_on_utc(self, last_modified_on_utc):
        """Sets the last_modified_on_utc of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.


        :param last_modified_on_utc: The last_modified_on_utc of this QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel.  # noqa: E501
        :type: datetime
        """

        self._last_modified_on_utc = last_modified_on_utc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsMeasurementsFromCreateMeasurementConditionFactorModel):
            return True

        return self.to_dict() != other.to_dict()
