# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class QualerApiModelsAssetToAssetResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'company_id': 'int',
        'asset_id': 'int',
        'serial_number': 'str',
        'asset_user': 'str',
        'asset_tag': 'str',
        'equipment_id': 'str',
        'asset_status': 'str',
        'asset_name': 'str',
        'asset_description': 'str',
        'asset_maker': 'str',
        'location': 'str',
        'room_number': 'str',
        'barcode': 'str',
        'legacy_identifier': 'str',
        'root_category_name': 'str',
        'category_name': 'str',
        '_class': 'str',
        'custodian_email': 'str',
        'custodian_first_name': 'str',
        'custodian_last_name': 'str',
        'custodian_name': 'str',
        'department': 'str',
        'station': 'str',
        'notes': 'str',
        'document_number': 'str',
        'document_section': 'str',
        'cumulative_service_cost': 'float',
        'product_id': 'int',
        'manufacturer_part_number': 'str',
        'product_name': 'str',
        'product_description': 'str',
        'product_manufacturer': 'str',
        'site_name': 'str',
        'site_id': 'int',
        'condition': 'str',
        'criticality': 'str',
        'pool': 'str',
        'purchase_date': 'datetime',
        'purchase_cost': 'float',
        'life_span_months': 'int',
        'activation_date': 'datetime',
        'depreciation_basis': 'float',
        'depreciation_method': 'int',
        'retirement_date': 'datetime',
        'salvage_value': 'float',
        'retirment_reason': 'str',
        'composite_parent_id': 'int',
        'composite_child_count': 'int'
    }

    attribute_map = {
        'company_id': 'CompanyId',
        'asset_id': 'AssetId',
        'serial_number': 'SerialNumber',
        'asset_user': 'AssetUser',
        'asset_tag': 'AssetTag',
        'equipment_id': 'EquipmentId',
        'asset_status': 'AssetStatus',
        'asset_name': 'AssetName',
        'asset_description': 'AssetDescription',
        'asset_maker': 'AssetMaker',
        'location': 'Location',
        'room_number': 'RoomNumber',
        'barcode': 'Barcode',
        'legacy_identifier': 'LegacyIdentifier',
        'root_category_name': 'RootCategoryName',
        'category_name': 'CategoryName',
        '_class': 'Class',
        'custodian_email': 'CustodianEmail',
        'custodian_first_name': 'CustodianFirstName',
        'custodian_last_name': 'CustodianLastName',
        'custodian_name': 'CustodianName',
        'department': 'Department',
        'station': 'Station',
        'notes': 'Notes',
        'document_number': 'DocumentNumber',
        'document_section': 'DocumentSection',
        'cumulative_service_cost': 'CumulativeServiceCost',
        'product_id': 'ProductId',
        'manufacturer_part_number': 'ManufacturerPartNumber',
        'product_name': 'ProductName',
        'product_description': 'ProductDescription',
        'product_manufacturer': 'ProductManufacturer',
        'site_name': 'SiteName',
        'site_id': 'SiteId',
        'condition': 'Condition',
        'criticality': 'Criticality',
        'pool': 'Pool',
        'purchase_date': 'PurchaseDate',
        'purchase_cost': 'PurchaseCost',
        'life_span_months': 'LifeSpanMonths',
        'activation_date': 'ActivationDate',
        'depreciation_basis': 'DepreciationBasis',
        'depreciation_method': 'DepreciationMethod',
        'retirement_date': 'RetirementDate',
        'salvage_value': 'SalvageValue',
        'retirment_reason': 'RetirmentReason',
        'composite_parent_id': 'CompositeParentId',
        'composite_child_count': 'CompositeChildCount'
    }

    def __init__(self, company_id=None, asset_id=None, serial_number=None, asset_user=None, asset_tag=None, equipment_id=None, asset_status=None, asset_name=None, asset_description=None, asset_maker=None, location=None, room_number=None, barcode=None, legacy_identifier=None, root_category_name=None, category_name=None, _class=None, custodian_email=None, custodian_first_name=None, custodian_last_name=None, custodian_name=None, department=None, station=None, notes=None, document_number=None, document_section=None, cumulative_service_cost=None, product_id=None, manufacturer_part_number=None, product_name=None, product_description=None, product_manufacturer=None, site_name=None, site_id=None, condition=None, criticality=None, pool=None, purchase_date=None, purchase_cost=None, life_span_months=None, activation_date=None, depreciation_basis=None, depreciation_method=None, retirement_date=None, salvage_value=None, retirment_reason=None, composite_parent_id=None, composite_child_count=None, _configuration=None):  # noqa: E501
        """QualerApiModelsAssetToAssetResponseModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._company_id = None
        self._asset_id = None
        self._serial_number = None
        self._asset_user = None
        self._asset_tag = None
        self._equipment_id = None
        self._asset_status = None
        self._asset_name = None
        self._asset_description = None
        self._asset_maker = None
        self._location = None
        self._room_number = None
        self._barcode = None
        self._legacy_identifier = None
        self._root_category_name = None
        self._category_name = None
        self.__class = None
        self._custodian_email = None
        self._custodian_first_name = None
        self._custodian_last_name = None
        self._custodian_name = None
        self._department = None
        self._station = None
        self._notes = None
        self._document_number = None
        self._document_section = None
        self._cumulative_service_cost = None
        self._product_id = None
        self._manufacturer_part_number = None
        self._product_name = None
        self._product_description = None
        self._product_manufacturer = None
        self._site_name = None
        self._site_id = None
        self._condition = None
        self._criticality = None
        self._pool = None
        self._purchase_date = None
        self._purchase_cost = None
        self._life_span_months = None
        self._activation_date = None
        self._depreciation_basis = None
        self._depreciation_method = None
        self._retirement_date = None
        self._salvage_value = None
        self._retirment_reason = None
        self._composite_parent_id = None
        self._composite_child_count = None
        self.discriminator = None

        if company_id is not None:
            self.company_id = company_id
        if asset_id is not None:
            self.asset_id = asset_id
        if serial_number is not None:
            self.serial_number = serial_number
        if asset_user is not None:
            self.asset_user = asset_user
        if asset_tag is not None:
            self.asset_tag = asset_tag
        if equipment_id is not None:
            self.equipment_id = equipment_id
        if asset_status is not None:
            self.asset_status = asset_status
        if asset_name is not None:
            self.asset_name = asset_name
        if asset_description is not None:
            self.asset_description = asset_description
        if asset_maker is not None:
            self.asset_maker = asset_maker
        if location is not None:
            self.location = location
        if room_number is not None:
            self.room_number = room_number
        if barcode is not None:
            self.barcode = barcode
        if legacy_identifier is not None:
            self.legacy_identifier = legacy_identifier
        if root_category_name is not None:
            self.root_category_name = root_category_name
        if category_name is not None:
            self.category_name = category_name
        if _class is not None:
            self._class = _class
        if custodian_email is not None:
            self.custodian_email = custodian_email
        if custodian_first_name is not None:
            self.custodian_first_name = custodian_first_name
        if custodian_last_name is not None:
            self.custodian_last_name = custodian_last_name
        if custodian_name is not None:
            self.custodian_name = custodian_name
        if department is not None:
            self.department = department
        if station is not None:
            self.station = station
        if notes is not None:
            self.notes = notes
        if document_number is not None:
            self.document_number = document_number
        if document_section is not None:
            self.document_section = document_section
        if cumulative_service_cost is not None:
            self.cumulative_service_cost = cumulative_service_cost
        if product_id is not None:
            self.product_id = product_id
        if manufacturer_part_number is not None:
            self.manufacturer_part_number = manufacturer_part_number
        if product_name is not None:
            self.product_name = product_name
        if product_description is not None:
            self.product_description = product_description
        if product_manufacturer is not None:
            self.product_manufacturer = product_manufacturer
        if site_name is not None:
            self.site_name = site_name
        if site_id is not None:
            self.site_id = site_id
        if condition is not None:
            self.condition = condition
        if criticality is not None:
            self.criticality = criticality
        if pool is not None:
            self.pool = pool
        if purchase_date is not None:
            self.purchase_date = purchase_date
        if purchase_cost is not None:
            self.purchase_cost = purchase_cost
        if life_span_months is not None:
            self.life_span_months = life_span_months
        if activation_date is not None:
            self.activation_date = activation_date
        if depreciation_basis is not None:
            self.depreciation_basis = depreciation_basis
        if depreciation_method is not None:
            self.depreciation_method = depreciation_method
        if retirement_date is not None:
            self.retirement_date = retirement_date
        if salvage_value is not None:
            self.salvage_value = salvage_value
        if retirment_reason is not None:
            self.retirment_reason = retirment_reason
        if composite_parent_id is not None:
            self.composite_parent_id = composite_parent_id
        if composite_child_count is not None:
            self.composite_child_count = composite_child_count

    @property
    def company_id(self):
        """Gets the company_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The company_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this QualerApiModelsAssetToAssetResponseModel.


        :param company_id: The company_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def asset_id(self):
        """Gets the asset_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The asset_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this QualerApiModelsAssetToAssetResponseModel.


        :param asset_id: The asset_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._asset_id = asset_id

    @property
    def serial_number(self):
        """Gets the serial_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The serial_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this QualerApiModelsAssetToAssetResponseModel.


        :param serial_number: The serial_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._serial_number = serial_number

    @property
    def asset_user(self):
        """Gets the asset_user of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The asset_user of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_user

    @asset_user.setter
    def asset_user(self, asset_user):
        """Sets the asset_user of this QualerApiModelsAssetToAssetResponseModel.


        :param asset_user: The asset_user of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_user = asset_user

    @property
    def asset_tag(self):
        """Gets the asset_tag of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The asset_tag of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_tag

    @asset_tag.setter
    def asset_tag(self, asset_tag):
        """Sets the asset_tag of this QualerApiModelsAssetToAssetResponseModel.


        :param asset_tag: The asset_tag of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_tag = asset_tag

    @property
    def equipment_id(self):
        """Gets the equipment_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The equipment_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._equipment_id

    @equipment_id.setter
    def equipment_id(self, equipment_id):
        """Sets the equipment_id of this QualerApiModelsAssetToAssetResponseModel.


        :param equipment_id: The equipment_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._equipment_id = equipment_id

    @property
    def asset_status(self):
        """Gets the asset_status of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The asset_status of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_status

    @asset_status.setter
    def asset_status(self, asset_status):
        """Sets the asset_status of this QualerApiModelsAssetToAssetResponseModel.


        :param asset_status: The asset_status of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["New", "Active", "Inactive", "Failed", "Retired"]  # noqa: E501
        if (self._configuration.client_side_validation and
                asset_status not in allowed_values):
            raise ValueError(
                "Invalid value for `asset_status` ({0}), must be one of {1}"  # noqa: E501
                .format(asset_status, allowed_values)
            )

        self._asset_status = asset_status

    @property
    def asset_name(self):
        """Gets the asset_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The asset_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_name

    @asset_name.setter
    def asset_name(self, asset_name):
        """Sets the asset_name of this QualerApiModelsAssetToAssetResponseModel.


        :param asset_name: The asset_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_name = asset_name

    @property
    def asset_description(self):
        """Gets the asset_description of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The asset_description of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_description

    @asset_description.setter
    def asset_description(self, asset_description):
        """Sets the asset_description of this QualerApiModelsAssetToAssetResponseModel.


        :param asset_description: The asset_description of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_description = asset_description

    @property
    def asset_maker(self):
        """Gets the asset_maker of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The asset_maker of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_maker

    @asset_maker.setter
    def asset_maker(self, asset_maker):
        """Sets the asset_maker of this QualerApiModelsAssetToAssetResponseModel.


        :param asset_maker: The asset_maker of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_maker = asset_maker

    @property
    def location(self):
        """Gets the location of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The location of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this QualerApiModelsAssetToAssetResponseModel.


        :param location: The location of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def room_number(self):
        """Gets the room_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The room_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._room_number

    @room_number.setter
    def room_number(self, room_number):
        """Sets the room_number of this QualerApiModelsAssetToAssetResponseModel.


        :param room_number: The room_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._room_number = room_number

    @property
    def barcode(self):
        """Gets the barcode of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The barcode of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._barcode

    @barcode.setter
    def barcode(self, barcode):
        """Sets the barcode of this QualerApiModelsAssetToAssetResponseModel.


        :param barcode: The barcode of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._barcode = barcode

    @property
    def legacy_identifier(self):
        """Gets the legacy_identifier of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The legacy_identifier of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._legacy_identifier

    @legacy_identifier.setter
    def legacy_identifier(self, legacy_identifier):
        """Sets the legacy_identifier of this QualerApiModelsAssetToAssetResponseModel.


        :param legacy_identifier: The legacy_identifier of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._legacy_identifier = legacy_identifier

    @property
    def root_category_name(self):
        """Gets the root_category_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The root_category_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._root_category_name

    @root_category_name.setter
    def root_category_name(self, root_category_name):
        """Sets the root_category_name of this QualerApiModelsAssetToAssetResponseModel.


        :param root_category_name: The root_category_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._root_category_name = root_category_name

    @property
    def category_name(self):
        """Gets the category_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The category_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """Sets the category_name of this QualerApiModelsAssetToAssetResponseModel.


        :param category_name: The category_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._category_name = category_name

    @property
    def _class(self):
        """Gets the _class of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The _class of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class):
        """Sets the _class of this QualerApiModelsAssetToAssetResponseModel.


        :param _class: The _class of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self.__class = _class

    @property
    def custodian_email(self):
        """Gets the custodian_email of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The custodian_email of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._custodian_email

    @custodian_email.setter
    def custodian_email(self, custodian_email):
        """Sets the custodian_email of this QualerApiModelsAssetToAssetResponseModel.


        :param custodian_email: The custodian_email of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._custodian_email = custodian_email

    @property
    def custodian_first_name(self):
        """Gets the custodian_first_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The custodian_first_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._custodian_first_name

    @custodian_first_name.setter
    def custodian_first_name(self, custodian_first_name):
        """Sets the custodian_first_name of this QualerApiModelsAssetToAssetResponseModel.


        :param custodian_first_name: The custodian_first_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._custodian_first_name = custodian_first_name

    @property
    def custodian_last_name(self):
        """Gets the custodian_last_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The custodian_last_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._custodian_last_name

    @custodian_last_name.setter
    def custodian_last_name(self, custodian_last_name):
        """Sets the custodian_last_name of this QualerApiModelsAssetToAssetResponseModel.


        :param custodian_last_name: The custodian_last_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._custodian_last_name = custodian_last_name

    @property
    def custodian_name(self):
        """Gets the custodian_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The custodian_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._custodian_name

    @custodian_name.setter
    def custodian_name(self, custodian_name):
        """Sets the custodian_name of this QualerApiModelsAssetToAssetResponseModel.


        :param custodian_name: The custodian_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._custodian_name = custodian_name

    @property
    def department(self):
        """Gets the department of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The department of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this QualerApiModelsAssetToAssetResponseModel.


        :param department: The department of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._department = department

    @property
    def station(self):
        """Gets the station of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The station of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._station

    @station.setter
    def station(self, station):
        """Sets the station of this QualerApiModelsAssetToAssetResponseModel.


        :param station: The station of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._station = station

    @property
    def notes(self):
        """Gets the notes of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The notes of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this QualerApiModelsAssetToAssetResponseModel.


        :param notes: The notes of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._notes = notes

    @property
    def document_number(self):
        """Gets the document_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The document_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._document_number

    @document_number.setter
    def document_number(self, document_number):
        """Sets the document_number of this QualerApiModelsAssetToAssetResponseModel.


        :param document_number: The document_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._document_number = document_number

    @property
    def document_section(self):
        """Gets the document_section of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The document_section of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._document_section

    @document_section.setter
    def document_section(self, document_section):
        """Sets the document_section of this QualerApiModelsAssetToAssetResponseModel.


        :param document_section: The document_section of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._document_section = document_section

    @property
    def cumulative_service_cost(self):
        """Gets the cumulative_service_cost of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The cumulative_service_cost of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._cumulative_service_cost

    @cumulative_service_cost.setter
    def cumulative_service_cost(self, cumulative_service_cost):
        """Sets the cumulative_service_cost of this QualerApiModelsAssetToAssetResponseModel.


        :param cumulative_service_cost: The cumulative_service_cost of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: float
        """

        self._cumulative_service_cost = cumulative_service_cost

    @property
    def product_id(self):
        """Gets the product_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The product_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this QualerApiModelsAssetToAssetResponseModel.


        :param product_id: The product_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._product_id = product_id

    @property
    def manufacturer_part_number(self):
        """Gets the manufacturer_part_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The manufacturer_part_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_part_number

    @manufacturer_part_number.setter
    def manufacturer_part_number(self, manufacturer_part_number):
        """Sets the manufacturer_part_number of this QualerApiModelsAssetToAssetResponseModel.


        :param manufacturer_part_number: The manufacturer_part_number of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._manufacturer_part_number = manufacturer_part_number

    @property
    def product_name(self):
        """Gets the product_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The product_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this QualerApiModelsAssetToAssetResponseModel.


        :param product_name: The product_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def product_description(self):
        """Gets the product_description of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The product_description of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this QualerApiModelsAssetToAssetResponseModel.


        :param product_description: The product_description of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._product_description = product_description

    @property
    def product_manufacturer(self):
        """Gets the product_manufacturer of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The product_manufacturer of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._product_manufacturer

    @product_manufacturer.setter
    def product_manufacturer(self, product_manufacturer):
        """Sets the product_manufacturer of this QualerApiModelsAssetToAssetResponseModel.


        :param product_manufacturer: The product_manufacturer of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._product_manufacturer = product_manufacturer

    @property
    def site_name(self):
        """Gets the site_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The site_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this QualerApiModelsAssetToAssetResponseModel.


        :param site_name: The site_name of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def site_id(self):
        """Gets the site_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The site_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this QualerApiModelsAssetToAssetResponseModel.


        :param site_id: The site_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def condition(self):
        """Gets the condition of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The condition of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this QualerApiModelsAssetToAssetResponseModel.


        :param condition: The condition of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._condition = condition

    @property
    def criticality(self):
        """Gets the criticality of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The criticality of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._criticality

    @criticality.setter
    def criticality(self, criticality):
        """Sets the criticality of this QualerApiModelsAssetToAssetResponseModel.


        :param criticality: The criticality of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._criticality = criticality

    @property
    def pool(self):
        """Gets the pool of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The pool of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._pool

    @pool.setter
    def pool(self, pool):
        """Sets the pool of this QualerApiModelsAssetToAssetResponseModel.


        :param pool: The pool of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._pool = pool

    @property
    def purchase_date(self):
        """Gets the purchase_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The purchase_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._purchase_date

    @purchase_date.setter
    def purchase_date(self, purchase_date):
        """Sets the purchase_date of this QualerApiModelsAssetToAssetResponseModel.


        :param purchase_date: The purchase_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: datetime
        """

        self._purchase_date = purchase_date

    @property
    def purchase_cost(self):
        """Gets the purchase_cost of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The purchase_cost of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._purchase_cost

    @purchase_cost.setter
    def purchase_cost(self, purchase_cost):
        """Sets the purchase_cost of this QualerApiModelsAssetToAssetResponseModel.


        :param purchase_cost: The purchase_cost of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: float
        """

        self._purchase_cost = purchase_cost

    @property
    def life_span_months(self):
        """Gets the life_span_months of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The life_span_months of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._life_span_months

    @life_span_months.setter
    def life_span_months(self, life_span_months):
        """Sets the life_span_months of this QualerApiModelsAssetToAssetResponseModel.


        :param life_span_months: The life_span_months of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._life_span_months = life_span_months

    @property
    def activation_date(self):
        """Gets the activation_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The activation_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._activation_date

    @activation_date.setter
    def activation_date(self, activation_date):
        """Sets the activation_date of this QualerApiModelsAssetToAssetResponseModel.


        :param activation_date: The activation_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: datetime
        """

        self._activation_date = activation_date

    @property
    def depreciation_basis(self):
        """Gets the depreciation_basis of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The depreciation_basis of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._depreciation_basis

    @depreciation_basis.setter
    def depreciation_basis(self, depreciation_basis):
        """Sets the depreciation_basis of this QualerApiModelsAssetToAssetResponseModel.


        :param depreciation_basis: The depreciation_basis of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: float
        """

        self._depreciation_basis = depreciation_basis

    @property
    def depreciation_method(self):
        """Gets the depreciation_method of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The depreciation_method of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._depreciation_method

    @depreciation_method.setter
    def depreciation_method(self, depreciation_method):
        """Sets the depreciation_method of this QualerApiModelsAssetToAssetResponseModel.


        :param depreciation_method: The depreciation_method of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._depreciation_method = depreciation_method

    @property
    def retirement_date(self):
        """Gets the retirement_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The retirement_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._retirement_date

    @retirement_date.setter
    def retirement_date(self, retirement_date):
        """Sets the retirement_date of this QualerApiModelsAssetToAssetResponseModel.


        :param retirement_date: The retirement_date of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: datetime
        """

        self._retirement_date = retirement_date

    @property
    def salvage_value(self):
        """Gets the salvage_value of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The salvage_value of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._salvage_value

    @salvage_value.setter
    def salvage_value(self, salvage_value):
        """Sets the salvage_value of this QualerApiModelsAssetToAssetResponseModel.


        :param salvage_value: The salvage_value of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: float
        """

        self._salvage_value = salvage_value

    @property
    def retirment_reason(self):
        """Gets the retirment_reason of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The retirment_reason of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._retirment_reason

    @retirment_reason.setter
    def retirment_reason(self, retirment_reason):
        """Sets the retirment_reason of this QualerApiModelsAssetToAssetResponseModel.


        :param retirment_reason: The retirment_reason of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: str
        """

        self._retirment_reason = retirment_reason

    @property
    def composite_parent_id(self):
        """Gets the composite_parent_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The composite_parent_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._composite_parent_id

    @composite_parent_id.setter
    def composite_parent_id(self, composite_parent_id):
        """Sets the composite_parent_id of this QualerApiModelsAssetToAssetResponseModel.


        :param composite_parent_id: The composite_parent_id of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._composite_parent_id = composite_parent_id

    @property
    def composite_child_count(self):
        """Gets the composite_child_count of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501


        :return: The composite_child_count of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._composite_child_count

    @composite_child_count.setter
    def composite_child_count(self, composite_child_count):
        """Sets the composite_child_count of this QualerApiModelsAssetToAssetResponseModel.


        :param composite_child_count: The composite_child_count of this QualerApiModelsAssetToAssetResponseModel.  # noqa: E501
        :type: int
        """

        self._composite_child_count = composite_child_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsAssetToAssetResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetResponseModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetResponseModel):
            return True

        return self.to_dict() != other.to_dict()
