# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class QualerApiModelsAssetToAssetsCountResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'assets_all': 'int',
        'assets_collected': 'int',
        'assets_recently_serviced': 'int',
        'assets_due': 'int',
        'assets_past_due': 'int',
        'assets_service_pending': 'int',
        'assets_recently_purchased': 'int',
        'assets_warranty_expires': 'int',
        'assets_due_for_replacement': 'int',
        'assets_out_of_service': 'int',
        'assets_not_serviced': 'int',
        'assets_without_schedule': 'int',
        'assets_without_vendor': 'int',
        'assets_without_product': 'int',
        'assets_added': 'int',
        'assets_updated': 'int',
        'assets_deleted': 'int',
        'assets_no_agreement': 'int',
        'assets_expired_agreement': 'int',
        'assets_expiring_soon_agreement': 'int'
    }

    attribute_map = {
        'assets_all': 'AssetsAll',
        'assets_collected': 'AssetsCollected',
        'assets_recently_serviced': 'AssetsRecentlyServiced',
        'assets_due': 'AssetsDue',
        'assets_past_due': 'AssetsPastDue',
        'assets_service_pending': 'AssetsServicePending',
        'assets_recently_purchased': 'AssetsRecentlyPurchased',
        'assets_warranty_expires': 'AssetsWarrantyExpires',
        'assets_due_for_replacement': 'AssetsDueForReplacement',
        'assets_out_of_service': 'AssetsOutOfService',
        'assets_not_serviced': 'AssetsNotServiced',
        'assets_without_schedule': 'AssetsWithoutSchedule',
        'assets_without_vendor': 'AssetsWithoutVendor',
        'assets_without_product': 'AssetsWithoutProduct',
        'assets_added': 'AssetsAdded',
        'assets_updated': 'AssetsUpdated',
        'assets_deleted': 'AssetsDeleted',
        'assets_no_agreement': 'AssetsNoAgreement',
        'assets_expired_agreement': 'AssetsExpiredAgreement',
        'assets_expiring_soon_agreement': 'AssetsExpiringSoonAgreement'
    }

    def __init__(self, assets_all=None, assets_collected=None, assets_recently_serviced=None, assets_due=None, assets_past_due=None, assets_service_pending=None, assets_recently_purchased=None, assets_warranty_expires=None, assets_due_for_replacement=None, assets_out_of_service=None, assets_not_serviced=None, assets_without_schedule=None, assets_without_vendor=None, assets_without_product=None, assets_added=None, assets_updated=None, assets_deleted=None, assets_no_agreement=None, assets_expired_agreement=None, assets_expiring_soon_agreement=None, _configuration=None):  # noqa: E501
        """QualerApiModelsAssetToAssetsCountResponseModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._assets_all = None
        self._assets_collected = None
        self._assets_recently_serviced = None
        self._assets_due = None
        self._assets_past_due = None
        self._assets_service_pending = None
        self._assets_recently_purchased = None
        self._assets_warranty_expires = None
        self._assets_due_for_replacement = None
        self._assets_out_of_service = None
        self._assets_not_serviced = None
        self._assets_without_schedule = None
        self._assets_without_vendor = None
        self._assets_without_product = None
        self._assets_added = None
        self._assets_updated = None
        self._assets_deleted = None
        self._assets_no_agreement = None
        self._assets_expired_agreement = None
        self._assets_expiring_soon_agreement = None
        self.discriminator = None

        if assets_all is not None:
            self.assets_all = assets_all
        if assets_collected is not None:
            self.assets_collected = assets_collected
        if assets_recently_serviced is not None:
            self.assets_recently_serviced = assets_recently_serviced
        if assets_due is not None:
            self.assets_due = assets_due
        if assets_past_due is not None:
            self.assets_past_due = assets_past_due
        if assets_service_pending is not None:
            self.assets_service_pending = assets_service_pending
        if assets_recently_purchased is not None:
            self.assets_recently_purchased = assets_recently_purchased
        if assets_warranty_expires is not None:
            self.assets_warranty_expires = assets_warranty_expires
        if assets_due_for_replacement is not None:
            self.assets_due_for_replacement = assets_due_for_replacement
        if assets_out_of_service is not None:
            self.assets_out_of_service = assets_out_of_service
        if assets_not_serviced is not None:
            self.assets_not_serviced = assets_not_serviced
        if assets_without_schedule is not None:
            self.assets_without_schedule = assets_without_schedule
        if assets_without_vendor is not None:
            self.assets_without_vendor = assets_without_vendor
        if assets_without_product is not None:
            self.assets_without_product = assets_without_product
        if assets_added is not None:
            self.assets_added = assets_added
        if assets_updated is not None:
            self.assets_updated = assets_updated
        if assets_deleted is not None:
            self.assets_deleted = assets_deleted
        if assets_no_agreement is not None:
            self.assets_no_agreement = assets_no_agreement
        if assets_expired_agreement is not None:
            self.assets_expired_agreement = assets_expired_agreement
        if assets_expiring_soon_agreement is not None:
            self.assets_expiring_soon_agreement = assets_expiring_soon_agreement

    @property
    def assets_all(self):
        """Gets the assets_all of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_all of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_all

    @assets_all.setter
    def assets_all(self, assets_all):
        """Sets the assets_all of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_all: The assets_all of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_all = assets_all

    @property
    def assets_collected(self):
        """Gets the assets_collected of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_collected of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_collected

    @assets_collected.setter
    def assets_collected(self, assets_collected):
        """Sets the assets_collected of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_collected: The assets_collected of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_collected = assets_collected

    @property
    def assets_recently_serviced(self):
        """Gets the assets_recently_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_recently_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_recently_serviced

    @assets_recently_serviced.setter
    def assets_recently_serviced(self, assets_recently_serviced):
        """Sets the assets_recently_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_recently_serviced: The assets_recently_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_recently_serviced = assets_recently_serviced

    @property
    def assets_due(self):
        """Gets the assets_due of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_due of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_due

    @assets_due.setter
    def assets_due(self, assets_due):
        """Sets the assets_due of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_due: The assets_due of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_due = assets_due

    @property
    def assets_past_due(self):
        """Gets the assets_past_due of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_past_due of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_past_due

    @assets_past_due.setter
    def assets_past_due(self, assets_past_due):
        """Sets the assets_past_due of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_past_due: The assets_past_due of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_past_due = assets_past_due

    @property
    def assets_service_pending(self):
        """Gets the assets_service_pending of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_service_pending of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_service_pending

    @assets_service_pending.setter
    def assets_service_pending(self, assets_service_pending):
        """Sets the assets_service_pending of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_service_pending: The assets_service_pending of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_service_pending = assets_service_pending

    @property
    def assets_recently_purchased(self):
        """Gets the assets_recently_purchased of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_recently_purchased of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_recently_purchased

    @assets_recently_purchased.setter
    def assets_recently_purchased(self, assets_recently_purchased):
        """Sets the assets_recently_purchased of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_recently_purchased: The assets_recently_purchased of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_recently_purchased = assets_recently_purchased

    @property
    def assets_warranty_expires(self):
        """Gets the assets_warranty_expires of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_warranty_expires of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_warranty_expires

    @assets_warranty_expires.setter
    def assets_warranty_expires(self, assets_warranty_expires):
        """Sets the assets_warranty_expires of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_warranty_expires: The assets_warranty_expires of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_warranty_expires = assets_warranty_expires

    @property
    def assets_due_for_replacement(self):
        """Gets the assets_due_for_replacement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_due_for_replacement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_due_for_replacement

    @assets_due_for_replacement.setter
    def assets_due_for_replacement(self, assets_due_for_replacement):
        """Sets the assets_due_for_replacement of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_due_for_replacement: The assets_due_for_replacement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_due_for_replacement = assets_due_for_replacement

    @property
    def assets_out_of_service(self):
        """Gets the assets_out_of_service of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_out_of_service of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_out_of_service

    @assets_out_of_service.setter
    def assets_out_of_service(self, assets_out_of_service):
        """Sets the assets_out_of_service of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_out_of_service: The assets_out_of_service of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_out_of_service = assets_out_of_service

    @property
    def assets_not_serviced(self):
        """Gets the assets_not_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_not_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_not_serviced

    @assets_not_serviced.setter
    def assets_not_serviced(self, assets_not_serviced):
        """Sets the assets_not_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_not_serviced: The assets_not_serviced of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_not_serviced = assets_not_serviced

    @property
    def assets_without_schedule(self):
        """Gets the assets_without_schedule of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_without_schedule of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_without_schedule

    @assets_without_schedule.setter
    def assets_without_schedule(self, assets_without_schedule):
        """Sets the assets_without_schedule of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_without_schedule: The assets_without_schedule of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_without_schedule = assets_without_schedule

    @property
    def assets_without_vendor(self):
        """Gets the assets_without_vendor of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_without_vendor of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_without_vendor

    @assets_without_vendor.setter
    def assets_without_vendor(self, assets_without_vendor):
        """Sets the assets_without_vendor of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_without_vendor: The assets_without_vendor of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_without_vendor = assets_without_vendor

    @property
    def assets_without_product(self):
        """Gets the assets_without_product of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_without_product of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_without_product

    @assets_without_product.setter
    def assets_without_product(self, assets_without_product):
        """Sets the assets_without_product of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_without_product: The assets_without_product of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_without_product = assets_without_product

    @property
    def assets_added(self):
        """Gets the assets_added of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_added of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_added

    @assets_added.setter
    def assets_added(self, assets_added):
        """Sets the assets_added of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_added: The assets_added of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_added = assets_added

    @property
    def assets_updated(self):
        """Gets the assets_updated of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_updated of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_updated

    @assets_updated.setter
    def assets_updated(self, assets_updated):
        """Sets the assets_updated of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_updated: The assets_updated of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_updated = assets_updated

    @property
    def assets_deleted(self):
        """Gets the assets_deleted of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_deleted of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_deleted

    @assets_deleted.setter
    def assets_deleted(self, assets_deleted):
        """Sets the assets_deleted of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_deleted: The assets_deleted of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_deleted = assets_deleted

    @property
    def assets_no_agreement(self):
        """Gets the assets_no_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_no_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_no_agreement

    @assets_no_agreement.setter
    def assets_no_agreement(self, assets_no_agreement):
        """Sets the assets_no_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_no_agreement: The assets_no_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_no_agreement = assets_no_agreement

    @property
    def assets_expired_agreement(self):
        """Gets the assets_expired_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_expired_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_expired_agreement

    @assets_expired_agreement.setter
    def assets_expired_agreement(self, assets_expired_agreement):
        """Sets the assets_expired_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_expired_agreement: The assets_expired_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_expired_agreement = assets_expired_agreement

    @property
    def assets_expiring_soon_agreement(self):
        """Gets the assets_expiring_soon_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501


        :return: The assets_expiring_soon_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._assets_expiring_soon_agreement

    @assets_expiring_soon_agreement.setter
    def assets_expiring_soon_agreement(self, assets_expiring_soon_agreement):
        """Sets the assets_expiring_soon_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.


        :param assets_expiring_soon_agreement: The assets_expiring_soon_agreement of this QualerApiModelsAssetToAssetsCountResponseModel.  # noqa: E501
        :type: int
        """

        self._assets_expiring_soon_agreement = assets_expiring_soon_agreement

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsAssetToAssetsCountResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetsCountResponseModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetsCountResponseModel):
            return True

        return self.to_dict() != other.to_dict()
