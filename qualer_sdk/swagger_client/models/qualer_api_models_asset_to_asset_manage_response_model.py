# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class QualerApiModelsAssetToAssetManageResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'asset_id': 'int',
        'asset_name': 'str',
        'asset_description': 'str',
        'asset_maker': 'str',
        'record_type': 'int',
        'parent_asset_id': 'int',
        'children_count': 'int',
        'site_id': 'int',
        'serial_number': 'str',
        'asset_tag': 'str',
        'asset_user': 'str',
        'equipment_id': 'str',
        'legacy_identifier': 'str',
        'criticality': 'str',
        'condition': 'str',
        'asset_class': 'str',
        'activation_date': 'datetime',
        'retirment_date': 'datetime',
        'client_vendor_id': 'int',
        'company_name': 'str',
        'site_name': 'str',
        'asset_has_image': 'bool',
        'has_image': 'bool',
        'parent_has_image': 'bool',
        'pool_id': 'int',
        'pool': 'str',
        'product_id': 'int',
        'parent_product_id': 'int',
        'product_name': 'str',
        'parent_product_name': 'str',
        'category_id': 'int',
        'root_category_id': 'int',
        'category_name': 'str',
        'root_category_name': 'str',
        'manufacturer_id': 'int',
        'manufacturer': 'str',
        'display_part_number': 'str',
        'display_name': 'str',
        'manufacturer_part_number': 'str',
        'asset_room': 'str',
        'location': 'str',
        'station': 'str',
        'tool_role': 'str',
        'tool_id': 'int',
        'department_id': 'int',
        'department_name': 'str',
        'custodian_name': 'str',
        'warranty': 'str',
        'warranty_end': 'datetime',
        'is_warranty_expired': 'bool',
        'depreciation_method': 'int',
        'depreciation_basis': 'float',
        'salvage_value': 'float',
        'total_service_cost': 'float',
        'life_span_months': 'int',
        'due_for_replacement_date': 'datetime',
        'depreciation_proc': 'float',
        'purchase_date': 'datetime',
        'purchase_cost': 'float',
        'time_in_service': 'int',
        'retirement_reason': 'str',
        'residual_cost': 'float',
        'employee_id': 'int',
        'asset_service_record_id': 'int',
        'result_status': 'str',
        'as_found_result': 'str',
        'as_left_result': 'str',
        'last_service_date': 'datetime',
        'last_service': 'str',
        'next_service_date': 'datetime',
        'next_service': 'str',
        'service_schedule_segment_id': 'int',
        'service_schedule_id': 'int',
        'service_schedule': 'str',
        'service_order_id': 'int',
        'service_order_status': 'str',
        'custom_order_number': 'str',
        'service_order_item_id': 'int',
        'vendor': 'str',
        'technician': 'str',
        'certificate_number': 'str',
        'due_trigger_date': 'datetime',
        'past_due_trigger_date': 'datetime',
        'due_status': 'str',
        'work_status': 'str'
    }

    attribute_map = {
        'asset_id': 'AssetId',
        'asset_name': 'AssetName',
        'asset_description': 'AssetDescription',
        'asset_maker': 'AssetMaker',
        'record_type': 'RecordType',
        'parent_asset_id': 'ParentAssetId',
        'children_count': 'ChildrenCount',
        'site_id': 'SiteId',
        'serial_number': 'SerialNumber',
        'asset_tag': 'AssetTag',
        'asset_user': 'AssetUser',
        'equipment_id': 'EquipmentId',
        'legacy_identifier': 'LegacyIdentifier',
        'criticality': 'Criticality',
        'condition': 'Condition',
        'asset_class': 'AssetClass',
        'activation_date': 'ActivationDate',
        'retirment_date': 'RetirmentDate',
        'client_vendor_id': 'ClientVendorId',
        'company_name': 'CompanyName',
        'site_name': 'SiteName',
        'asset_has_image': 'AssetHasImage',
        'has_image': 'HasImage',
        'parent_has_image': 'ParentHasImage',
        'pool_id': 'PoolId',
        'pool': 'Pool',
        'product_id': 'ProductId',
        'parent_product_id': 'ParentProductId',
        'product_name': 'ProductName',
        'parent_product_name': 'ParentProductName',
        'category_id': 'CategoryId',
        'root_category_id': 'RootCategoryId',
        'category_name': 'CategoryName',
        'root_category_name': 'RootCategoryName',
        'manufacturer_id': 'ManufacturerId',
        'manufacturer': 'Manufacturer',
        'display_part_number': 'DisplayPartNumber',
        'display_name': 'DisplayName',
        'manufacturer_part_number': 'ManufacturerPartNumber',
        'asset_room': 'AssetRoom',
        'location': 'Location',
        'station': 'Station',
        'tool_role': 'ToolRole',
        'tool_id': 'ToolId',
        'department_id': 'DepartmentId',
        'department_name': 'DepartmentName',
        'custodian_name': 'CustodianName',
        'warranty': 'Warranty',
        'warranty_end': 'WarrantyEnd',
        'is_warranty_expired': 'IsWarrantyExpired',
        'depreciation_method': 'DepreciationMethod',
        'depreciation_basis': 'DepreciationBasis',
        'salvage_value': 'SalvageValue',
        'total_service_cost': 'TotalServiceCost',
        'life_span_months': 'LifeSpanMonths',
        'due_for_replacement_date': 'DueForReplacementDate',
        'depreciation_proc': 'DepreciationProc',
        'purchase_date': 'PurchaseDate',
        'purchase_cost': 'PurchaseCost',
        'time_in_service': 'TimeInService',
        'retirement_reason': 'RetirementReason',
        'residual_cost': 'ResidualCost',
        'employee_id': 'EmployeeId',
        'asset_service_record_id': 'AssetServiceRecordId',
        'result_status': 'ResultStatus',
        'as_found_result': 'AsFoundResult',
        'as_left_result': 'AsLeftResult',
        'last_service_date': 'LastServiceDate',
        'last_service': 'LastService',
        'next_service_date': 'NextServiceDate',
        'next_service': 'NextService',
        'service_schedule_segment_id': 'ServiceScheduleSegmentId',
        'service_schedule_id': 'ServiceScheduleId',
        'service_schedule': 'ServiceSchedule',
        'service_order_id': 'ServiceOrderId',
        'service_order_status': 'ServiceOrderStatus',
        'custom_order_number': 'CustomOrderNumber',
        'service_order_item_id': 'ServiceOrderItemId',
        'vendor': 'Vendor',
        'technician': 'Technician',
        'certificate_number': 'CertificateNumber',
        'due_trigger_date': 'DueTriggerDate',
        'past_due_trigger_date': 'PastDueTriggerDate',
        'due_status': 'DueStatus',
        'work_status': 'WorkStatus'
    }

    def __init__(self, asset_id=None, asset_name=None, asset_description=None, asset_maker=None, record_type=None, parent_asset_id=None, children_count=None, site_id=None, serial_number=None, asset_tag=None, asset_user=None, equipment_id=None, legacy_identifier=None, criticality=None, condition=None, asset_class=None, activation_date=None, retirment_date=None, client_vendor_id=None, company_name=None, site_name=None, asset_has_image=None, has_image=None, parent_has_image=None, pool_id=None, pool=None, product_id=None, parent_product_id=None, product_name=None, parent_product_name=None, category_id=None, root_category_id=None, category_name=None, root_category_name=None, manufacturer_id=None, manufacturer=None, display_part_number=None, display_name=None, manufacturer_part_number=None, asset_room=None, location=None, station=None, tool_role=None, tool_id=None, department_id=None, department_name=None, custodian_name=None, warranty=None, warranty_end=None, is_warranty_expired=None, depreciation_method=None, depreciation_basis=None, salvage_value=None, total_service_cost=None, life_span_months=None, due_for_replacement_date=None, depreciation_proc=None, purchase_date=None, purchase_cost=None, time_in_service=None, retirement_reason=None, residual_cost=None, employee_id=None, asset_service_record_id=None, result_status=None, as_found_result=None, as_left_result=None, last_service_date=None, last_service=None, next_service_date=None, next_service=None, service_schedule_segment_id=None, service_schedule_id=None, service_schedule=None, service_order_id=None, service_order_status=None, custom_order_number=None, service_order_item_id=None, vendor=None, technician=None, certificate_number=None, due_trigger_date=None, past_due_trigger_date=None, due_status=None, work_status=None, _configuration=None):  # noqa: E501
        """QualerApiModelsAssetToAssetManageResponseModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._asset_id = None
        self._asset_name = None
        self._asset_description = None
        self._asset_maker = None
        self._record_type = None
        self._parent_asset_id = None
        self._children_count = None
        self._site_id = None
        self._serial_number = None
        self._asset_tag = None
        self._asset_user = None
        self._equipment_id = None
        self._legacy_identifier = None
        self._criticality = None
        self._condition = None
        self._asset_class = None
        self._activation_date = None
        self._retirment_date = None
        self._client_vendor_id = None
        self._company_name = None
        self._site_name = None
        self._asset_has_image = None
        self._has_image = None
        self._parent_has_image = None
        self._pool_id = None
        self._pool = None
        self._product_id = None
        self._parent_product_id = None
        self._product_name = None
        self._parent_product_name = None
        self._category_id = None
        self._root_category_id = None
        self._category_name = None
        self._root_category_name = None
        self._manufacturer_id = None
        self._manufacturer = None
        self._display_part_number = None
        self._display_name = None
        self._manufacturer_part_number = None
        self._asset_room = None
        self._location = None
        self._station = None
        self._tool_role = None
        self._tool_id = None
        self._department_id = None
        self._department_name = None
        self._custodian_name = None
        self._warranty = None
        self._warranty_end = None
        self._is_warranty_expired = None
        self._depreciation_method = None
        self._depreciation_basis = None
        self._salvage_value = None
        self._total_service_cost = None
        self._life_span_months = None
        self._due_for_replacement_date = None
        self._depreciation_proc = None
        self._purchase_date = None
        self._purchase_cost = None
        self._time_in_service = None
        self._retirement_reason = None
        self._residual_cost = None
        self._employee_id = None
        self._asset_service_record_id = None
        self._result_status = None
        self._as_found_result = None
        self._as_left_result = None
        self._last_service_date = None
        self._last_service = None
        self._next_service_date = None
        self._next_service = None
        self._service_schedule_segment_id = None
        self._service_schedule_id = None
        self._service_schedule = None
        self._service_order_id = None
        self._service_order_status = None
        self._custom_order_number = None
        self._service_order_item_id = None
        self._vendor = None
        self._technician = None
        self._certificate_number = None
        self._due_trigger_date = None
        self._past_due_trigger_date = None
        self._due_status = None
        self._work_status = None
        self.discriminator = None

        if asset_id is not None:
            self.asset_id = asset_id
        if asset_name is not None:
            self.asset_name = asset_name
        if asset_description is not None:
            self.asset_description = asset_description
        if asset_maker is not None:
            self.asset_maker = asset_maker
        if record_type is not None:
            self.record_type = record_type
        if parent_asset_id is not None:
            self.parent_asset_id = parent_asset_id
        if children_count is not None:
            self.children_count = children_count
        if site_id is not None:
            self.site_id = site_id
        if serial_number is not None:
            self.serial_number = serial_number
        if asset_tag is not None:
            self.asset_tag = asset_tag
        if asset_user is not None:
            self.asset_user = asset_user
        if equipment_id is not None:
            self.equipment_id = equipment_id
        if legacy_identifier is not None:
            self.legacy_identifier = legacy_identifier
        if criticality is not None:
            self.criticality = criticality
        if condition is not None:
            self.condition = condition
        if asset_class is not None:
            self.asset_class = asset_class
        if activation_date is not None:
            self.activation_date = activation_date
        if retirment_date is not None:
            self.retirment_date = retirment_date
        if client_vendor_id is not None:
            self.client_vendor_id = client_vendor_id
        if company_name is not None:
            self.company_name = company_name
        if site_name is not None:
            self.site_name = site_name
        if asset_has_image is not None:
            self.asset_has_image = asset_has_image
        if has_image is not None:
            self.has_image = has_image
        if parent_has_image is not None:
            self.parent_has_image = parent_has_image
        if pool_id is not None:
            self.pool_id = pool_id
        if pool is not None:
            self.pool = pool
        if product_id is not None:
            self.product_id = product_id
        if parent_product_id is not None:
            self.parent_product_id = parent_product_id
        if product_name is not None:
            self.product_name = product_name
        if parent_product_name is not None:
            self.parent_product_name = parent_product_name
        if category_id is not None:
            self.category_id = category_id
        if root_category_id is not None:
            self.root_category_id = root_category_id
        if category_name is not None:
            self.category_name = category_name
        if root_category_name is not None:
            self.root_category_name = root_category_name
        if manufacturer_id is not None:
            self.manufacturer_id = manufacturer_id
        if manufacturer is not None:
            self.manufacturer = manufacturer
        if display_part_number is not None:
            self.display_part_number = display_part_number
        if display_name is not None:
            self.display_name = display_name
        if manufacturer_part_number is not None:
            self.manufacturer_part_number = manufacturer_part_number
        if asset_room is not None:
            self.asset_room = asset_room
        if location is not None:
            self.location = location
        if station is not None:
            self.station = station
        if tool_role is not None:
            self.tool_role = tool_role
        if tool_id is not None:
            self.tool_id = tool_id
        if department_id is not None:
            self.department_id = department_id
        if department_name is not None:
            self.department_name = department_name
        if custodian_name is not None:
            self.custodian_name = custodian_name
        if warranty is not None:
            self.warranty = warranty
        if warranty_end is not None:
            self.warranty_end = warranty_end
        if is_warranty_expired is not None:
            self.is_warranty_expired = is_warranty_expired
        if depreciation_method is not None:
            self.depreciation_method = depreciation_method
        if depreciation_basis is not None:
            self.depreciation_basis = depreciation_basis
        if salvage_value is not None:
            self.salvage_value = salvage_value
        if total_service_cost is not None:
            self.total_service_cost = total_service_cost
        if life_span_months is not None:
            self.life_span_months = life_span_months
        if due_for_replacement_date is not None:
            self.due_for_replacement_date = due_for_replacement_date
        if depreciation_proc is not None:
            self.depreciation_proc = depreciation_proc
        if purchase_date is not None:
            self.purchase_date = purchase_date
        if purchase_cost is not None:
            self.purchase_cost = purchase_cost
        if time_in_service is not None:
            self.time_in_service = time_in_service
        if retirement_reason is not None:
            self.retirement_reason = retirement_reason
        if residual_cost is not None:
            self.residual_cost = residual_cost
        if employee_id is not None:
            self.employee_id = employee_id
        if asset_service_record_id is not None:
            self.asset_service_record_id = asset_service_record_id
        if result_status is not None:
            self.result_status = result_status
        if as_found_result is not None:
            self.as_found_result = as_found_result
        if as_left_result is not None:
            self.as_left_result = as_left_result
        if last_service_date is not None:
            self.last_service_date = last_service_date
        if last_service is not None:
            self.last_service = last_service
        if next_service_date is not None:
            self.next_service_date = next_service_date
        if next_service is not None:
            self.next_service = next_service
        if service_schedule_segment_id is not None:
            self.service_schedule_segment_id = service_schedule_segment_id
        if service_schedule_id is not None:
            self.service_schedule_id = service_schedule_id
        if service_schedule is not None:
            self.service_schedule = service_schedule
        if service_order_id is not None:
            self.service_order_id = service_order_id
        if service_order_status is not None:
            self.service_order_status = service_order_status
        if custom_order_number is not None:
            self.custom_order_number = custom_order_number
        if service_order_item_id is not None:
            self.service_order_item_id = service_order_item_id
        if vendor is not None:
            self.vendor = vendor
        if technician is not None:
            self.technician = technician
        if certificate_number is not None:
            self.certificate_number = certificate_number
        if due_trigger_date is not None:
            self.due_trigger_date = due_trigger_date
        if past_due_trigger_date is not None:
            self.past_due_trigger_date = past_due_trigger_date
        if due_status is not None:
            self.due_status = due_status
        if work_status is not None:
            self.work_status = work_status

    @property
    def asset_id(self):
        """Gets the asset_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_id: The asset_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._asset_id = asset_id

    @property
    def asset_name(self):
        """Gets the asset_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_name

    @asset_name.setter
    def asset_name(self, asset_name):
        """Sets the asset_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_name: The asset_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_name = asset_name

    @property
    def asset_description(self):
        """Gets the asset_description of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_description of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_description

    @asset_description.setter
    def asset_description(self, asset_description):
        """Sets the asset_description of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_description: The asset_description of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_description = asset_description

    @property
    def asset_maker(self):
        """Gets the asset_maker of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_maker of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_maker

    @asset_maker.setter
    def asset_maker(self, asset_maker):
        """Sets the asset_maker of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_maker: The asset_maker of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_maker = asset_maker

    @property
    def record_type(self):
        """Gets the record_type of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The record_type of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._record_type

    @record_type.setter
    def record_type(self, record_type):
        """Sets the record_type of this QualerApiModelsAssetToAssetManageResponseModel.


        :param record_type: The record_type of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """
        allowed_values = [0, 1, 2, 3]  # noqa: E501
        if (self._configuration.client_side_validation and
                record_type not in allowed_values):
            raise ValueError(
                "Invalid value for `record_type` ({0}), must be one of {1}"  # noqa: E501
                .format(record_type, allowed_values)
            )

        self._record_type = record_type

    @property
    def parent_asset_id(self):
        """Gets the parent_asset_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The parent_asset_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._parent_asset_id

    @parent_asset_id.setter
    def parent_asset_id(self, parent_asset_id):
        """Sets the parent_asset_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param parent_asset_id: The parent_asset_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._parent_asset_id = parent_asset_id

    @property
    def children_count(self):
        """Gets the children_count of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The children_count of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._children_count

    @children_count.setter
    def children_count(self, children_count):
        """Sets the children_count of this QualerApiModelsAssetToAssetManageResponseModel.


        :param children_count: The children_count of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._children_count = children_count

    @property
    def site_id(self):
        """Gets the site_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The site_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param site_id: The site_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def serial_number(self):
        """Gets the serial_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The serial_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this QualerApiModelsAssetToAssetManageResponseModel.


        :param serial_number: The serial_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._serial_number = serial_number

    @property
    def asset_tag(self):
        """Gets the asset_tag of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_tag of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_tag

    @asset_tag.setter
    def asset_tag(self, asset_tag):
        """Sets the asset_tag of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_tag: The asset_tag of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_tag = asset_tag

    @property
    def asset_user(self):
        """Gets the asset_user of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_user of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_user

    @asset_user.setter
    def asset_user(self, asset_user):
        """Sets the asset_user of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_user: The asset_user of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_user = asset_user

    @property
    def equipment_id(self):
        """Gets the equipment_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The equipment_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._equipment_id

    @equipment_id.setter
    def equipment_id(self, equipment_id):
        """Sets the equipment_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param equipment_id: The equipment_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._equipment_id = equipment_id

    @property
    def legacy_identifier(self):
        """Gets the legacy_identifier of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The legacy_identifier of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._legacy_identifier

    @legacy_identifier.setter
    def legacy_identifier(self, legacy_identifier):
        """Sets the legacy_identifier of this QualerApiModelsAssetToAssetManageResponseModel.


        :param legacy_identifier: The legacy_identifier of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._legacy_identifier = legacy_identifier

    @property
    def criticality(self):
        """Gets the criticality of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The criticality of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._criticality

    @criticality.setter
    def criticality(self, criticality):
        """Sets the criticality of this QualerApiModelsAssetToAssetManageResponseModel.


        :param criticality: The criticality of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._criticality = criticality

    @property
    def condition(self):
        """Gets the condition of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The condition of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._condition

    @condition.setter
    def condition(self, condition):
        """Sets the condition of this QualerApiModelsAssetToAssetManageResponseModel.


        :param condition: The condition of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._condition = condition

    @property
    def asset_class(self):
        """Gets the asset_class of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_class of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_class

    @asset_class.setter
    def asset_class(self, asset_class):
        """Sets the asset_class of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_class: The asset_class of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_class = asset_class

    @property
    def activation_date(self):
        """Gets the activation_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The activation_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._activation_date

    @activation_date.setter
    def activation_date(self, activation_date):
        """Sets the activation_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param activation_date: The activation_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._activation_date = activation_date

    @property
    def retirment_date(self):
        """Gets the retirment_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The retirment_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._retirment_date

    @retirment_date.setter
    def retirment_date(self, retirment_date):
        """Sets the retirment_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param retirment_date: The retirment_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._retirment_date = retirment_date

    @property
    def client_vendor_id(self):
        """Gets the client_vendor_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The client_vendor_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._client_vendor_id

    @client_vendor_id.setter
    def client_vendor_id(self, client_vendor_id):
        """Sets the client_vendor_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param client_vendor_id: The client_vendor_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._client_vendor_id = client_vendor_id

    @property
    def company_name(self):
        """Gets the company_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The company_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param company_name: The company_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def site_name(self):
        """Gets the site_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The site_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param site_name: The site_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def asset_has_image(self):
        """Gets the asset_has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: bool
        """
        return self._asset_has_image

    @asset_has_image.setter
    def asset_has_image(self, asset_has_image):
        """Sets the asset_has_image of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_has_image: The asset_has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: bool
        """

        self._asset_has_image = asset_has_image

    @property
    def has_image(self):
        """Gets the has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: bool
        """
        return self._has_image

    @has_image.setter
    def has_image(self, has_image):
        """Sets the has_image of this QualerApiModelsAssetToAssetManageResponseModel.


        :param has_image: The has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: bool
        """

        self._has_image = has_image

    @property
    def parent_has_image(self):
        """Gets the parent_has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The parent_has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: bool
        """
        return self._parent_has_image

    @parent_has_image.setter
    def parent_has_image(self, parent_has_image):
        """Sets the parent_has_image of this QualerApiModelsAssetToAssetManageResponseModel.


        :param parent_has_image: The parent_has_image of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: bool
        """

        self._parent_has_image = parent_has_image

    @property
    def pool_id(self):
        """Gets the pool_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The pool_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param pool_id: The pool_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._pool_id = pool_id

    @property
    def pool(self):
        """Gets the pool of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The pool of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._pool

    @pool.setter
    def pool(self, pool):
        """Sets the pool of this QualerApiModelsAssetToAssetManageResponseModel.


        :param pool: The pool of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._pool = pool

    @property
    def product_id(self):
        """Gets the product_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The product_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param product_id: The product_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._product_id = product_id

    @property
    def parent_product_id(self):
        """Gets the parent_product_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The parent_product_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._parent_product_id

    @parent_product_id.setter
    def parent_product_id(self, parent_product_id):
        """Sets the parent_product_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param parent_product_id: The parent_product_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._parent_product_id = parent_product_id

    @property
    def product_name(self):
        """Gets the product_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The product_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param product_name: The product_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def parent_product_name(self):
        """Gets the parent_product_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The parent_product_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._parent_product_name

    @parent_product_name.setter
    def parent_product_name(self, parent_product_name):
        """Sets the parent_product_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param parent_product_name: The parent_product_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._parent_product_name = parent_product_name

    @property
    def category_id(self):
        """Gets the category_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The category_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param category_id: The category_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._category_id = category_id

    @property
    def root_category_id(self):
        """Gets the root_category_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The root_category_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._root_category_id

    @root_category_id.setter
    def root_category_id(self, root_category_id):
        """Sets the root_category_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param root_category_id: The root_category_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._root_category_id = root_category_id

    @property
    def category_name(self):
        """Gets the category_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The category_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """Sets the category_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param category_name: The category_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._category_name = category_name

    @property
    def root_category_name(self):
        """Gets the root_category_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The root_category_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._root_category_name

    @root_category_name.setter
    def root_category_name(self, root_category_name):
        """Sets the root_category_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param root_category_name: The root_category_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._root_category_name = root_category_name

    @property
    def manufacturer_id(self):
        """Gets the manufacturer_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The manufacturer_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._manufacturer_id

    @manufacturer_id.setter
    def manufacturer_id(self, manufacturer_id):
        """Sets the manufacturer_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param manufacturer_id: The manufacturer_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._manufacturer_id = manufacturer_id

    @property
    def manufacturer(self):
        """Gets the manufacturer of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The manufacturer of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer

    @manufacturer.setter
    def manufacturer(self, manufacturer):
        """Sets the manufacturer of this QualerApiModelsAssetToAssetManageResponseModel.


        :param manufacturer: The manufacturer of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._manufacturer = manufacturer

    @property
    def display_part_number(self):
        """Gets the display_part_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The display_part_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._display_part_number

    @display_part_number.setter
    def display_part_number(self, display_part_number):
        """Sets the display_part_number of this QualerApiModelsAssetToAssetManageResponseModel.


        :param display_part_number: The display_part_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._display_part_number = display_part_number

    @property
    def display_name(self):
        """Gets the display_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The display_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param display_name: The display_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def manufacturer_part_number(self):
        """Gets the manufacturer_part_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The manufacturer_part_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_part_number

    @manufacturer_part_number.setter
    def manufacturer_part_number(self, manufacturer_part_number):
        """Sets the manufacturer_part_number of this QualerApiModelsAssetToAssetManageResponseModel.


        :param manufacturer_part_number: The manufacturer_part_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._manufacturer_part_number = manufacturer_part_number

    @property
    def asset_room(self):
        """Gets the asset_room of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_room of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_room

    @asset_room.setter
    def asset_room(self, asset_room):
        """Sets the asset_room of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_room: The asset_room of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._asset_room = asset_room

    @property
    def location(self):
        """Gets the location of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The location of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this QualerApiModelsAssetToAssetManageResponseModel.


        :param location: The location of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def station(self):
        """Gets the station of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The station of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._station

    @station.setter
    def station(self, station):
        """Sets the station of this QualerApiModelsAssetToAssetManageResponseModel.


        :param station: The station of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._station = station

    @property
    def tool_role(self):
        """Gets the tool_role of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The tool_role of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._tool_role

    @tool_role.setter
    def tool_role(self, tool_role):
        """Sets the tool_role of this QualerApiModelsAssetToAssetManageResponseModel.


        :param tool_role: The tool_role of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["ReferenceStandard", "EnvironmentalSensor", "ControlledEnvironment", "ScientificInstrument"]  # noqa: E501
        if (self._configuration.client_side_validation and
                tool_role not in allowed_values):
            raise ValueError(
                "Invalid value for `tool_role` ({0}), must be one of {1}"  # noqa: E501
                .format(tool_role, allowed_values)
            )

        self._tool_role = tool_role

    @property
    def tool_id(self):
        """Gets the tool_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The tool_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._tool_id

    @tool_id.setter
    def tool_id(self, tool_id):
        """Sets the tool_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param tool_id: The tool_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._tool_id = tool_id

    @property
    def department_id(self):
        """Gets the department_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The department_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._department_id

    @department_id.setter
    def department_id(self, department_id):
        """Sets the department_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param department_id: The department_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._department_id = department_id

    @property
    def department_name(self):
        """Gets the department_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The department_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._department_name

    @department_name.setter
    def department_name(self, department_name):
        """Sets the department_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param department_name: The department_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._department_name = department_name

    @property
    def custodian_name(self):
        """Gets the custodian_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The custodian_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._custodian_name

    @custodian_name.setter
    def custodian_name(self, custodian_name):
        """Sets the custodian_name of this QualerApiModelsAssetToAssetManageResponseModel.


        :param custodian_name: The custodian_name of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._custodian_name = custodian_name

    @property
    def warranty(self):
        """Gets the warranty of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The warranty of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._warranty

    @warranty.setter
    def warranty(self, warranty):
        """Sets the warranty of this QualerApiModelsAssetToAssetManageResponseModel.


        :param warranty: The warranty of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._warranty = warranty

    @property
    def warranty_end(self):
        """Gets the warranty_end of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The warranty_end of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._warranty_end

    @warranty_end.setter
    def warranty_end(self, warranty_end):
        """Sets the warranty_end of this QualerApiModelsAssetToAssetManageResponseModel.


        :param warranty_end: The warranty_end of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._warranty_end = warranty_end

    @property
    def is_warranty_expired(self):
        """Gets the is_warranty_expired of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The is_warranty_expired of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_warranty_expired

    @is_warranty_expired.setter
    def is_warranty_expired(self, is_warranty_expired):
        """Sets the is_warranty_expired of this QualerApiModelsAssetToAssetManageResponseModel.


        :param is_warranty_expired: The is_warranty_expired of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: bool
        """

        self._is_warranty_expired = is_warranty_expired

    @property
    def depreciation_method(self):
        """Gets the depreciation_method of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The depreciation_method of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._depreciation_method

    @depreciation_method.setter
    def depreciation_method(self, depreciation_method):
        """Sets the depreciation_method of this QualerApiModelsAssetToAssetManageResponseModel.


        :param depreciation_method: The depreciation_method of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._depreciation_method = depreciation_method

    @property
    def depreciation_basis(self):
        """Gets the depreciation_basis of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The depreciation_basis of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._depreciation_basis

    @depreciation_basis.setter
    def depreciation_basis(self, depreciation_basis):
        """Sets the depreciation_basis of this QualerApiModelsAssetToAssetManageResponseModel.


        :param depreciation_basis: The depreciation_basis of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: float
        """

        self._depreciation_basis = depreciation_basis

    @property
    def salvage_value(self):
        """Gets the salvage_value of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The salvage_value of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._salvage_value

    @salvage_value.setter
    def salvage_value(self, salvage_value):
        """Sets the salvage_value of this QualerApiModelsAssetToAssetManageResponseModel.


        :param salvage_value: The salvage_value of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: float
        """

        self._salvage_value = salvage_value

    @property
    def total_service_cost(self):
        """Gets the total_service_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The total_service_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._total_service_cost

    @total_service_cost.setter
    def total_service_cost(self, total_service_cost):
        """Sets the total_service_cost of this QualerApiModelsAssetToAssetManageResponseModel.


        :param total_service_cost: The total_service_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: float
        """

        self._total_service_cost = total_service_cost

    @property
    def life_span_months(self):
        """Gets the life_span_months of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The life_span_months of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._life_span_months

    @life_span_months.setter
    def life_span_months(self, life_span_months):
        """Sets the life_span_months of this QualerApiModelsAssetToAssetManageResponseModel.


        :param life_span_months: The life_span_months of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._life_span_months = life_span_months

    @property
    def due_for_replacement_date(self):
        """Gets the due_for_replacement_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The due_for_replacement_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._due_for_replacement_date

    @due_for_replacement_date.setter
    def due_for_replacement_date(self, due_for_replacement_date):
        """Sets the due_for_replacement_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param due_for_replacement_date: The due_for_replacement_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._due_for_replacement_date = due_for_replacement_date

    @property
    def depreciation_proc(self):
        """Gets the depreciation_proc of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The depreciation_proc of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._depreciation_proc

    @depreciation_proc.setter
    def depreciation_proc(self, depreciation_proc):
        """Sets the depreciation_proc of this QualerApiModelsAssetToAssetManageResponseModel.


        :param depreciation_proc: The depreciation_proc of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: float
        """

        self._depreciation_proc = depreciation_proc

    @property
    def purchase_date(self):
        """Gets the purchase_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The purchase_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._purchase_date

    @purchase_date.setter
    def purchase_date(self, purchase_date):
        """Sets the purchase_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param purchase_date: The purchase_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._purchase_date = purchase_date

    @property
    def purchase_cost(self):
        """Gets the purchase_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The purchase_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._purchase_cost

    @purchase_cost.setter
    def purchase_cost(self, purchase_cost):
        """Sets the purchase_cost of this QualerApiModelsAssetToAssetManageResponseModel.


        :param purchase_cost: The purchase_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: float
        """

        self._purchase_cost = purchase_cost

    @property
    def time_in_service(self):
        """Gets the time_in_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The time_in_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._time_in_service

    @time_in_service.setter
    def time_in_service(self, time_in_service):
        """Sets the time_in_service of this QualerApiModelsAssetToAssetManageResponseModel.


        :param time_in_service: The time_in_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._time_in_service = time_in_service

    @property
    def retirement_reason(self):
        """Gets the retirement_reason of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The retirement_reason of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._retirement_reason

    @retirement_reason.setter
    def retirement_reason(self, retirement_reason):
        """Sets the retirement_reason of this QualerApiModelsAssetToAssetManageResponseModel.


        :param retirement_reason: The retirement_reason of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._retirement_reason = retirement_reason

    @property
    def residual_cost(self):
        """Gets the residual_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The residual_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: float
        """
        return self._residual_cost

    @residual_cost.setter
    def residual_cost(self, residual_cost):
        """Sets the residual_cost of this QualerApiModelsAssetToAssetManageResponseModel.


        :param residual_cost: The residual_cost of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: float
        """

        self._residual_cost = residual_cost

    @property
    def employee_id(self):
        """Gets the employee_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The employee_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param employee_id: The employee_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._employee_id = employee_id

    @property
    def asset_service_record_id(self):
        """Gets the asset_service_record_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The asset_service_record_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._asset_service_record_id

    @asset_service_record_id.setter
    def asset_service_record_id(self, asset_service_record_id):
        """Sets the asset_service_record_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param asset_service_record_id: The asset_service_record_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._asset_service_record_id = asset_service_record_id

    @property
    def result_status(self):
        """Gets the result_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The result_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._result_status

    @result_status.setter
    def result_status(self, result_status):
        """Sets the result_status of this QualerApiModelsAssetToAssetManageResponseModel.


        :param result_status: The result_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["NotAvailable", "Fail", "FailAmbiguous", "FailSignificant", "Pass", "PassAmbiguous", "PassAdjustment", "Done", "Pending", "Missed"]  # noqa: E501
        if (self._configuration.client_side_validation and
                result_status not in allowed_values):
            raise ValueError(
                "Invalid value for `result_status` ({0}), must be one of {1}"  # noqa: E501
                .format(result_status, allowed_values)
            )

        self._result_status = result_status

    @property
    def as_found_result(self):
        """Gets the as_found_result of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The as_found_result of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._as_found_result

    @as_found_result.setter
    def as_found_result(self, as_found_result):
        """Sets the as_found_result of this QualerApiModelsAssetToAssetManageResponseModel.


        :param as_found_result: The as_found_result of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["NotAvailable", "Fail", "FailAmbiguous", "FailSignificant", "Pass", "PassAmbiguous", "PassAdjustment", "Done", "Pending", "Missed"]  # noqa: E501
        if (self._configuration.client_side_validation and
                as_found_result not in allowed_values):
            raise ValueError(
                "Invalid value for `as_found_result` ({0}), must be one of {1}"  # noqa: E501
                .format(as_found_result, allowed_values)
            )

        self._as_found_result = as_found_result

    @property
    def as_left_result(self):
        """Gets the as_left_result of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The as_left_result of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._as_left_result

    @as_left_result.setter
    def as_left_result(self, as_left_result):
        """Sets the as_left_result of this QualerApiModelsAssetToAssetManageResponseModel.


        :param as_left_result: The as_left_result of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["NotAvailable", "Fail", "FailAmbiguous", "FailSignificant", "Pass", "PassAmbiguous", "PassAdjustment", "Done", "Pending", "Missed"]  # noqa: E501
        if (self._configuration.client_side_validation and
                as_left_result not in allowed_values):
            raise ValueError(
                "Invalid value for `as_left_result` ({0}), must be one of {1}"  # noqa: E501
                .format(as_left_result, allowed_values)
            )

        self._as_left_result = as_left_result

    @property
    def last_service_date(self):
        """Gets the last_service_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The last_service_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._last_service_date

    @last_service_date.setter
    def last_service_date(self, last_service_date):
        """Sets the last_service_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param last_service_date: The last_service_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._last_service_date = last_service_date

    @property
    def last_service(self):
        """Gets the last_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The last_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._last_service

    @last_service.setter
    def last_service(self, last_service):
        """Sets the last_service of this QualerApiModelsAssetToAssetManageResponseModel.


        :param last_service: The last_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._last_service = last_service

    @property
    def next_service_date(self):
        """Gets the next_service_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The next_service_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._next_service_date

    @next_service_date.setter
    def next_service_date(self, next_service_date):
        """Sets the next_service_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param next_service_date: The next_service_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._next_service_date = next_service_date

    @property
    def next_service(self):
        """Gets the next_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The next_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._next_service

    @next_service.setter
    def next_service(self, next_service):
        """Sets the next_service of this QualerApiModelsAssetToAssetManageResponseModel.


        :param next_service: The next_service of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._next_service = next_service

    @property
    def service_schedule_segment_id(self):
        """Gets the service_schedule_segment_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The service_schedule_segment_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._service_schedule_segment_id

    @service_schedule_segment_id.setter
    def service_schedule_segment_id(self, service_schedule_segment_id):
        """Sets the service_schedule_segment_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param service_schedule_segment_id: The service_schedule_segment_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._service_schedule_segment_id = service_schedule_segment_id

    @property
    def service_schedule_id(self):
        """Gets the service_schedule_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The service_schedule_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._service_schedule_id

    @service_schedule_id.setter
    def service_schedule_id(self, service_schedule_id):
        """Sets the service_schedule_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param service_schedule_id: The service_schedule_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._service_schedule_id = service_schedule_id

    @property
    def service_schedule(self):
        """Gets the service_schedule of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The service_schedule of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._service_schedule

    @service_schedule.setter
    def service_schedule(self, service_schedule):
        """Sets the service_schedule of this QualerApiModelsAssetToAssetManageResponseModel.


        :param service_schedule: The service_schedule of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._service_schedule = service_schedule

    @property
    def service_order_id(self):
        """Gets the service_order_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The service_order_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._service_order_id

    @service_order_id.setter
    def service_order_id(self, service_order_id):
        """Sets the service_order_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param service_order_id: The service_order_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._service_order_id = service_order_id

    @property
    def service_order_status(self):
        """Gets the service_order_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The service_order_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._service_order_status

    @service_order_status.setter
    def service_order_status(self, service_order_status):
        """Sets the service_order_status of this QualerApiModelsAssetToAssetManageResponseModel.


        :param service_order_status: The service_order_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["New", "Draft", "WaitingForApproval", "Submitted", "Processing", "QualityControl", "Cancelled", "WaitingForClientSignOff", "Completed", "Denied", "Delayed", "Scheduling", "Closed", "WaitingForVendorSignOff", "DelayedApproval", "Ready"]  # noqa: E501
        if (self._configuration.client_side_validation and
                service_order_status not in allowed_values):
            raise ValueError(
                "Invalid value for `service_order_status` ({0}), must be one of {1}"  # noqa: E501
                .format(service_order_status, allowed_values)
            )

        self._service_order_status = service_order_status

    @property
    def custom_order_number(self):
        """Gets the custom_order_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The custom_order_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._custom_order_number

    @custom_order_number.setter
    def custom_order_number(self, custom_order_number):
        """Sets the custom_order_number of this QualerApiModelsAssetToAssetManageResponseModel.


        :param custom_order_number: The custom_order_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._custom_order_number = custom_order_number

    @property
    def service_order_item_id(self):
        """Gets the service_order_item_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The service_order_item_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._service_order_item_id

    @service_order_item_id.setter
    def service_order_item_id(self, service_order_item_id):
        """Sets the service_order_item_id of this QualerApiModelsAssetToAssetManageResponseModel.


        :param service_order_item_id: The service_order_item_id of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: int
        """

        self._service_order_item_id = service_order_item_id

    @property
    def vendor(self):
        """Gets the vendor of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The vendor of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this QualerApiModelsAssetToAssetManageResponseModel.


        :param vendor: The vendor of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._vendor = vendor

    @property
    def technician(self):
        """Gets the technician of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The technician of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._technician

    @technician.setter
    def technician(self, technician):
        """Sets the technician of this QualerApiModelsAssetToAssetManageResponseModel.


        :param technician: The technician of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._technician = technician

    @property
    def certificate_number(self):
        """Gets the certificate_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The certificate_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._certificate_number

    @certificate_number.setter
    def certificate_number(self, certificate_number):
        """Sets the certificate_number of this QualerApiModelsAssetToAssetManageResponseModel.


        :param certificate_number: The certificate_number of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """

        self._certificate_number = certificate_number

    @property
    def due_trigger_date(self):
        """Gets the due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._due_trigger_date

    @due_trigger_date.setter
    def due_trigger_date(self, due_trigger_date):
        """Sets the due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param due_trigger_date: The due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._due_trigger_date = due_trigger_date

    @property
    def past_due_trigger_date(self):
        """Gets the past_due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The past_due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._past_due_trigger_date

    @past_due_trigger_date.setter
    def past_due_trigger_date(self, past_due_trigger_date):
        """Sets the past_due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.


        :param past_due_trigger_date: The past_due_trigger_date of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: datetime
        """

        self._past_due_trigger_date = past_due_trigger_date

    @property
    def due_status(self):
        """Gets the due_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The due_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._due_status

    @due_status.setter
    def due_status(self, due_status):
        """Sets the due_status of this QualerApiModelsAssetToAssetManageResponseModel.


        :param due_status: The due_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["Empty", "Due", "PastDue"]  # noqa: E501
        if (self._configuration.client_side_validation and
                due_status not in allowed_values):
            raise ValueError(
                "Invalid value for `due_status` ({0}), must be one of {1}"  # noqa: E501
                .format(due_status, allowed_values)
            )

        self._due_status = due_status

    @property
    def work_status(self):
        """Gets the work_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501


        :return: The work_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._work_status

    @work_status.setter
    def work_status(self, work_status):
        """Sets the work_status of this QualerApiModelsAssetToAssetManageResponseModel.


        :param work_status: The work_status of this QualerApiModelsAssetToAssetManageResponseModel.  # noqa: E501
        :type: str
        """
        allowed_values = ["Pending", "InProgress", "Completed", "Delayed", "Withdrawn", "Locked", "New", "Closed", "Wait"]  # noqa: E501
        if (self._configuration.client_side_validation and
                work_status not in allowed_values):
            raise ValueError(
                "Invalid value for `work_status` ({0}), must be one of {1}"  # noqa: E501
                .format(work_status, allowed_values)
            )

        self._work_status = work_status

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsAssetToAssetManageResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetManageResponseModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetManageResponseModel):
            return True

        return self.to_dict() != other.to_dict()
