# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.configuration import Configuration


class QualerApiModelsAssetToClientAssetCountersResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'client_assets_collected': 'int',
        'client_unset': 'int',
        'client_due_for_service': 'int',
        'client_past_due': 'int',
        'client_out_of_service': 'int',
        'client_without_schedule': 'int'
    }

    attribute_map = {
        'client_assets_collected': 'ClientAssetsCollected',
        'client_unset': 'ClientUnset',
        'client_due_for_service': 'ClientDueForService',
        'client_past_due': 'ClientPastDue',
        'client_out_of_service': 'ClientOutOfService',
        'client_without_schedule': 'ClientWithoutSchedule'
    }

    def __init__(self, client_assets_collected=None, client_unset=None, client_due_for_service=None, client_past_due=None, client_out_of_service=None, client_without_schedule=None, _configuration=None):  # noqa: E501
        """QualerApiModelsAssetToClientAssetCountersResponseModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._client_assets_collected = None
        self._client_unset = None
        self._client_due_for_service = None
        self._client_past_due = None
        self._client_out_of_service = None
        self._client_without_schedule = None
        self.discriminator = None

        if client_assets_collected is not None:
            self.client_assets_collected = client_assets_collected
        if client_unset is not None:
            self.client_unset = client_unset
        if client_due_for_service is not None:
            self.client_due_for_service = client_due_for_service
        if client_past_due is not None:
            self.client_past_due = client_past_due
        if client_out_of_service is not None:
            self.client_out_of_service = client_out_of_service
        if client_without_schedule is not None:
            self.client_without_schedule = client_without_schedule

    @property
    def client_assets_collected(self):
        """Gets the client_assets_collected of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501


        :return: The client_assets_collected of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._client_assets_collected

    @client_assets_collected.setter
    def client_assets_collected(self, client_assets_collected):
        """Sets the client_assets_collected of this QualerApiModelsAssetToClientAssetCountersResponseModel.


        :param client_assets_collected: The client_assets_collected of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :type: int
        """

        self._client_assets_collected = client_assets_collected

    @property
    def client_unset(self):
        """Gets the client_unset of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501


        :return: The client_unset of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._client_unset

    @client_unset.setter
    def client_unset(self, client_unset):
        """Sets the client_unset of this QualerApiModelsAssetToClientAssetCountersResponseModel.


        :param client_unset: The client_unset of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :type: int
        """

        self._client_unset = client_unset

    @property
    def client_due_for_service(self):
        """Gets the client_due_for_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501


        :return: The client_due_for_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._client_due_for_service

    @client_due_for_service.setter
    def client_due_for_service(self, client_due_for_service):
        """Sets the client_due_for_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.


        :param client_due_for_service: The client_due_for_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :type: int
        """

        self._client_due_for_service = client_due_for_service

    @property
    def client_past_due(self):
        """Gets the client_past_due of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501


        :return: The client_past_due of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._client_past_due

    @client_past_due.setter
    def client_past_due(self, client_past_due):
        """Sets the client_past_due of this QualerApiModelsAssetToClientAssetCountersResponseModel.


        :param client_past_due: The client_past_due of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :type: int
        """

        self._client_past_due = client_past_due

    @property
    def client_out_of_service(self):
        """Gets the client_out_of_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501


        :return: The client_out_of_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._client_out_of_service

    @client_out_of_service.setter
    def client_out_of_service(self, client_out_of_service):
        """Sets the client_out_of_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.


        :param client_out_of_service: The client_out_of_service of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :type: int
        """

        self._client_out_of_service = client_out_of_service

    @property
    def client_without_schedule(self):
        """Gets the client_without_schedule of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501


        :return: The client_without_schedule of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._client_without_schedule

    @client_without_schedule.setter
    def client_without_schedule(self, client_without_schedule):
        """Sets the client_without_schedule of this QualerApiModelsAssetToClientAssetCountersResponseModel.


        :param client_without_schedule: The client_without_schedule of this QualerApiModelsAssetToClientAssetCountersResponseModel.  # noqa: E501
        :type: int
        """

        self._client_without_schedule = client_without_schedule

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsAssetToClientAssetCountersResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsAssetToClientAssetCountersResponseModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsAssetToClientAssetCountersResponseModel):
            return True

        return self.to_dict() != other.to_dict()
