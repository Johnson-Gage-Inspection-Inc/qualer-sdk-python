# coding: utf-8

"""
    Qualer.Web.Mvc

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsVendorsToVendorCompanyResponseModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_number_text': 'str',
        'account_number': 'int',
        'currency_id': 'int',
        'company_id': 'int',
        'company_name': 'str',
        'domain_name': 'str',
        'custom_name': 'str',
        'billing_address': 'QualerApiModelsAddressToAddressResponseModel',
        'shipping_address': 'QualerApiModelsAddressToAddressResponseModel',
        'updated_on_utc': 'datetime'
    }

    attribute_map = {
        'account_number_text': 'AccountNumberText',
        'account_number': 'AccountNumber',
        'currency_id': 'CurrencyId',
        'company_id': 'CompanyId',
        'company_name': 'CompanyName',
        'domain_name': 'DomainName',
        'custom_name': 'CustomName',
        'billing_address': 'BillingAddress',
        'shipping_address': 'ShippingAddress',
        'updated_on_utc': 'UpdatedOnUtc'
    }

    def __init__(self, account_number_text=None, account_number=None, currency_id=None, company_id=None, company_name=None, domain_name=None, custom_name=None, billing_address=None, shipping_address=None, updated_on_utc=None, _configuration=None):  # noqa: E501
        """QualerApiModelsVendorsToVendorCompanyResponseModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._account_number_text = None
        self._account_number = None
        self._currency_id = None
        self._company_id = None
        self._company_name = None
        self._domain_name = None
        self._custom_name = None
        self._billing_address = None
        self._shipping_address = None
        self._updated_on_utc = None
        self.discriminator = None

        if account_number_text is not None:
            self.account_number_text = account_number_text
        if account_number is not None:
            self.account_number = account_number
        if currency_id is not None:
            self.currency_id = currency_id
        if company_id is not None:
            self.company_id = company_id
        if company_name is not None:
            self.company_name = company_name
        if domain_name is not None:
            self.domain_name = domain_name
        if custom_name is not None:
            self.custom_name = custom_name
        if billing_address is not None:
            self.billing_address = billing_address
        if shipping_address is not None:
            self.shipping_address = shipping_address
        if updated_on_utc is not None:
            self.updated_on_utc = updated_on_utc

    @property
    def account_number_text(self):
        """Gets the account_number_text of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The account_number_text of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._account_number_text

    @account_number_text.setter
    def account_number_text(self, account_number_text):
        """Sets the account_number_text of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param account_number_text: The account_number_text of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: str
        """

        self._account_number_text = account_number_text

    @property
    def account_number(self):
        """Gets the account_number of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The account_number of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param account_number: The account_number of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: int
        """

        self._account_number = account_number

    @property
    def currency_id(self):
        """Gets the currency_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The currency_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param currency_id: The currency_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: int
        """

        self._currency_id = currency_id

    @property
    def company_id(self):
        """Gets the company_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The company_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param company_id: The company_id of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def company_name(self):
        """Gets the company_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The company_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param company_name: The company_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def domain_name(self):
        """Gets the domain_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The domain_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name):
        """Sets the domain_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param domain_name: The domain_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: str
        """

        self._domain_name = domain_name

    @property
    def custom_name(self):
        """Gets the custom_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The custom_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: str
        """
        return self._custom_name

    @custom_name.setter
    def custom_name(self, custom_name):
        """Sets the custom_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param custom_name: The custom_name of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: str
        """

        self._custom_name = custom_name

    @property
    def billing_address(self):
        """Gets the billing_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The billing_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: QualerApiModelsAddressToAddressResponseModel
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param billing_address: The billing_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: QualerApiModelsAddressToAddressResponseModel
        """

        self._billing_address = billing_address

    @property
    def shipping_address(self):
        """Gets the shipping_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The shipping_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: QualerApiModelsAddressToAddressResponseModel
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param shipping_address: The shipping_address of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: QualerApiModelsAddressToAddressResponseModel
        """

        self._shipping_address = shipping_address

    @property
    def updated_on_utc(self):
        """Gets the updated_on_utc of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501


        :return: The updated_on_utc of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_on_utc

    @updated_on_utc.setter
    def updated_on_utc(self, updated_on_utc):
        """Sets the updated_on_utc of this QualerApiModelsVendorsToVendorCompanyResponseModel.


        :param updated_on_utc: The updated_on_utc of this QualerApiModelsVendorsToVendorCompanyResponseModel.  # noqa: E501
        :type: datetime
        """

        self._updated_on_utc = updated_on_utc

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(QualerApiModelsVendorsToVendorCompanyResponseModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsVendorsToVendorCompanyResponseModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsVendorsToVendorCompanyResponseModel):
            return True

        return self.to_dict() != other.to_dict()
