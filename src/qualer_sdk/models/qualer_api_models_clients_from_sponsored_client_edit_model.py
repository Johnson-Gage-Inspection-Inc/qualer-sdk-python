# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from pydantic import BaseModel, Field, StrictInt, StrictStr, validator

from qualer_sdk.models.qualer_api_models_address_address_model import (
    QualerApiModelsAddressAddressModel,
)


class QualerApiModelsClientsFromSponsoredClientEditModel(BaseModel):
    """
    QualerApiModelsClientsFromSponsoredClientEditModel
    """

    company_id: Optional[StrictInt] = Field(None, alias="CompanyId")
    account_number_text: Optional[StrictStr] = Field(None, alias="AccountNumberText")
    client_status: Optional[StrictStr] = Field(None, alias="ClientStatus")
    domain_name: Optional[StrictStr] = Field(None, alias="DomainName")
    custom_client_name: Optional[StrictStr] = Field(None, alias="CustomClientName")
    legacy_id: Optional[StrictStr] = Field(None, alias="LegacyId")
    currency_id: Optional[StrictInt] = Field(None, alias="CurrencyId")
    account_representative_employee_id: Optional[StrictInt] = Field(
        None, alias="AccountRepresentativeEmployeeId"
    )
    account_representative_site_id: Optional[StrictInt] = Field(
        None, alias="AccountRepresentativeSiteId"
    )
    account_manager_employee_id: Optional[StrictInt] = Field(
        None, alias="AccountManagerEmployeeId"
    )
    company_name: Optional[StrictStr] = Field(None, alias="CompanyName")
    billing_address: Optional[QualerApiModelsAddressAddressModel] = Field(
        None, alias="BillingAddress"
    )
    shipping_address: Optional[QualerApiModelsAddressAddressModel] = Field(
        None, alias="ShippingAddress"
    )
    __properties = [
        "CompanyId",
        "AccountNumberText",
        "ClientStatus",
        "DomainName",
        "CustomClientName",
        "LegacyId",
        "CurrencyId",
        "AccountRepresentativeEmployeeId",
        "AccountRepresentativeSiteId",
        "AccountManagerEmployeeId",
        "CompanyName",
        "BillingAddress",
        "ShippingAddress",
    ]

    @validator("client_status")
    def client_status_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in ("Prospect", "Approved", "NotApproved", "Hidden"):
            raise ValueError(
                "must be one of enum values ('Prospect', 'Approved', 'NotApproved', 'Hidden')"
            )
        return value

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsClientsFromSponsoredClientEditModel:
        """Create an instance of QualerApiModelsClientsFromSponsoredClientEditModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of billing_address
        if self.billing_address:
            _dict["BillingAddress"] = self.billing_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of shipping_address
        if self.shipping_address:
            _dict["ShippingAddress"] = self.shipping_address.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QualerApiModelsClientsFromSponsoredClientEditModel:
        """Create an instance of QualerApiModelsClientsFromSponsoredClientEditModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsClientsFromSponsoredClientEditModel.parse_obj(obj)

        _obj = QualerApiModelsClientsFromSponsoredClientEditModel.parse_obj(
            {
                "company_id": obj.get("CompanyId"),
                "account_number_text": obj.get("AccountNumberText"),
                "client_status": obj.get("ClientStatus"),
                "domain_name": obj.get("DomainName"),
                "custom_client_name": obj.get("CustomClientName"),
                "legacy_id": obj.get("LegacyId"),
                "currency_id": obj.get("CurrencyId"),
                "account_representative_employee_id": obj.get(
                    "AccountRepresentativeEmployeeId"
                ),
                "account_representative_site_id": obj.get(
                    "AccountRepresentativeSiteId"
                ),
                "account_manager_employee_id": obj.get("AccountManagerEmployeeId"),
                "company_name": obj.get("CompanyName"),
                "billing_address": (
                    QualerApiModelsAddressAddressModel.from_dict(
                        obj.get("BillingAddress")
                    )
                    if obj.get("BillingAddress") is not None
                    else None
                ),
                "shipping_address": (
                    QualerApiModelsAddressAddressModel.from_dict(
                        obj.get("ShippingAddress")
                    )
                    if obj.get("ShippingAddress") is not None
                    else None
                ),
            }
        )
        return _obj
