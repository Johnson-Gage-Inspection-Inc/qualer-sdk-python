# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Any, ClassVar, Dict, List, Optional, Set, Union

from pydantic import (
    BaseModel,
    ConfigDict,
    Field,
    StrictBool,
    StrictFloat,
    StrictInt,
    StrictStr,
)
from typing_extensions import Self

from qualer_sdk.models.qualer_api_models_address_to_address_response_model import (
    QualerApiModelsAddressToAddressResponseModel,
)


class QualerApiModelsServiceOrdersToClientOrderResponseModel(BaseModel):
    """
    QualerApiModelsServiceOrdersToClientOrderResponseModel
    """  # noqa: E501

    service_order_id: Optional[StrictInt] = Field(default=None, alias="ServiceOrderId")
    parent_order_id: Optional[StrictInt] = Field(default=None, alias="ParentOrderId")
    client_legacy_id: Optional[StrictStr] = Field(default=None, alias="ClientLegacyId")
    owner_name: Optional[StrictStr] = Field(default=None, alias="OwnerName")
    submited_by_name: Optional[StrictStr] = Field(default=None, alias="SubmitedByName")
    sign_off_by_name: Optional[StrictStr] = Field(default=None, alias="SignOffByName")
    vendor_sign_off_by_name: Optional[StrictStr] = Field(
        default=None, alias="VendorSignOffByName"
    )
    approved_by_name: Optional[StrictStr] = Field(default=None, alias="ApprovedByName")
    accepted_by_name: Optional[StrictStr] = Field(default=None, alias="AcceptedByName")
    ready_for_quality_control_by_name: Optional[StrictStr] = Field(
        default=None, alias="ReadyForQualityControlByName"
    )
    quality_control_by_name: Optional[StrictStr] = Field(
        default=None, alias="QualityControlByName"
    )
    created_by_name: Optional[StrictStr] = Field(default=None, alias="CreatedByName")
    completed_by_name: Optional[StrictStr] = Field(
        default=None, alias="CompletedByName"
    )
    shipped_by_name: Optional[StrictStr] = Field(default=None, alias="ShippedByName")
    delivered_by_name: Optional[StrictStr] = Field(
        default=None, alias="DeliveredByName"
    )
    invoiced_by_name: Optional[StrictStr] = Field(default=None, alias="InvoicedByName")
    paid_by_name: Optional[StrictStr] = Field(default=None, alias="PaidByName")
    cancelled_by_name: Optional[StrictStr] = Field(
        default=None, alias="CancelledByName"
    )
    closed_by_name: Optional[StrictStr] = Field(default=None, alias="ClosedByName")
    client_company_id: Optional[StrictInt] = Field(
        default=None, alias="ClientCompanyId"
    )
    client_company_name: Optional[StrictStr] = Field(
        default=None, alias="ClientCompanyName"
    )
    client_domain_name: Optional[StrictStr] = Field(
        default=None, alias="ClientDomainName"
    )
    client_alternative_names: Optional[StrictStr] = Field(
        default=None, alias="ClientAlternativeNames"
    )
    service_comments: Optional[StrictStr] = Field(default=None, alias="ServiceComments")
    service_private_comments: Optional[StrictStr] = Field(
        default=None, alias="ServicePrivateComments"
    )
    created_on: Optional[datetime] = Field(default=None, alias="CreatedOn")
    approved_on: Optional[datetime] = Field(default=None, alias="ApprovedOn")
    sign_off_on: Optional[datetime] = Field(default=None, alias="SignOffOn")
    vendor_sign_off_on: Optional[datetime] = Field(
        default=None, alias="VendorSignOffOn"
    )
    completed_on: Optional[datetime] = Field(default=None, alias="CompletedOn")
    submited_on: Optional[datetime] = Field(default=None, alias="SubmitedOn")
    shipped_on: Optional[datetime] = Field(default=None, alias="ShippedOn")
    accepted_on: Optional[datetime] = Field(default=None, alias="AcceptedOn")
    ready_for_quality_control_on: Optional[datetime] = Field(
        default=None, alias="ReadyForQualityControlOn"
    )
    quality_control_on: Optional[datetime] = Field(
        default=None, alias="QualityControlOn"
    )
    delivered_on: Optional[datetime] = Field(default=None, alias="DeliveredOn")
    invoiced_on: Optional[datetime] = Field(default=None, alias="InvoicedOn")
    last_invoiced_on: Optional[datetime] = Field(default=None, alias="LastInvoicedOn")
    payment_due_on: Optional[datetime] = Field(default=None, alias="PaymentDueOn")
    paid_on: Optional[datetime] = Field(default=None, alias="PaidOn")
    late_fee_on: Optional[datetime] = Field(default=None, alias="LateFeeOn")
    cancelled_on: Optional[datetime] = Field(default=None, alias="CancelledOn")
    closed_on: Optional[datetime] = Field(default=None, alias="ClosedOn")
    last_updated_on: Optional[datetime] = Field(default=None, alias="LastUpdatedOn")
    last_updated_by: Optional[StrictStr] = Field(default=None, alias="LastUpdatedBy")
    submited_by_id: Optional[StrictInt] = Field(default=None, alias="SubmitedById")
    sign_off_by_id: Optional[StrictInt] = Field(default=None, alias="SignOffById")
    vendor_sign_off_by_id: Optional[StrictInt] = Field(
        default=None, alias="VendorSignOffById"
    )
    approved_by_id: Optional[StrictInt] = Field(default=None, alias="ApprovedById")
    late_fee_by_id: Optional[StrictInt] = Field(default=None, alias="LateFeeById")
    accepted_by_id: Optional[StrictInt] = Field(default=None, alias="AcceptedById")
    ready_for_quality_control_by_id: Optional[StrictInt] = Field(
        default=None, alias="ReadyForQualityControlById"
    )
    quality_control_by_id: Optional[StrictInt] = Field(
        default=None, alias="QualityControlById"
    )
    created_by_id: Optional[StrictInt] = Field(default=None, alias="CreatedById")
    completed_by_id: Optional[StrictInt] = Field(default=None, alias="CompletedById")
    shipped_by_id: Optional[StrictInt] = Field(default=None, alias="ShippedById")
    delivered_by_id: Optional[StrictInt] = Field(default=None, alias="DeliveredById")
    invoiced_by_id: Optional[StrictInt] = Field(default=None, alias="InvoicedById")
    paid_by_id: Optional[StrictInt] = Field(default=None, alias="PaidById")
    cancelled_by_id: Optional[StrictInt] = Field(default=None, alias="CancelledById")
    closed_by_id: Optional[StrictInt] = Field(default=None, alias="ClosedById")
    po_number: Optional[StrictStr] = Field(default=None, alias="PoNumber")
    secondary_po: Optional[StrictStr] = Field(default=None, alias="SecondaryPo")
    service_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="ServiceTotal"
    )
    repairs_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="RepairsTotal"
    )
    parts_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsTotal"
    )
    parts_total_before_discount: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsTotalBeforeDiscount"
    )
    parts_discount_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsDiscountTotal"
    )
    effective_tax_rate: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="EffectiveTaxRate"
    )
    tax_amount: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="TaxAmount"
    )
    shipping_fee: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="ShippingFee"
    )
    travel_charge: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="TravelCharge"
    )
    late_fee: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="LateFee"
    )
    is_tax_exempt: Optional[StrictBool] = Field(default=None, alias="IsTaxExempt")
    service_discount: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="ServiceDiscount"
    )
    trade_in_credit: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="TradeInCredit"
    )
    prepaid_credit: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PrepaidCredit"
    )
    grand_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="GrandTotal"
    )
    paid_amount: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PaidAmount"
    )
    remaining_balance: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="RemainingBalance"
    )
    service_discount_details: Optional[StrictStr] = Field(
        default=None, alias="ServiceDiscountDetails"
    )
    trade_in_credit_details: Optional[StrictStr] = Field(
        default=None, alias="TradeInCreditDetails"
    )
    prepaid_credit_details: Optional[StrictStr] = Field(
        default=None, alias="PrepaidCreditDetails"
    )
    payment_notes: Optional[StrictStr] = Field(default=None, alias="PaymentNotes")
    service_order_number: Optional[StrictInt] = Field(
        default=None, alias="ServiceOrderNumber"
    )
    legacy_order_number: Optional[StrictStr] = Field(
        default=None, alias="LegacyOrderNumber"
    )
    custom_order_number: Optional[StrictStr] = Field(
        default=None, alias="CustomOrderNumber"
    )
    payment_status: Optional[StrictStr] = Field(default=None, alias="PaymentStatus")
    payment_option: Optional[StrictStr] = Field(default=None, alias="PaymentOption")
    shipment_status: Optional[StrictStr] = Field(default=None, alias="ShipmentStatus")
    order_status: Optional[StrictStr] = Field(default=None, alias="OrderStatus")
    owner_id: Optional[StrictInt] = Field(default=None, alias="OwnerId")
    owner_department: Optional[StrictStr] = Field(default=None, alias="OwnerDepartment")
    client_site: Optional[StrictStr] = Field(default=None, alias="ClientSite")
    client_site_code: Optional[StrictStr] = Field(default=None, alias="ClientSiteCode")
    vendor_site: Optional[StrictStr] = Field(default=None, alias="VendorSite")
    internal: Optional[StrictBool] = Field(default=None, alias="Internal")
    guid: Optional[StrictStr] = Field(default=None, alias="Guid")
    business_from_time: Optional[datetime] = Field(
        default=None, alias="BusinessFromTime"
    )
    business_to_time: Optional[datetime] = Field(default=None, alias="BusinessToTime")
    site_access_notes: Optional[StrictStr] = Field(
        default=None, alias="SiteAccessNotes"
    )
    desired_date: Optional[datetime] = Field(default=None, alias="DesiredDate")
    deadline_date: Optional[datetime] = Field(default=None, alias="DeadlineDate")
    request_from_date: Optional[datetime] = Field(default=None, alias="RequestFromDate")
    request_from_time: Optional[datetime] = Field(default=None, alias="RequestFromTime")
    request_to_date: Optional[datetime] = Field(default=None, alias="RequestToDate")
    request_to_time: Optional[datetime] = Field(default=None, alias="RequestToTime")
    order_notes: Optional[StrictStr] = Field(default=None, alias="OrderNotes")
    billing_address: Optional[QualerApiModelsAddressToAddressResponseModel] = Field(
        default=None, alias="BillingAddress"
    )
    shipping_address: Optional[QualerApiModelsAddressToAddressResponseModel] = Field(
        default=None, alias="ShippingAddress"
    )
    __properties: ClassVar[List[str]] = [
        "ServiceOrderId",
        "ParentOrderId",
        "ClientLegacyId",
        "OwnerName",
        "SubmitedByName",
        "SignOffByName",
        "VendorSignOffByName",
        "ApprovedByName",
        "AcceptedByName",
        "ReadyForQualityControlByName",
        "QualityControlByName",
        "CreatedByName",
        "CompletedByName",
        "ShippedByName",
        "DeliveredByName",
        "InvoicedByName",
        "PaidByName",
        "CancelledByName",
        "ClosedByName",
        "ClientCompanyId",
        "ClientCompanyName",
        "ClientDomainName",
        "ClientAlternativeNames",
        "ServiceComments",
        "ServicePrivateComments",
        "CreatedOn",
        "ApprovedOn",
        "SignOffOn",
        "VendorSignOffOn",
        "CompletedOn",
        "SubmitedOn",
        "ShippedOn",
        "AcceptedOn",
        "ReadyForQualityControlOn",
        "QualityControlOn",
        "DeliveredOn",
        "InvoicedOn",
        "LastInvoicedOn",
        "PaymentDueOn",
        "PaidOn",
        "LateFeeOn",
        "CancelledOn",
        "ClosedOn",
        "LastUpdatedOn",
        "LastUpdatedBy",
        "SubmitedById",
        "SignOffById",
        "VendorSignOffById",
        "ApprovedById",
        "LateFeeById",
        "AcceptedById",
        "ReadyForQualityControlById",
        "QualityControlById",
        "CreatedById",
        "CompletedById",
        "ShippedById",
        "DeliveredById",
        "InvoicedById",
        "PaidById",
        "CancelledById",
        "ClosedById",
        "PoNumber",
        "SecondaryPo",
        "ServiceTotal",
        "RepairsTotal",
        "PartsTotal",
        "PartsTotalBeforeDiscount",
        "PartsDiscountTotal",
        "EffectiveTaxRate",
        "TaxAmount",
        "ShippingFee",
        "TravelCharge",
        "LateFee",
        "IsTaxExempt",
        "ServiceDiscount",
        "TradeInCredit",
        "PrepaidCredit",
        "GrandTotal",
        "PaidAmount",
        "RemainingBalance",
        "ServiceDiscountDetails",
        "TradeInCreditDetails",
        "PrepaidCreditDetails",
        "PaymentNotes",
        "ServiceOrderNumber",
        "LegacyOrderNumber",
        "CustomOrderNumber",
        "PaymentStatus",
        "PaymentOption",
        "ShipmentStatus",
        "OrderStatus",
        "OwnerId",
        "OwnerDepartment",
        "ClientSite",
        "ClientSiteCode",
        "VendorSite",
        "Internal",
        "Guid",
        "BusinessFromTime",
        "BusinessToTime",
        "SiteAccessNotes",
        "DesiredDate",
        "DeadlineDate",
        "RequestFromDate",
        "RequestFromTime",
        "RequestToDate",
        "RequestToTime",
        "OrderNotes",
        "BillingAddress",
        "ShippingAddress",
    ]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of QualerApiModelsServiceOrdersToClientOrderResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of billing_address
        if self.billing_address:
            _dict["BillingAddress"] = self.billing_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of shipping_address
        if self.shipping_address:
            _dict["ShippingAddress"] = self.shipping_address.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of QualerApiModelsServiceOrdersToClientOrderResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate(
            {
                "ServiceOrderId": obj.get("ServiceOrderId"),
                "ParentOrderId": obj.get("ParentOrderId"),
                "ClientLegacyId": obj.get("ClientLegacyId"),
                "OwnerName": obj.get("OwnerName"),
                "SubmitedByName": obj.get("SubmitedByName"),
                "SignOffByName": obj.get("SignOffByName"),
                "VendorSignOffByName": obj.get("VendorSignOffByName"),
                "ApprovedByName": obj.get("ApprovedByName"),
                "AcceptedByName": obj.get("AcceptedByName"),
                "ReadyForQualityControlByName": obj.get("ReadyForQualityControlByName"),
                "QualityControlByName": obj.get("QualityControlByName"),
                "CreatedByName": obj.get("CreatedByName"),
                "CompletedByName": obj.get("CompletedByName"),
                "ShippedByName": obj.get("ShippedByName"),
                "DeliveredByName": obj.get("DeliveredByName"),
                "InvoicedByName": obj.get("InvoicedByName"),
                "PaidByName": obj.get("PaidByName"),
                "CancelledByName": obj.get("CancelledByName"),
                "ClosedByName": obj.get("ClosedByName"),
                "ClientCompanyId": obj.get("ClientCompanyId"),
                "ClientCompanyName": obj.get("ClientCompanyName"),
                "ClientDomainName": obj.get("ClientDomainName"),
                "ClientAlternativeNames": obj.get("ClientAlternativeNames"),
                "ServiceComments": obj.get("ServiceComments"),
                "ServicePrivateComments": obj.get("ServicePrivateComments"),
                "CreatedOn": obj.get("CreatedOn"),
                "ApprovedOn": obj.get("ApprovedOn"),
                "SignOffOn": obj.get("SignOffOn"),
                "VendorSignOffOn": obj.get("VendorSignOffOn"),
                "CompletedOn": obj.get("CompletedOn"),
                "SubmitedOn": obj.get("SubmitedOn"),
                "ShippedOn": obj.get("ShippedOn"),
                "AcceptedOn": obj.get("AcceptedOn"),
                "ReadyForQualityControlOn": obj.get("ReadyForQualityControlOn"),
                "QualityControlOn": obj.get("QualityControlOn"),
                "DeliveredOn": obj.get("DeliveredOn"),
                "InvoicedOn": obj.get("InvoicedOn"),
                "LastInvoicedOn": obj.get("LastInvoicedOn"),
                "PaymentDueOn": obj.get("PaymentDueOn"),
                "PaidOn": obj.get("PaidOn"),
                "LateFeeOn": obj.get("LateFeeOn"),
                "CancelledOn": obj.get("CancelledOn"),
                "ClosedOn": obj.get("ClosedOn"),
                "LastUpdatedOn": obj.get("LastUpdatedOn"),
                "LastUpdatedBy": obj.get("LastUpdatedBy"),
                "SubmitedById": obj.get("SubmitedById"),
                "SignOffById": obj.get("SignOffById"),
                "VendorSignOffById": obj.get("VendorSignOffById"),
                "ApprovedById": obj.get("ApprovedById"),
                "LateFeeById": obj.get("LateFeeById"),
                "AcceptedById": obj.get("AcceptedById"),
                "ReadyForQualityControlById": obj.get("ReadyForQualityControlById"),
                "QualityControlById": obj.get("QualityControlById"),
                "CreatedById": obj.get("CreatedById"),
                "CompletedById": obj.get("CompletedById"),
                "ShippedById": obj.get("ShippedById"),
                "DeliveredById": obj.get("DeliveredById"),
                "InvoicedById": obj.get("InvoicedById"),
                "PaidById": obj.get("PaidById"),
                "CancelledById": obj.get("CancelledById"),
                "ClosedById": obj.get("ClosedById"),
                "PoNumber": obj.get("PoNumber"),
                "SecondaryPo": obj.get("SecondaryPo"),
                "ServiceTotal": obj.get("ServiceTotal"),
                "RepairsTotal": obj.get("RepairsTotal"),
                "PartsTotal": obj.get("PartsTotal"),
                "PartsTotalBeforeDiscount": obj.get("PartsTotalBeforeDiscount"),
                "PartsDiscountTotal": obj.get("PartsDiscountTotal"),
                "EffectiveTaxRate": obj.get("EffectiveTaxRate"),
                "TaxAmount": obj.get("TaxAmount"),
                "ShippingFee": obj.get("ShippingFee"),
                "TravelCharge": obj.get("TravelCharge"),
                "LateFee": obj.get("LateFee"),
                "IsTaxExempt": obj.get("IsTaxExempt"),
                "ServiceDiscount": obj.get("ServiceDiscount"),
                "TradeInCredit": obj.get("TradeInCredit"),
                "PrepaidCredit": obj.get("PrepaidCredit"),
                "GrandTotal": obj.get("GrandTotal"),
                "PaidAmount": obj.get("PaidAmount"),
                "RemainingBalance": obj.get("RemainingBalance"),
                "ServiceDiscountDetails": obj.get("ServiceDiscountDetails"),
                "TradeInCreditDetails": obj.get("TradeInCreditDetails"),
                "PrepaidCreditDetails": obj.get("PrepaidCreditDetails"),
                "PaymentNotes": obj.get("PaymentNotes"),
                "ServiceOrderNumber": obj.get("ServiceOrderNumber"),
                "LegacyOrderNumber": obj.get("LegacyOrderNumber"),
                "CustomOrderNumber": obj.get("CustomOrderNumber"),
                "PaymentStatus": obj.get("PaymentStatus"),
                "PaymentOption": obj.get("PaymentOption"),
                "ShipmentStatus": obj.get("ShipmentStatus"),
                "OrderStatus": obj.get("OrderStatus"),
                "OwnerId": obj.get("OwnerId"),
                "OwnerDepartment": obj.get("OwnerDepartment"),
                "ClientSite": obj.get("ClientSite"),
                "ClientSiteCode": obj.get("ClientSiteCode"),
                "VendorSite": obj.get("VendorSite"),
                "Internal": obj.get("Internal"),
                "Guid": obj.get("Guid"),
                "BusinessFromTime": obj.get("BusinessFromTime"),
                "BusinessToTime": obj.get("BusinessToTime"),
                "SiteAccessNotes": obj.get("SiteAccessNotes"),
                "DesiredDate": obj.get("DesiredDate"),
                "DeadlineDate": obj.get("DeadlineDate"),
                "RequestFromDate": obj.get("RequestFromDate"),
                "RequestFromTime": obj.get("RequestFromTime"),
                "RequestToDate": obj.get("RequestToDate"),
                "RequestToTime": obj.get("RequestToTime"),
                "OrderNotes": obj.get("OrderNotes"),
                "BillingAddress": (
                    QualerApiModelsAddressToAddressResponseModel.from_dict(
                        obj["BillingAddress"]
                    )
                    if obj.get("BillingAddress") is not None
                    else None
                ),
                "ShippingAddress": (
                    QualerApiModelsAddressToAddressResponseModel.from_dict(
                        obj["ShippingAddress"]
                    )
                    if obj.get("ShippingAddress") is not None
                    else None
                ),
            }
        )
        return _obj
