# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsReportDatasetsToMeasurementResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "is_accredited": "bool",
        "service_total": "float",
        "repairs_total": "float",
        "parts_total": "float",
        "parameter_id": "int",
        "tool_range_name": "str",
        "tool_range_uncertainty": "str",
        "primary_tool_last_service_date": "datetime",
        "primary_tool_next_service_date": "datetime",
        "primary_tool_calibrated_by": "str",
        "primary_tool_tool_name": "str",
        "primary_tool_tool_description": "str",
        "primary_tool_tool_type_name": "str",
        "primary_tool_manufacturer": "str",
        "primary_tool_manufacturer_part_number": "str",
        "primary_tool_serial_number": "str",
        "secondary_tool_last_service_date": "datetime",
        "secondary_tool_next_service_date": "datetime",
        "secondary_tool_calibrated_by": "str",
        "secondary_tool_tool_name": "str",
        "secondary_tool_tool_description": "str",
        "secondary_tool_tool_type_name": "str",
        "secondary_tool_manufacturer": "str",
        "secondary_tool_manufacturer_part_number": "str",
        "secondary_tool_serial_number": "str",
        "measurement_set_name": "str",
        "decimal_places": "int",
        "significant_figures": "int",
        "sd_header": "float",
        "cv_header": "float",
        "measurement_local_time": "datetime",
        "mean": "float",
        "mean_raw": "float",
        "mean_decimal_places": "int",
        "mean_extended": "str",
        "sd": "float",
        "sd_raw": "float",
        "sd_decimal_places": "int",
        "delta": "float",
        "range": "float",
        "sd_extended": "str",
        "range_extended": "str",
        "delta_extended": "str",
        "minimum_measured_value": "float",
        "maximum_measured_value": "float",
        "min_max_value_extended": "str",
        "cv": "float",
        "cv_raw": "float",
        "cv_decimal_places": "int",
        "cv_extended": "str",
        "result": "int",
        "range_result": "bool",
        "delta_result": "bool",
        "min_result": "bool",
        "max_result": "bool",
        "tar_result": "bool",
        "tur_result": "bool",
        "error_result": "bool",
        "sd_result": "bool",
        "cv_result": "bool",
        "custom_field_result": "int",
        "mu": "float",
        "mu_raw": "float",
        "mu_effective_dof": "float",
        "mu_coverage_factor": "float",
        "mu_extended": "str",
        "cmc": "float",
        "cmc_comments": "str",
        "tur": "float",
        "tur_raw": "float",
        "tur_decimal_places": "int",
        "tar": "float",
        "tar_raw": "float",
        "tar_decimal_places": "int",
        "guard_band": "str",
        "guard_band_logic": "str",
        "uncertainty_budget": "str",
        "calculated_uncertainty": "float",
        "lock_uncertainty_budget": "bool",
        "lab_mu": "float",
        "channel": "int",
        "measurement_type": "str",
        "updated_by": "str",
        "updated_on": "datetime",
        "error": "float",
        "error_extended": "str",
        "require_adjustment": "bool",
        "adjustment_threshold": "float",
        "percent_of_tolerance": "float",
        "percent_of_tolerance_extended": "str",
        "tol_decimal_places": "int",
        "specification_title": "str",
        "specification_subtitle": "str",
        "specification_group": "str",
        "batch_type": "int",
        "batch_result": "int",
        "is_by_channel": "bool",
        "channel_count": "int",
        "is_range_accredited": "bool",
        "commenced_on": "datetime",
        "commenced_by": "str",
        "z_factor": "float",
        "air_buoyancy": "float",
        "evaporation_rate": "float",
        "air_humidity": "float",
        "altitude": "float",
        "ambient_temperature": "float",
        "barometric_pressure": "float",
        "light_intensity": "float",
        "noise_level": "float",
        "ph_level": "float",
        "water_conductivity": "float",
        "water_temperature": "float",
        "solar_radiation": "float",
        "wind_speed": "float",
        "z_factor_uom": "str",
        "air_buoyancy_uom": "str",
        "evaporation_rate_uom": "str",
        "air_humidity_uom": "str",
        "altitude_uom": "str",
        "ambient_temperature_uom": "str",
        "barometric_pressure_uom": "str",
        "light_intensity_uom": "str",
        "noise_level_uom": "str",
        "ph_level_uom": "str",
        "water_conductivity_uom": "str",
        "water_temperature_uom": "str",
        "solar_radiation_uom": "str",
        "wind_speed_uom": "str",
        "specification_name": "str",
        "parameter_name": "str",
        "measurement_set_display_order": "int",
        "display_order": "int",
        "unit_of_measure": "str",
        "display_format": "str",
        "precision": "float",
        "minimum": "float",
        "nominal": "float",
        "expected_value": "float",
        "expected_value_raw": "str",
        "test_value": "float",
        "base_value": "float",
        "use_expected_value": "bool",
        "reading_entry_logic": "str",
        "reading_entry_math": "str",
        "double_substitution_sequence": "str",
        "reading_entry_math_string": "str",
        "nominal_extended": "str",
        "expected_value_extended": "str",
        "maximum": "float",
        "tolerance_min": "float",
        "tolerance_max": "float",
        "resolution": "float",
        "resolution_count": "float",
        "min_max_header": "str",
        "accuracy_class": "str",
        "accuracy_class_min": "float",
        "accuracy_class_max": "float",
        "environment_mask": "str",
        "display_name": "str",
        "display_part_number": "str",
        "part_number": "str",
        "vendor_company_id": "int",
        "service_order_number": "int",
        "custom_order_number": "str",
        "completed_by_name": "str",
        "completed_on": "datetime",
        "is_limited": "bool",
        "vendor_tag": "str",
        "vendor_service_notes": "str",
        "room": "str",
        "segment_name": "str",
        "schedule_name": "str",
        "next_segment_name": "str",
        "certificate_number": "str",
        "work_status": "int",
        "service_type": "str",
        "service_level": "str",
        "barcode": "str",
        "service_comments": "str",
        "order_item_number": "int",
        "asset_tag": "str",
        "asset_user": "str",
        "serial_number": "str",
        "equipment_id": "str",
        "legacy_identifier": "str",
        "site_name": "str",
        "asset_name": "str",
        "asset_description": "str",
        "product_name": "str",
        "product_description": "str",
        "asset_maker": "str",
        "station": "str",
        "asset_tag_change": "str",
        "asset_user_change": "str",
        "serial_number_change": "str",
        "service_date": "datetime",
        "next_service_date": "datetime",
        "service_order_item_id": "int",
        "service_order_id": "int",
        "measurement_batch_id": "int",
        "measurement_id": "int",
        "standard_id": "int",
        "tool_id": "int",
        "measurement_tool_id": "int",
        "measurement_condition_id": "int",
        "measurement_point_id": "int",
        "measurement_set_id": "int",
        "is_hidden": "bool",
        "readings": "int",
        "tolerance_type": "str",
        "tolerance_type_string": "str",
        "precision_type": "str",
        "specification_mode": "str",
        "tolerance_mode": "str",
        "tolerance_unit": "str",
        "tolerance_string": "str",
        "po_number": "str",
        "secondary_po": "str",
        "shipped_date": "datetime",
        "shipment_status": "str",
        "shipped_on": "datetime",
        "delivered_on": "datetime",
        "tracking_number": "str",
        "payment_terms": "int",
        "shipping_method": "str",
        "location": "str",
        "site_access_notes": "str",
        "abbreviated_uom": "str",
        "unit_scale_factor": "float",
        "measurement_not_taken_result": "str",
        "hide_from_certificate": "bool",
        "measurement_not_taken_reason": "str",
        "environment_text1": "str",
        "environment_text2": "str",
        "environment_text3": "str",
        "environment_text4": "str",
        "environment_text5": "str",
        "environment_text6": "str",
        "values": "str",
        "value1": "str",
        "value2": "str",
        "value3": "str",
        "value4": "str",
        "value5": "str",
        "value6": "str",
        "value7": "str",
        "value8": "str",
        "value9": "str",
        "value10": "str",
        "value11": "str",
        "value12": "str",
        "value13": "str",
        "value14": "str",
        "value15": "str",
        "value16": "str",
        "value17": "str",
        "value18": "str",
        "value19": "str",
        "value20": "str",
        "value21": "str",
        "value22": "str",
        "value23": "str",
        "value24": "str",
        "value25": "str",
        "value26": "str",
        "value27": "str",
        "value28": "str",
        "value29": "str",
        "value30": "str",
        "value31": "str",
        "value32": "str",
        "value33": "str",
        "value34": "str",
        "value35": "str",
        "value36": "str",
        "value37": "str",
        "value38": "str",
        "value39": "str",
        "value40": "str",
        "raw_value1": "str",
        "raw_value2": "str",
        "raw_value3": "str",
        "raw_value4": "str",
        "raw_value5": "str",
        "raw_value6": "str",
        "raw_value7": "str",
        "raw_value8": "str",
        "raw_value9": "str",
        "raw_value10": "str",
        "raw_value11": "str",
        "raw_value12": "str",
        "raw_value13": "str",
        "raw_value14": "str",
        "raw_value15": "str",
        "raw_value16": "str",
        "raw_value17": "str",
        "raw_value18": "str",
        "raw_value19": "str",
        "raw_value20": "str",
        "raw_value21": "str",
        "raw_value22": "str",
        "raw_value23": "str",
        "raw_value24": "str",
        "raw_value25": "str",
        "raw_value26": "str",
        "raw_value27": "str",
        "raw_value28": "str",
        "raw_value29": "str",
        "raw_value30": "str",
        "raw_value31": "str",
        "raw_value32": "str",
        "raw_value33": "str",
        "raw_value34": "str",
        "raw_value35": "str",
        "raw_value36": "str",
        "raw_value37": "str",
        "raw_value38": "str",
        "raw_value39": "str",
        "raw_value40": "str",
        "subtitles_to_readings": "str",
        "value_subtitle1": "str",
        "value_subtitle2": "str",
        "value_subtitle3": "str",
        "value_subtitle4": "str",
        "value_subtitle5": "str",
        "value_subtitle6": "str",
        "value_subtitle7": "str",
        "value_subtitle8": "str",
        "value_subtitle9": "str",
        "value_subtitle10": "str",
        "value_subtitle11": "str",
        "value_subtitle12": "str",
        "value_subtitle13": "str",
        "value_subtitle14": "str",
        "value_subtitle15": "str",
        "value_subtitle16": "str",
        "value_subtitle17": "str",
        "value_subtitle18": "str",
        "value_subtitle19": "str",
        "value_subtitle20": "str",
        "value_subtitle21": "str",
        "value_subtitle22": "str",
        "value_subtitle23": "str",
        "value_subtitle24": "str",
        "value_subtitle25": "str",
        "value_subtitle26": "str",
        "value_subtitle27": "str",
        "value_subtitle28": "str",
        "value_subtitle29": "str",
        "value_subtitle30": "str",
        "value_subtitle31": "str",
        "value_subtitle32": "str",
        "value_subtitle33": "str",
        "value_subtitle34": "str",
        "value_subtitle35": "str",
        "value_subtitle36": "str",
        "value_subtitle37": "str",
        "value_subtitle38": "str",
        "value_subtitle39": "str",
        "value_subtitle40": "str",
        "values_decimal_places": "int",
        "repeat_measurement_and_calculate_hysteresis": "bool",
        "measurement_point_order": "str",
        "hysteresis_point": "str",
        "max_hysteresis": "float",
        "run": "int",
        "direction": "int",
        "hysteresis": "float",
        "column_mean": "str",
        "column_mean_result": "str",
        "column_sd": "str",
        "column_sd_result": "str",
        "column_cv": "str",
        "column_cv_result": "str",
        "column_range": "str",
        "column_range_result": "str",
        "column_delta": "str",
        "column_delta_result": "str",
        "column_result": "str",
    }

    attribute_map = {
        "is_accredited": "IsAccredited",
        "service_total": "ServiceTotal",
        "repairs_total": "RepairsTotal",
        "parts_total": "PartsTotal",
        "parameter_id": "ParameterId",
        "tool_range_name": "ToolRangeName",
        "tool_range_uncertainty": "ToolRangeUncertainty",
        "primary_tool_last_service_date": "PrimaryToolLastServiceDate",
        "primary_tool_next_service_date": "PrimaryToolNextServiceDate",
        "primary_tool_calibrated_by": "PrimaryToolCalibratedBy",
        "primary_tool_tool_name": "PrimaryToolToolName",
        "primary_tool_tool_description": "PrimaryToolToolDescription",
        "primary_tool_tool_type_name": "PrimaryToolToolTypeName",
        "primary_tool_manufacturer": "PrimaryToolManufacturer",
        "primary_tool_manufacturer_part_number": "PrimaryToolManufacturerPartNumber",
        "primary_tool_serial_number": "PrimaryToolSerialNumber",
        "secondary_tool_last_service_date": "SecondaryToolLastServiceDate",
        "secondary_tool_next_service_date": "SecondaryToolNextServiceDate",
        "secondary_tool_calibrated_by": "SecondaryToolCalibratedBy",
        "secondary_tool_tool_name": "SecondaryToolToolName",
        "secondary_tool_tool_description": "SecondaryToolToolDescription",
        "secondary_tool_tool_type_name": "SecondaryToolToolTypeName",
        "secondary_tool_manufacturer": "SecondaryToolManufacturer",
        "secondary_tool_manufacturer_part_number": "SecondaryToolManufacturerPartNumber",
        "secondary_tool_serial_number": "SecondaryToolSerialNumber",
        "measurement_set_name": "MeasurementSetName",
        "decimal_places": "DecimalPlaces",
        "significant_figures": "SignificantFigures",
        "sd_header": "SdHeader",
        "cv_header": "CvHeader",
        "measurement_local_time": "MeasurementLocalTime",
        "mean": "Mean",
        "mean_raw": "MeanRaw",
        "mean_decimal_places": "MeanDecimalPlaces",
        "mean_extended": "MeanExtended",
        "sd": "Sd",
        "sd_raw": "SdRaw",
        "sd_decimal_places": "SDDecimalPlaces",
        "delta": "Delta",
        "range": "Range",
        "sd_extended": "SdExtended",
        "range_extended": "RangeExtended",
        "delta_extended": "DeltaExtended",
        "minimum_measured_value": "MinimumMeasuredValue",
        "maximum_measured_value": "MaximumMeasuredValue",
        "min_max_value_extended": "MinMaxValueExtended",
        "cv": "Cv",
        "cv_raw": "CvRaw",
        "cv_decimal_places": "CVDecimalPlaces",
        "cv_extended": "CvExtended",
        "result": "Result",
        "range_result": "RangeResult",
        "delta_result": "DeltaResult",
        "min_result": "MinResult",
        "max_result": "MaxResult",
        "tar_result": "TarResult",
        "tur_result": "TurResult",
        "error_result": "ErrorResult",
        "sd_result": "SdResult",
        "cv_result": "CvResult",
        "custom_field_result": "CustomFieldResult",
        "mu": "Mu",
        "mu_raw": "MuRaw",
        "mu_effective_dof": "MUEffectiveDOF",
        "mu_coverage_factor": "MUCoverageFactor",
        "mu_extended": "MuExtended",
        "cmc": "Cmc",
        "cmc_comments": "CmcComments",
        "tur": "Tur",
        "tur_raw": "TurRaw",
        "tur_decimal_places": "TURDecimalPlaces",
        "tar": "Tar",
        "tar_raw": "TarRaw",
        "tar_decimal_places": "TARDecimalPlaces",
        "guard_band": "GuardBand",
        "guard_band_logic": "GuardBandLogic",
        "uncertainty_budget": "UncertaintyBudget",
        "calculated_uncertainty": "CalculatedUncertainty",
        "lock_uncertainty_budget": "LockUncertaintyBudget",
        "lab_mu": "LabMu",
        "channel": "Channel",
        "measurement_type": "MeasurementType",
        "updated_by": "UpdatedBy",
        "updated_on": "UpdatedOn",
        "error": "Error",
        "error_extended": "ErrorExtended",
        "require_adjustment": "RequireAdjustment",
        "adjustment_threshold": "AdjustmentThreshold",
        "percent_of_tolerance": "PercentOfTolerance",
        "percent_of_tolerance_extended": "PercentOfToleranceExtended",
        "tol_decimal_places": "TOLDecimalPlaces",
        "specification_title": "SpecificationTitle",
        "specification_subtitle": "SpecificationSubtitle",
        "specification_group": "SpecificationGroup",
        "batch_type": "BatchType",
        "batch_result": "BatchResult",
        "is_by_channel": "IsByChannel",
        "channel_count": "ChannelCount",
        "is_range_accredited": "IsRangeAccredited",
        "commenced_on": "CommencedOn",
        "commenced_by": "CommencedBy",
        "z_factor": "ZFactor",
        "air_buoyancy": "AirBuoyancy",
        "evaporation_rate": "EvaporationRate",
        "air_humidity": "AirHumidity",
        "altitude": "Altitude",
        "ambient_temperature": "AmbientTemperature",
        "barometric_pressure": "BarometricPressure",
        "light_intensity": "LightIntensity",
        "noise_level": "NoiseLevel",
        "ph_level": "PhLevel",
        "water_conductivity": "WaterConductivity",
        "water_temperature": "WaterTemperature",
        "solar_radiation": "SolarRadiation",
        "wind_speed": "WindSpeed",
        "z_factor_uom": "ZFactorUom",
        "air_buoyancy_uom": "AirBuoyancyUom",
        "evaporation_rate_uom": "EvaporationRateUom",
        "air_humidity_uom": "AirHumidityUom",
        "altitude_uom": "AltitudeUom",
        "ambient_temperature_uom": "AmbientTemperatureUom",
        "barometric_pressure_uom": "BarometricPressureUom",
        "light_intensity_uom": "LightIntensityUom",
        "noise_level_uom": "NoiseLevelUom",
        "ph_level_uom": "PhLevelUom",
        "water_conductivity_uom": "WaterConductivityUom",
        "water_temperature_uom": "WaterTemperatureUom",
        "solar_radiation_uom": "SolarRadiationUom",
        "wind_speed_uom": "WindSpeedUom",
        "specification_name": "SpecificationName",
        "parameter_name": "ParameterName",
        "measurement_set_display_order": "MeasurementSetDisplayOrder",
        "display_order": "DisplayOrder",
        "unit_of_measure": "UnitOfMeasure",
        "display_format": "DisplayFormat",
        "precision": "Precision",
        "minimum": "Minimum",
        "nominal": "Nominal",
        "expected_value": "ExpectedValue",
        "expected_value_raw": "ExpectedValueRaw",
        "test_value": "TestValue",
        "base_value": "BaseValue",
        "use_expected_value": "UseExpectedValue",
        "reading_entry_logic": "ReadingEntryLogic",
        "reading_entry_math": "ReadingEntryMath",
        "double_substitution_sequence": "DoubleSubstitutionSequence",
        "reading_entry_math_string": "ReadingEntryMathString",
        "nominal_extended": "NominalExtended",
        "expected_value_extended": "ExpectedValueExtended",
        "maximum": "Maximum",
        "tolerance_min": "ToleranceMin",
        "tolerance_max": "ToleranceMax",
        "resolution": "Resolution",
        "resolution_count": "ResolutionCount",
        "min_max_header": "MinMaxHeader",
        "accuracy_class": "AccuracyClass",
        "accuracy_class_min": "AccuracyClassMin",
        "accuracy_class_max": "AccuracyClassMax",
        "environment_mask": "EnvironmentMask",
        "display_name": "DisplayName",
        "display_part_number": "DisplayPartNumber",
        "part_number": "PartNumber",
        "vendor_company_id": "VendorCompanyId",
        "service_order_number": "ServiceOrderNumber",
        "custom_order_number": "CustomOrderNumber",
        "completed_by_name": "CompletedByName",
        "completed_on": "CompletedOn",
        "is_limited": "IsLimited",
        "vendor_tag": "VendorTag",
        "vendor_service_notes": "VendorServiceNotes",
        "room": "Room",
        "segment_name": "SegmentName",
        "schedule_name": "ScheduleName",
        "next_segment_name": "NextSegmentName",
        "certificate_number": "CertificateNumber",
        "work_status": "WorkStatus",
        "service_type": "ServiceType",
        "service_level": "ServiceLevel",
        "barcode": "Barcode",
        "service_comments": "ServiceComments",
        "order_item_number": "OrderItemNumber",
        "asset_tag": "AssetTag",
        "asset_user": "AssetUser",
        "serial_number": "SerialNumber",
        "equipment_id": "EquipmentId",
        "legacy_identifier": "LegacyIdentifier",
        "site_name": "SiteName",
        "asset_name": "AssetName",
        "asset_description": "AssetDescription",
        "product_name": "ProductName",
        "product_description": "ProductDescription",
        "asset_maker": "AssetMaker",
        "station": "Station",
        "asset_tag_change": "AssetTagChange",
        "asset_user_change": "AssetUserChange",
        "serial_number_change": "SerialNumberChange",
        "service_date": "ServiceDate",
        "next_service_date": "NextServiceDate",
        "service_order_item_id": "ServiceOrderItemId",
        "service_order_id": "ServiceOrderId",
        "measurement_batch_id": "MeasurementBatchId",
        "measurement_id": "MeasurementId",
        "standard_id": "StandardId",
        "tool_id": "ToolId",
        "measurement_tool_id": "MeasurementToolId",
        "measurement_condition_id": "MeasurementConditionId",
        "measurement_point_id": "MeasurementPointId",
        "measurement_set_id": "MeasurementSetId",
        "is_hidden": "IsHidden",
        "readings": "Readings",
        "tolerance_type": "ToleranceType",
        "tolerance_type_string": "ToleranceTypeString",
        "precision_type": "PrecisionType",
        "specification_mode": "SpecificationMode",
        "tolerance_mode": "ToleranceMode",
        "tolerance_unit": "ToleranceUnit",
        "tolerance_string": "ToleranceString",
        "po_number": "PoNumber",
        "secondary_po": "SecondaryPo",
        "shipped_date": "ShippedDate",
        "shipment_status": "ShipmentStatus",
        "shipped_on": "ShippedOn",
        "delivered_on": "DeliveredOn",
        "tracking_number": "TrackingNumber",
        "payment_terms": "PaymentTerms",
        "shipping_method": "ShippingMethod",
        "location": "Location",
        "site_access_notes": "SiteAccessNotes",
        "abbreviated_uom": "AbbreviatedUOM",
        "unit_scale_factor": "UnitScaleFactor",
        "measurement_not_taken_result": "MeasurementNotTakenResult",
        "hide_from_certificate": "HideFromCertificate",
        "measurement_not_taken_reason": "MeasurementNotTakenReason",
        "environment_text1": "EnvironmentText1",
        "environment_text2": "EnvironmentText2",
        "environment_text3": "EnvironmentText3",
        "environment_text4": "EnvironmentText4",
        "environment_text5": "EnvironmentText5",
        "environment_text6": "EnvironmentText6",
        "values": "Values",
        "value1": "Value1",
        "value2": "Value2",
        "value3": "Value3",
        "value4": "Value4",
        "value5": "Value5",
        "value6": "Value6",
        "value7": "Value7",
        "value8": "Value8",
        "value9": "Value9",
        "value10": "Value10",
        "value11": "Value11",
        "value12": "Value12",
        "value13": "Value13",
        "value14": "Value14",
        "value15": "Value15",
        "value16": "Value16",
        "value17": "Value17",
        "value18": "Value18",
        "value19": "Value19",
        "value20": "Value20",
        "value21": "Value21",
        "value22": "Value22",
        "value23": "Value23",
        "value24": "Value24",
        "value25": "Value25",
        "value26": "Value26",
        "value27": "Value27",
        "value28": "Value28",
        "value29": "Value29",
        "value30": "Value30",
        "value31": "Value31",
        "value32": "Value32",
        "value33": "Value33",
        "value34": "Value34",
        "value35": "Value35",
        "value36": "Value36",
        "value37": "Value37",
        "value38": "Value38",
        "value39": "Value39",
        "value40": "Value40",
        "raw_value1": "RawValue1",
        "raw_value2": "RawValue2",
        "raw_value3": "RawValue3",
        "raw_value4": "RawValue4",
        "raw_value5": "RawValue5",
        "raw_value6": "RawValue6",
        "raw_value7": "RawValue7",
        "raw_value8": "RawValue8",
        "raw_value9": "RawValue9",
        "raw_value10": "RawValue10",
        "raw_value11": "RawValue11",
        "raw_value12": "RawValue12",
        "raw_value13": "RawValue13",
        "raw_value14": "RawValue14",
        "raw_value15": "RawValue15",
        "raw_value16": "RawValue16",
        "raw_value17": "RawValue17",
        "raw_value18": "RawValue18",
        "raw_value19": "RawValue19",
        "raw_value20": "RawValue20",
        "raw_value21": "RawValue21",
        "raw_value22": "RawValue22",
        "raw_value23": "RawValue23",
        "raw_value24": "RawValue24",
        "raw_value25": "RawValue25",
        "raw_value26": "RawValue26",
        "raw_value27": "RawValue27",
        "raw_value28": "RawValue28",
        "raw_value29": "RawValue29",
        "raw_value30": "RawValue30",
        "raw_value31": "RawValue31",
        "raw_value32": "RawValue32",
        "raw_value33": "RawValue33",
        "raw_value34": "RawValue34",
        "raw_value35": "RawValue35",
        "raw_value36": "RawValue36",
        "raw_value37": "RawValue37",
        "raw_value38": "RawValue38",
        "raw_value39": "RawValue39",
        "raw_value40": "RawValue40",
        "subtitles_to_readings": "SubtitlesToReadings",
        "value_subtitle1": "ValueSubtitle1",
        "value_subtitle2": "ValueSubtitle2",
        "value_subtitle3": "ValueSubtitle3",
        "value_subtitle4": "ValueSubtitle4",
        "value_subtitle5": "ValueSubtitle5",
        "value_subtitle6": "ValueSubtitle6",
        "value_subtitle7": "ValueSubtitle7",
        "value_subtitle8": "ValueSubtitle8",
        "value_subtitle9": "ValueSubtitle9",
        "value_subtitle10": "ValueSubtitle10",
        "value_subtitle11": "ValueSubtitle11",
        "value_subtitle12": "ValueSubtitle12",
        "value_subtitle13": "ValueSubtitle13",
        "value_subtitle14": "ValueSubtitle14",
        "value_subtitle15": "ValueSubtitle15",
        "value_subtitle16": "ValueSubtitle16",
        "value_subtitle17": "ValueSubtitle17",
        "value_subtitle18": "ValueSubtitle18",
        "value_subtitle19": "ValueSubtitle19",
        "value_subtitle20": "ValueSubtitle20",
        "value_subtitle21": "ValueSubtitle21",
        "value_subtitle22": "ValueSubtitle22",
        "value_subtitle23": "ValueSubtitle23",
        "value_subtitle24": "ValueSubtitle24",
        "value_subtitle25": "ValueSubtitle25",
        "value_subtitle26": "ValueSubtitle26",
        "value_subtitle27": "ValueSubtitle27",
        "value_subtitle28": "ValueSubtitle28",
        "value_subtitle29": "ValueSubtitle29",
        "value_subtitle30": "ValueSubtitle30",
        "value_subtitle31": "ValueSubtitle31",
        "value_subtitle32": "ValueSubtitle32",
        "value_subtitle33": "ValueSubtitle33",
        "value_subtitle34": "ValueSubtitle34",
        "value_subtitle35": "ValueSubtitle35",
        "value_subtitle36": "ValueSubtitle36",
        "value_subtitle37": "ValueSubtitle37",
        "value_subtitle38": "ValueSubtitle38",
        "value_subtitle39": "ValueSubtitle39",
        "value_subtitle40": "ValueSubtitle40",
        "values_decimal_places": "ValuesDecimalPlaces",
        "repeat_measurement_and_calculate_hysteresis": "RepeatMeasurementAndCalculateHysteresis",
        "measurement_point_order": "MeasurementPointOrder",
        "hysteresis_point": "HysteresisPoint",
        "max_hysteresis": "MaxHysteresis",
        "run": "Run",
        "direction": "Direction",
        "hysteresis": "Hysteresis",
        "column_mean": "ColumnMean",
        "column_mean_result": "ColumnMeanResult",
        "column_sd": "ColumnSD",
        "column_sd_result": "ColumnSDResult",
        "column_cv": "ColumnCV",
        "column_cv_result": "ColumnCVResult",
        "column_range": "ColumnRange",
        "column_range_result": "ColumnRangeResult",
        "column_delta": "ColumnDelta",
        "column_delta_result": "ColumnDeltaResult",
        "column_result": "ColumnResult",
    }

    def __init__(
        self,
        is_accredited=None,
        service_total=None,
        repairs_total=None,
        parts_total=None,
        parameter_id=None,
        tool_range_name=None,
        tool_range_uncertainty=None,
        primary_tool_last_service_date=None,
        primary_tool_next_service_date=None,
        primary_tool_calibrated_by=None,
        primary_tool_tool_name=None,
        primary_tool_tool_description=None,
        primary_tool_tool_type_name=None,
        primary_tool_manufacturer=None,
        primary_tool_manufacturer_part_number=None,
        primary_tool_serial_number=None,
        secondary_tool_last_service_date=None,
        secondary_tool_next_service_date=None,
        secondary_tool_calibrated_by=None,
        secondary_tool_tool_name=None,
        secondary_tool_tool_description=None,
        secondary_tool_tool_type_name=None,
        secondary_tool_manufacturer=None,
        secondary_tool_manufacturer_part_number=None,
        secondary_tool_serial_number=None,
        measurement_set_name=None,
        decimal_places=None,
        significant_figures=None,
        sd_header=None,
        cv_header=None,
        measurement_local_time=None,
        mean=None,
        mean_raw=None,
        mean_decimal_places=None,
        mean_extended=None,
        sd=None,
        sd_raw=None,
        sd_decimal_places=None,
        delta=None,
        range=None,
        sd_extended=None,
        range_extended=None,
        delta_extended=None,
        minimum_measured_value=None,
        maximum_measured_value=None,
        min_max_value_extended=None,
        cv=None,
        cv_raw=None,
        cv_decimal_places=None,
        cv_extended=None,
        result=None,
        range_result=None,
        delta_result=None,
        min_result=None,
        max_result=None,
        tar_result=None,
        tur_result=None,
        error_result=None,
        sd_result=None,
        cv_result=None,
        custom_field_result=None,
        mu=None,
        mu_raw=None,
        mu_effective_dof=None,
        mu_coverage_factor=None,
        mu_extended=None,
        cmc=None,
        cmc_comments=None,
        tur=None,
        tur_raw=None,
        tur_decimal_places=None,
        tar=None,
        tar_raw=None,
        tar_decimal_places=None,
        guard_band=None,
        guard_band_logic=None,
        uncertainty_budget=None,
        calculated_uncertainty=None,
        lock_uncertainty_budget=None,
        lab_mu=None,
        channel=None,
        measurement_type=None,
        updated_by=None,
        updated_on=None,
        error=None,
        error_extended=None,
        require_adjustment=None,
        adjustment_threshold=None,
        percent_of_tolerance=None,
        percent_of_tolerance_extended=None,
        tol_decimal_places=None,
        specification_title=None,
        specification_subtitle=None,
        specification_group=None,
        batch_type=None,
        batch_result=None,
        is_by_channel=None,
        channel_count=None,
        is_range_accredited=None,
        commenced_on=None,
        commenced_by=None,
        z_factor=None,
        air_buoyancy=None,
        evaporation_rate=None,
        air_humidity=None,
        altitude=None,
        ambient_temperature=None,
        barometric_pressure=None,
        light_intensity=None,
        noise_level=None,
        ph_level=None,
        water_conductivity=None,
        water_temperature=None,
        solar_radiation=None,
        wind_speed=None,
        z_factor_uom=None,
        air_buoyancy_uom=None,
        evaporation_rate_uom=None,
        air_humidity_uom=None,
        altitude_uom=None,
        ambient_temperature_uom=None,
        barometric_pressure_uom=None,
        light_intensity_uom=None,
        noise_level_uom=None,
        ph_level_uom=None,
        water_conductivity_uom=None,
        water_temperature_uom=None,
        solar_radiation_uom=None,
        wind_speed_uom=None,
        specification_name=None,
        parameter_name=None,
        measurement_set_display_order=None,
        display_order=None,
        unit_of_measure=None,
        display_format=None,
        precision=None,
        minimum=None,
        nominal=None,
        expected_value=None,
        expected_value_raw=None,
        test_value=None,
        base_value=None,
        use_expected_value=None,
        reading_entry_logic=None,
        reading_entry_math=None,
        double_substitution_sequence=None,
        reading_entry_math_string=None,
        nominal_extended=None,
        expected_value_extended=None,
        maximum=None,
        tolerance_min=None,
        tolerance_max=None,
        resolution=None,
        resolution_count=None,
        min_max_header=None,
        accuracy_class=None,
        accuracy_class_min=None,
        accuracy_class_max=None,
        environment_mask=None,
        display_name=None,
        display_part_number=None,
        part_number=None,
        vendor_company_id=None,
        service_order_number=None,
        custom_order_number=None,
        completed_by_name=None,
        completed_on=None,
        is_limited=None,
        vendor_tag=None,
        vendor_service_notes=None,
        room=None,
        segment_name=None,
        schedule_name=None,
        next_segment_name=None,
        certificate_number=None,
        work_status=None,
        service_type=None,
        service_level=None,
        barcode=None,
        service_comments=None,
        order_item_number=None,
        asset_tag=None,
        asset_user=None,
        serial_number=None,
        equipment_id=None,
        legacy_identifier=None,
        site_name=None,
        asset_name=None,
        asset_description=None,
        product_name=None,
        product_description=None,
        asset_maker=None,
        station=None,
        asset_tag_change=None,
        asset_user_change=None,
        serial_number_change=None,
        service_date=None,
        next_service_date=None,
        service_order_item_id=None,
        service_order_id=None,
        measurement_batch_id=None,
        measurement_id=None,
        standard_id=None,
        tool_id=None,
        measurement_tool_id=None,
        measurement_condition_id=None,
        measurement_point_id=None,
        measurement_set_id=None,
        is_hidden=None,
        readings=None,
        tolerance_type=None,
        tolerance_type_string=None,
        precision_type=None,
        specification_mode=None,
        tolerance_mode=None,
        tolerance_unit=None,
        tolerance_string=None,
        po_number=None,
        secondary_po=None,
        shipped_date=None,
        shipment_status=None,
        shipped_on=None,
        delivered_on=None,
        tracking_number=None,
        payment_terms=None,
        shipping_method=None,
        location=None,
        site_access_notes=None,
        abbreviated_uom=None,
        unit_scale_factor=None,
        measurement_not_taken_result=None,
        hide_from_certificate=None,
        measurement_not_taken_reason=None,
        environment_text1=None,
        environment_text2=None,
        environment_text3=None,
        environment_text4=None,
        environment_text5=None,
        environment_text6=None,
        values=None,
        value1=None,
        value2=None,
        value3=None,
        value4=None,
        value5=None,
        value6=None,
        value7=None,
        value8=None,
        value9=None,
        value10=None,
        value11=None,
        value12=None,
        value13=None,
        value14=None,
        value15=None,
        value16=None,
        value17=None,
        value18=None,
        value19=None,
        value20=None,
        value21=None,
        value22=None,
        value23=None,
        value24=None,
        value25=None,
        value26=None,
        value27=None,
        value28=None,
        value29=None,
        value30=None,
        value31=None,
        value32=None,
        value33=None,
        value34=None,
        value35=None,
        value36=None,
        value37=None,
        value38=None,
        value39=None,
        value40=None,
        raw_value1=None,
        raw_value2=None,
        raw_value3=None,
        raw_value4=None,
        raw_value5=None,
        raw_value6=None,
        raw_value7=None,
        raw_value8=None,
        raw_value9=None,
        raw_value10=None,
        raw_value11=None,
        raw_value12=None,
        raw_value13=None,
        raw_value14=None,
        raw_value15=None,
        raw_value16=None,
        raw_value17=None,
        raw_value18=None,
        raw_value19=None,
        raw_value20=None,
        raw_value21=None,
        raw_value22=None,
        raw_value23=None,
        raw_value24=None,
        raw_value25=None,
        raw_value26=None,
        raw_value27=None,
        raw_value28=None,
        raw_value29=None,
        raw_value30=None,
        raw_value31=None,
        raw_value32=None,
        raw_value33=None,
        raw_value34=None,
        raw_value35=None,
        raw_value36=None,
        raw_value37=None,
        raw_value38=None,
        raw_value39=None,
        raw_value40=None,
        subtitles_to_readings=None,
        value_subtitle1=None,
        value_subtitle2=None,
        value_subtitle3=None,
        value_subtitle4=None,
        value_subtitle5=None,
        value_subtitle6=None,
        value_subtitle7=None,
        value_subtitle8=None,
        value_subtitle9=None,
        value_subtitle10=None,
        value_subtitle11=None,
        value_subtitle12=None,
        value_subtitle13=None,
        value_subtitle14=None,
        value_subtitle15=None,
        value_subtitle16=None,
        value_subtitle17=None,
        value_subtitle18=None,
        value_subtitle19=None,
        value_subtitle20=None,
        value_subtitle21=None,
        value_subtitle22=None,
        value_subtitle23=None,
        value_subtitle24=None,
        value_subtitle25=None,
        value_subtitle26=None,
        value_subtitle27=None,
        value_subtitle28=None,
        value_subtitle29=None,
        value_subtitle30=None,
        value_subtitle31=None,
        value_subtitle32=None,
        value_subtitle33=None,
        value_subtitle34=None,
        value_subtitle35=None,
        value_subtitle36=None,
        value_subtitle37=None,
        value_subtitle38=None,
        value_subtitle39=None,
        value_subtitle40=None,
        values_decimal_places=None,
        repeat_measurement_and_calculate_hysteresis=None,
        measurement_point_order=None,
        hysteresis_point=None,
        max_hysteresis=None,
        run=None,
        direction=None,
        hysteresis=None,
        column_mean=None,
        column_mean_result=None,
        column_sd=None,
        column_sd_result=None,
        column_cv=None,
        column_cv_result=None,
        column_range=None,
        column_range_result=None,
        column_delta=None,
        column_delta_result=None,
        column_result=None,
        _configuration=None,
    ):  # noqa: E501
        """QualerApiModelsReportDatasetsToMeasurementResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._is_accredited = None
        self._service_total = None
        self._repairs_total = None
        self._parts_total = None
        self._parameter_id = None
        self._tool_range_name = None
        self._tool_range_uncertainty = None
        self._primary_tool_last_service_date = None
        self._primary_tool_next_service_date = None
        self._primary_tool_calibrated_by = None
        self._primary_tool_tool_name = None
        self._primary_tool_tool_description = None
        self._primary_tool_tool_type_name = None
        self._primary_tool_manufacturer = None
        self._primary_tool_manufacturer_part_number = None
        self._primary_tool_serial_number = None
        self._secondary_tool_last_service_date = None
        self._secondary_tool_next_service_date = None
        self._secondary_tool_calibrated_by = None
        self._secondary_tool_tool_name = None
        self._secondary_tool_tool_description = None
        self._secondary_tool_tool_type_name = None
        self._secondary_tool_manufacturer = None
        self._secondary_tool_manufacturer_part_number = None
        self._secondary_tool_serial_number = None
        self._measurement_set_name = None
        self._decimal_places = None
        self._significant_figures = None
        self._sd_header = None
        self._cv_header = None
        self._measurement_local_time = None
        self._mean = None
        self._mean_raw = None
        self._mean_decimal_places = None
        self._mean_extended = None
        self._sd = None
        self._sd_raw = None
        self._sd_decimal_places = None
        self._delta = None
        self._range = None
        self._sd_extended = None
        self._range_extended = None
        self._delta_extended = None
        self._minimum_measured_value = None
        self._maximum_measured_value = None
        self._min_max_value_extended = None
        self._cv = None
        self._cv_raw = None
        self._cv_decimal_places = None
        self._cv_extended = None
        self._result = None
        self._range_result = None
        self._delta_result = None
        self._min_result = None
        self._max_result = None
        self._tar_result = None
        self._tur_result = None
        self._error_result = None
        self._sd_result = None
        self._cv_result = None
        self._custom_field_result = None
        self._mu = None
        self._mu_raw = None
        self._mu_effective_dof = None
        self._mu_coverage_factor = None
        self._mu_extended = None
        self._cmc = None
        self._cmc_comments = None
        self._tur = None
        self._tur_raw = None
        self._tur_decimal_places = None
        self._tar = None
        self._tar_raw = None
        self._tar_decimal_places = None
        self._guard_band = None
        self._guard_band_logic = None
        self._uncertainty_budget = None
        self._calculated_uncertainty = None
        self._lock_uncertainty_budget = None
        self._lab_mu = None
        self._channel = None
        self._measurement_type = None
        self._updated_by = None
        self._updated_on = None
        self._error = None
        self._error_extended = None
        self._require_adjustment = None
        self._adjustment_threshold = None
        self._percent_of_tolerance = None
        self._percent_of_tolerance_extended = None
        self._tol_decimal_places = None
        self._specification_title = None
        self._specification_subtitle = None
        self._specification_group = None
        self._batch_type = None
        self._batch_result = None
        self._is_by_channel = None
        self._channel_count = None
        self._is_range_accredited = None
        self._commenced_on = None
        self._commenced_by = None
        self._z_factor = None
        self._air_buoyancy = None
        self._evaporation_rate = None
        self._air_humidity = None
        self._altitude = None
        self._ambient_temperature = None
        self._barometric_pressure = None
        self._light_intensity = None
        self._noise_level = None
        self._ph_level = None
        self._water_conductivity = None
        self._water_temperature = None
        self._solar_radiation = None
        self._wind_speed = None
        self._z_factor_uom = None
        self._air_buoyancy_uom = None
        self._evaporation_rate_uom = None
        self._air_humidity_uom = None
        self._altitude_uom = None
        self._ambient_temperature_uom = None
        self._barometric_pressure_uom = None
        self._light_intensity_uom = None
        self._noise_level_uom = None
        self._ph_level_uom = None
        self._water_conductivity_uom = None
        self._water_temperature_uom = None
        self._solar_radiation_uom = None
        self._wind_speed_uom = None
        self._specification_name = None
        self._parameter_name = None
        self._measurement_set_display_order = None
        self._display_order = None
        self._unit_of_measure = None
        self._display_format = None
        self._precision = None
        self._minimum = None
        self._nominal = None
        self._expected_value = None
        self._expected_value_raw = None
        self._test_value = None
        self._base_value = None
        self._use_expected_value = None
        self._reading_entry_logic = None
        self._reading_entry_math = None
        self._double_substitution_sequence = None
        self._reading_entry_math_string = None
        self._nominal_extended = None
        self._expected_value_extended = None
        self._maximum = None
        self._tolerance_min = None
        self._tolerance_max = None
        self._resolution = None
        self._resolution_count = None
        self._min_max_header = None
        self._accuracy_class = None
        self._accuracy_class_min = None
        self._accuracy_class_max = None
        self._environment_mask = None
        self._display_name = None
        self._display_part_number = None
        self._part_number = None
        self._vendor_company_id = None
        self._service_order_number = None
        self._custom_order_number = None
        self._completed_by_name = None
        self._completed_on = None
        self._is_limited = None
        self._vendor_tag = None
        self._vendor_service_notes = None
        self._room = None
        self._segment_name = None
        self._schedule_name = None
        self._next_segment_name = None
        self._certificate_number = None
        self._work_status = None
        self._service_type = None
        self._service_level = None
        self._barcode = None
        self._service_comments = None
        self._order_item_number = None
        self._asset_tag = None
        self._asset_user = None
        self._serial_number = None
        self._equipment_id = None
        self._legacy_identifier = None
        self._site_name = None
        self._asset_name = None
        self._asset_description = None
        self._product_name = None
        self._product_description = None
        self._asset_maker = None
        self._station = None
        self._asset_tag_change = None
        self._asset_user_change = None
        self._serial_number_change = None
        self._service_date = None
        self._next_service_date = None
        self._service_order_item_id = None
        self._service_order_id = None
        self._measurement_batch_id = None
        self._measurement_id = None
        self._standard_id = None
        self._tool_id = None
        self._measurement_tool_id = None
        self._measurement_condition_id = None
        self._measurement_point_id = None
        self._measurement_set_id = None
        self._is_hidden = None
        self._readings = None
        self._tolerance_type = None
        self._tolerance_type_string = None
        self._precision_type = None
        self._specification_mode = None
        self._tolerance_mode = None
        self._tolerance_unit = None
        self._tolerance_string = None
        self._po_number = None
        self._secondary_po = None
        self._shipped_date = None
        self._shipment_status = None
        self._shipped_on = None
        self._delivered_on = None
        self._tracking_number = None
        self._payment_terms = None
        self._shipping_method = None
        self._location = None
        self._site_access_notes = None
        self._abbreviated_uom = None
        self._unit_scale_factor = None
        self._measurement_not_taken_result = None
        self._hide_from_certificate = None
        self._measurement_not_taken_reason = None
        self._environment_text1 = None
        self._environment_text2 = None
        self._environment_text3 = None
        self._environment_text4 = None
        self._environment_text5 = None
        self._environment_text6 = None
        self._values = None
        self._value1 = None
        self._value2 = None
        self._value3 = None
        self._value4 = None
        self._value5 = None
        self._value6 = None
        self._value7 = None
        self._value8 = None
        self._value9 = None
        self._value10 = None
        self._value11 = None
        self._value12 = None
        self._value13 = None
        self._value14 = None
        self._value15 = None
        self._value16 = None
        self._value17 = None
        self._value18 = None
        self._value19 = None
        self._value20 = None
        self._value21 = None
        self._value22 = None
        self._value23 = None
        self._value24 = None
        self._value25 = None
        self._value26 = None
        self._value27 = None
        self._value28 = None
        self._value29 = None
        self._value30 = None
        self._value31 = None
        self._value32 = None
        self._value33 = None
        self._value34 = None
        self._value35 = None
        self._value36 = None
        self._value37 = None
        self._value38 = None
        self._value39 = None
        self._value40 = None
        self._raw_value1 = None
        self._raw_value2 = None
        self._raw_value3 = None
        self._raw_value4 = None
        self._raw_value5 = None
        self._raw_value6 = None
        self._raw_value7 = None
        self._raw_value8 = None
        self._raw_value9 = None
        self._raw_value10 = None
        self._raw_value11 = None
        self._raw_value12 = None
        self._raw_value13 = None
        self._raw_value14 = None
        self._raw_value15 = None
        self._raw_value16 = None
        self._raw_value17 = None
        self._raw_value18 = None
        self._raw_value19 = None
        self._raw_value20 = None
        self._raw_value21 = None
        self._raw_value22 = None
        self._raw_value23 = None
        self._raw_value24 = None
        self._raw_value25 = None
        self._raw_value26 = None
        self._raw_value27 = None
        self._raw_value28 = None
        self._raw_value29 = None
        self._raw_value30 = None
        self._raw_value31 = None
        self._raw_value32 = None
        self._raw_value33 = None
        self._raw_value34 = None
        self._raw_value35 = None
        self._raw_value36 = None
        self._raw_value37 = None
        self._raw_value38 = None
        self._raw_value39 = None
        self._raw_value40 = None
        self._subtitles_to_readings = None
        self._value_subtitle1 = None
        self._value_subtitle2 = None
        self._value_subtitle3 = None
        self._value_subtitle4 = None
        self._value_subtitle5 = None
        self._value_subtitle6 = None
        self._value_subtitle7 = None
        self._value_subtitle8 = None
        self._value_subtitle9 = None
        self._value_subtitle10 = None
        self._value_subtitle11 = None
        self._value_subtitle12 = None
        self._value_subtitle13 = None
        self._value_subtitle14 = None
        self._value_subtitle15 = None
        self._value_subtitle16 = None
        self._value_subtitle17 = None
        self._value_subtitle18 = None
        self._value_subtitle19 = None
        self._value_subtitle20 = None
        self._value_subtitle21 = None
        self._value_subtitle22 = None
        self._value_subtitle23 = None
        self._value_subtitle24 = None
        self._value_subtitle25 = None
        self._value_subtitle26 = None
        self._value_subtitle27 = None
        self._value_subtitle28 = None
        self._value_subtitle29 = None
        self._value_subtitle30 = None
        self._value_subtitle31 = None
        self._value_subtitle32 = None
        self._value_subtitle33 = None
        self._value_subtitle34 = None
        self._value_subtitle35 = None
        self._value_subtitle36 = None
        self._value_subtitle37 = None
        self._value_subtitle38 = None
        self._value_subtitle39 = None
        self._value_subtitle40 = None
        self._values_decimal_places = None
        self._repeat_measurement_and_calculate_hysteresis = None
        self._measurement_point_order = None
        self._hysteresis_point = None
        self._max_hysteresis = None
        self._run = None
        self._direction = None
        self._hysteresis = None
        self._column_mean = None
        self._column_mean_result = None
        self._column_sd = None
        self._column_sd_result = None
        self._column_cv = None
        self._column_cv_result = None
        self._column_range = None
        self._column_range_result = None
        self._column_delta = None
        self._column_delta_result = None
        self._column_result = None
        self.discriminator = None

        if is_accredited is not None:
            self.is_accredited = is_accredited
        if service_total is not None:
            self.service_total = service_total
        if repairs_total is not None:
            self.repairs_total = repairs_total
        if parts_total is not None:
            self.parts_total = parts_total
        if parameter_id is not None:
            self.parameter_id = parameter_id
        if tool_range_name is not None:
            self.tool_range_name = tool_range_name
        if tool_range_uncertainty is not None:
            self.tool_range_uncertainty = tool_range_uncertainty
        if primary_tool_last_service_date is not None:
            self.primary_tool_last_service_date = primary_tool_last_service_date
        if primary_tool_next_service_date is not None:
            self.primary_tool_next_service_date = primary_tool_next_service_date
        if primary_tool_calibrated_by is not None:
            self.primary_tool_calibrated_by = primary_tool_calibrated_by
        if primary_tool_tool_name is not None:
            self.primary_tool_tool_name = primary_tool_tool_name
        if primary_tool_tool_description is not None:
            self.primary_tool_tool_description = primary_tool_tool_description
        if primary_tool_tool_type_name is not None:
            self.primary_tool_tool_type_name = primary_tool_tool_type_name
        if primary_tool_manufacturer is not None:
            self.primary_tool_manufacturer = primary_tool_manufacturer
        if primary_tool_manufacturer_part_number is not None:
            self.primary_tool_manufacturer_part_number = (
                primary_tool_manufacturer_part_number
            )
        if primary_tool_serial_number is not None:
            self.primary_tool_serial_number = primary_tool_serial_number
        if secondary_tool_last_service_date is not None:
            self.secondary_tool_last_service_date = secondary_tool_last_service_date
        if secondary_tool_next_service_date is not None:
            self.secondary_tool_next_service_date = secondary_tool_next_service_date
        if secondary_tool_calibrated_by is not None:
            self.secondary_tool_calibrated_by = secondary_tool_calibrated_by
        if secondary_tool_tool_name is not None:
            self.secondary_tool_tool_name = secondary_tool_tool_name
        if secondary_tool_tool_description is not None:
            self.secondary_tool_tool_description = secondary_tool_tool_description
        if secondary_tool_tool_type_name is not None:
            self.secondary_tool_tool_type_name = secondary_tool_tool_type_name
        if secondary_tool_manufacturer is not None:
            self.secondary_tool_manufacturer = secondary_tool_manufacturer
        if secondary_tool_manufacturer_part_number is not None:
            self.secondary_tool_manufacturer_part_number = (
                secondary_tool_manufacturer_part_number
            )
        if secondary_tool_serial_number is not None:
            self.secondary_tool_serial_number = secondary_tool_serial_number
        if measurement_set_name is not None:
            self.measurement_set_name = measurement_set_name
        if decimal_places is not None:
            self.decimal_places = decimal_places
        if significant_figures is not None:
            self.significant_figures = significant_figures
        if sd_header is not None:
            self.sd_header = sd_header
        if cv_header is not None:
            self.cv_header = cv_header
        if measurement_local_time is not None:
            self.measurement_local_time = measurement_local_time
        if mean is not None:
            self.mean = mean
        if mean_raw is not None:
            self.mean_raw = mean_raw
        if mean_decimal_places is not None:
            self.mean_decimal_places = mean_decimal_places
        if mean_extended is not None:
            self.mean_extended = mean_extended
        if sd is not None:
            self.sd = sd
        if sd_raw is not None:
            self.sd_raw = sd_raw
        if sd_decimal_places is not None:
            self.sd_decimal_places = sd_decimal_places
        if delta is not None:
            self.delta = delta
        if range is not None:
            self.range = range
        if sd_extended is not None:
            self.sd_extended = sd_extended
        if range_extended is not None:
            self.range_extended = range_extended
        if delta_extended is not None:
            self.delta_extended = delta_extended
        if minimum_measured_value is not None:
            self.minimum_measured_value = minimum_measured_value
        if maximum_measured_value is not None:
            self.maximum_measured_value = maximum_measured_value
        if min_max_value_extended is not None:
            self.min_max_value_extended = min_max_value_extended
        if cv is not None:
            self.cv = cv
        if cv_raw is not None:
            self.cv_raw = cv_raw
        if cv_decimal_places is not None:
            self.cv_decimal_places = cv_decimal_places
        if cv_extended is not None:
            self.cv_extended = cv_extended
        if result is not None:
            self.result = result
        if range_result is not None:
            self.range_result = range_result
        if delta_result is not None:
            self.delta_result = delta_result
        if min_result is not None:
            self.min_result = min_result
        if max_result is not None:
            self.max_result = max_result
        if tar_result is not None:
            self.tar_result = tar_result
        if tur_result is not None:
            self.tur_result = tur_result
        if error_result is not None:
            self.error_result = error_result
        if sd_result is not None:
            self.sd_result = sd_result
        if cv_result is not None:
            self.cv_result = cv_result
        if custom_field_result is not None:
            self.custom_field_result = custom_field_result
        if mu is not None:
            self.mu = mu
        if mu_raw is not None:
            self.mu_raw = mu_raw
        if mu_effective_dof is not None:
            self.mu_effective_dof = mu_effective_dof
        if mu_coverage_factor is not None:
            self.mu_coverage_factor = mu_coverage_factor
        if mu_extended is not None:
            self.mu_extended = mu_extended
        if cmc is not None:
            self.cmc = cmc
        if cmc_comments is not None:
            self.cmc_comments = cmc_comments
        if tur is not None:
            self.tur = tur
        if tur_raw is not None:
            self.tur_raw = tur_raw
        if tur_decimal_places is not None:
            self.tur_decimal_places = tur_decimal_places
        if tar is not None:
            self.tar = tar
        if tar_raw is not None:
            self.tar_raw = tar_raw
        if tar_decimal_places is not None:
            self.tar_decimal_places = tar_decimal_places
        if guard_band is not None:
            self.guard_band = guard_band
        if guard_band_logic is not None:
            self.guard_band_logic = guard_band_logic
        if uncertainty_budget is not None:
            self.uncertainty_budget = uncertainty_budget
        if calculated_uncertainty is not None:
            self.calculated_uncertainty = calculated_uncertainty
        if lock_uncertainty_budget is not None:
            self.lock_uncertainty_budget = lock_uncertainty_budget
        if lab_mu is not None:
            self.lab_mu = lab_mu
        if channel is not None:
            self.channel = channel
        if measurement_type is not None:
            self.measurement_type = measurement_type
        if updated_by is not None:
            self.updated_by = updated_by
        if updated_on is not None:
            self.updated_on = updated_on
        if error is not None:
            self.error = error
        if error_extended is not None:
            self.error_extended = error_extended
        if require_adjustment is not None:
            self.require_adjustment = require_adjustment
        if adjustment_threshold is not None:
            self.adjustment_threshold = adjustment_threshold
        if percent_of_tolerance is not None:
            self.percent_of_tolerance = percent_of_tolerance
        if percent_of_tolerance_extended is not None:
            self.percent_of_tolerance_extended = percent_of_tolerance_extended
        if tol_decimal_places is not None:
            self.tol_decimal_places = tol_decimal_places
        if specification_title is not None:
            self.specification_title = specification_title
        if specification_subtitle is not None:
            self.specification_subtitle = specification_subtitle
        if specification_group is not None:
            self.specification_group = specification_group
        if batch_type is not None:
            self.batch_type = batch_type
        if batch_result is not None:
            self.batch_result = batch_result
        if is_by_channel is not None:
            self.is_by_channel = is_by_channel
        if channel_count is not None:
            self.channel_count = channel_count
        if is_range_accredited is not None:
            self.is_range_accredited = is_range_accredited
        if commenced_on is not None:
            self.commenced_on = commenced_on
        if commenced_by is not None:
            self.commenced_by = commenced_by
        if z_factor is not None:
            self.z_factor = z_factor
        if air_buoyancy is not None:
            self.air_buoyancy = air_buoyancy
        if evaporation_rate is not None:
            self.evaporation_rate = evaporation_rate
        if air_humidity is not None:
            self.air_humidity = air_humidity
        if altitude is not None:
            self.altitude = altitude
        if ambient_temperature is not None:
            self.ambient_temperature = ambient_temperature
        if barometric_pressure is not None:
            self.barometric_pressure = barometric_pressure
        if light_intensity is not None:
            self.light_intensity = light_intensity
        if noise_level is not None:
            self.noise_level = noise_level
        if ph_level is not None:
            self.ph_level = ph_level
        if water_conductivity is not None:
            self.water_conductivity = water_conductivity
        if water_temperature is not None:
            self.water_temperature = water_temperature
        if solar_radiation is not None:
            self.solar_radiation = solar_radiation
        if wind_speed is not None:
            self.wind_speed = wind_speed
        if z_factor_uom is not None:
            self.z_factor_uom = z_factor_uom
        if air_buoyancy_uom is not None:
            self.air_buoyancy_uom = air_buoyancy_uom
        if evaporation_rate_uom is not None:
            self.evaporation_rate_uom = evaporation_rate_uom
        if air_humidity_uom is not None:
            self.air_humidity_uom = air_humidity_uom
        if altitude_uom is not None:
            self.altitude_uom = altitude_uom
        if ambient_temperature_uom is not None:
            self.ambient_temperature_uom = ambient_temperature_uom
        if barometric_pressure_uom is not None:
            self.barometric_pressure_uom = barometric_pressure_uom
        if light_intensity_uom is not None:
            self.light_intensity_uom = light_intensity_uom
        if noise_level_uom is not None:
            self.noise_level_uom = noise_level_uom
        if ph_level_uom is not None:
            self.ph_level_uom = ph_level_uom
        if water_conductivity_uom is not None:
            self.water_conductivity_uom = water_conductivity_uom
        if water_temperature_uom is not None:
            self.water_temperature_uom = water_temperature_uom
        if solar_radiation_uom is not None:
            self.solar_radiation_uom = solar_radiation_uom
        if wind_speed_uom is not None:
            self.wind_speed_uom = wind_speed_uom
        if specification_name is not None:
            self.specification_name = specification_name
        if parameter_name is not None:
            self.parameter_name = parameter_name
        if measurement_set_display_order is not None:
            self.measurement_set_display_order = measurement_set_display_order
        if display_order is not None:
            self.display_order = display_order
        if unit_of_measure is not None:
            self.unit_of_measure = unit_of_measure
        if display_format is not None:
            self.display_format = display_format
        if precision is not None:
            self.precision = precision
        if minimum is not None:
            self.minimum = minimum
        if nominal is not None:
            self.nominal = nominal
        if expected_value is not None:
            self.expected_value = expected_value
        if expected_value_raw is not None:
            self.expected_value_raw = expected_value_raw
        if test_value is not None:
            self.test_value = test_value
        if base_value is not None:
            self.base_value = base_value
        if use_expected_value is not None:
            self.use_expected_value = use_expected_value
        if reading_entry_logic is not None:
            self.reading_entry_logic = reading_entry_logic
        if reading_entry_math is not None:
            self.reading_entry_math = reading_entry_math
        if double_substitution_sequence is not None:
            self.double_substitution_sequence = double_substitution_sequence
        if reading_entry_math_string is not None:
            self.reading_entry_math_string = reading_entry_math_string
        if nominal_extended is not None:
            self.nominal_extended = nominal_extended
        if expected_value_extended is not None:
            self.expected_value_extended = expected_value_extended
        if maximum is not None:
            self.maximum = maximum
        if tolerance_min is not None:
            self.tolerance_min = tolerance_min
        if tolerance_max is not None:
            self.tolerance_max = tolerance_max
        if resolution is not None:
            self.resolution = resolution
        if resolution_count is not None:
            self.resolution_count = resolution_count
        if min_max_header is not None:
            self.min_max_header = min_max_header
        if accuracy_class is not None:
            self.accuracy_class = accuracy_class
        if accuracy_class_min is not None:
            self.accuracy_class_min = accuracy_class_min
        if accuracy_class_max is not None:
            self.accuracy_class_max = accuracy_class_max
        if environment_mask is not None:
            self.environment_mask = environment_mask
        if display_name is not None:
            self.display_name = display_name
        if display_part_number is not None:
            self.display_part_number = display_part_number
        if part_number is not None:
            self.part_number = part_number
        if vendor_company_id is not None:
            self.vendor_company_id = vendor_company_id
        if service_order_number is not None:
            self.service_order_number = service_order_number
        if custom_order_number is not None:
            self.custom_order_number = custom_order_number
        if completed_by_name is not None:
            self.completed_by_name = completed_by_name
        if completed_on is not None:
            self.completed_on = completed_on
        if is_limited is not None:
            self.is_limited = is_limited
        if vendor_tag is not None:
            self.vendor_tag = vendor_tag
        if vendor_service_notes is not None:
            self.vendor_service_notes = vendor_service_notes
        if room is not None:
            self.room = room
        if segment_name is not None:
            self.segment_name = segment_name
        if schedule_name is not None:
            self.schedule_name = schedule_name
        if next_segment_name is not None:
            self.next_segment_name = next_segment_name
        if certificate_number is not None:
            self.certificate_number = certificate_number
        if work_status is not None:
            self.work_status = work_status
        if service_type is not None:
            self.service_type = service_type
        if service_level is not None:
            self.service_level = service_level
        if barcode is not None:
            self.barcode = barcode
        if service_comments is not None:
            self.service_comments = service_comments
        if order_item_number is not None:
            self.order_item_number = order_item_number
        if asset_tag is not None:
            self.asset_tag = asset_tag
        if asset_user is not None:
            self.asset_user = asset_user
        if serial_number is not None:
            self.serial_number = serial_number
        if equipment_id is not None:
            self.equipment_id = equipment_id
        if legacy_identifier is not None:
            self.legacy_identifier = legacy_identifier
        if site_name is not None:
            self.site_name = site_name
        if asset_name is not None:
            self.asset_name = asset_name
        if asset_description is not None:
            self.asset_description = asset_description
        if product_name is not None:
            self.product_name = product_name
        if product_description is not None:
            self.product_description = product_description
        if asset_maker is not None:
            self.asset_maker = asset_maker
        if station is not None:
            self.station = station
        if asset_tag_change is not None:
            self.asset_tag_change = asset_tag_change
        if asset_user_change is not None:
            self.asset_user_change = asset_user_change
        if serial_number_change is not None:
            self.serial_number_change = serial_number_change
        if service_date is not None:
            self.service_date = service_date
        if next_service_date is not None:
            self.next_service_date = next_service_date
        if service_order_item_id is not None:
            self.service_order_item_id = service_order_item_id
        if service_order_id is not None:
            self.service_order_id = service_order_id
        if measurement_batch_id is not None:
            self.measurement_batch_id = measurement_batch_id
        if measurement_id is not None:
            self.measurement_id = measurement_id
        if standard_id is not None:
            self.standard_id = standard_id
        if tool_id is not None:
            self.tool_id = tool_id
        if measurement_tool_id is not None:
            self.measurement_tool_id = measurement_tool_id
        if measurement_condition_id is not None:
            self.measurement_condition_id = measurement_condition_id
        if measurement_point_id is not None:
            self.measurement_point_id = measurement_point_id
        if measurement_set_id is not None:
            self.measurement_set_id = measurement_set_id
        if is_hidden is not None:
            self.is_hidden = is_hidden
        if readings is not None:
            self.readings = readings
        if tolerance_type is not None:
            self.tolerance_type = tolerance_type
        if tolerance_type_string is not None:
            self.tolerance_type_string = tolerance_type_string
        if precision_type is not None:
            self.precision_type = precision_type
        if specification_mode is not None:
            self.specification_mode = specification_mode
        if tolerance_mode is not None:
            self.tolerance_mode = tolerance_mode
        if tolerance_unit is not None:
            self.tolerance_unit = tolerance_unit
        if tolerance_string is not None:
            self.tolerance_string = tolerance_string
        if po_number is not None:
            self.po_number = po_number
        if secondary_po is not None:
            self.secondary_po = secondary_po
        if shipped_date is not None:
            self.shipped_date = shipped_date
        if shipment_status is not None:
            self.shipment_status = shipment_status
        if shipped_on is not None:
            self.shipped_on = shipped_on
        if delivered_on is not None:
            self.delivered_on = delivered_on
        if tracking_number is not None:
            self.tracking_number = tracking_number
        if payment_terms is not None:
            self.payment_terms = payment_terms
        if shipping_method is not None:
            self.shipping_method = shipping_method
        if location is not None:
            self.location = location
        if site_access_notes is not None:
            self.site_access_notes = site_access_notes
        if abbreviated_uom is not None:
            self.abbreviated_uom = abbreviated_uom
        if unit_scale_factor is not None:
            self.unit_scale_factor = unit_scale_factor
        if measurement_not_taken_result is not None:
            self.measurement_not_taken_result = measurement_not_taken_result
        if hide_from_certificate is not None:
            self.hide_from_certificate = hide_from_certificate
        if measurement_not_taken_reason is not None:
            self.measurement_not_taken_reason = measurement_not_taken_reason
        if environment_text1 is not None:
            self.environment_text1 = environment_text1
        if environment_text2 is not None:
            self.environment_text2 = environment_text2
        if environment_text3 is not None:
            self.environment_text3 = environment_text3
        if environment_text4 is not None:
            self.environment_text4 = environment_text4
        if environment_text5 is not None:
            self.environment_text5 = environment_text5
        if environment_text6 is not None:
            self.environment_text6 = environment_text6
        if values is not None:
            self.values = values
        if value1 is not None:
            self.value1 = value1
        if value2 is not None:
            self.value2 = value2
        if value3 is not None:
            self.value3 = value3
        if value4 is not None:
            self.value4 = value4
        if value5 is not None:
            self.value5 = value5
        if value6 is not None:
            self.value6 = value6
        if value7 is not None:
            self.value7 = value7
        if value8 is not None:
            self.value8 = value8
        if value9 is not None:
            self.value9 = value9
        if value10 is not None:
            self.value10 = value10
        if value11 is not None:
            self.value11 = value11
        if value12 is not None:
            self.value12 = value12
        if value13 is not None:
            self.value13 = value13
        if value14 is not None:
            self.value14 = value14
        if value15 is not None:
            self.value15 = value15
        if value16 is not None:
            self.value16 = value16
        if value17 is not None:
            self.value17 = value17
        if value18 is not None:
            self.value18 = value18
        if value19 is not None:
            self.value19 = value19
        if value20 is not None:
            self.value20 = value20
        if value21 is not None:
            self.value21 = value21
        if value22 is not None:
            self.value22 = value22
        if value23 is not None:
            self.value23 = value23
        if value24 is not None:
            self.value24 = value24
        if value25 is not None:
            self.value25 = value25
        if value26 is not None:
            self.value26 = value26
        if value27 is not None:
            self.value27 = value27
        if value28 is not None:
            self.value28 = value28
        if value29 is not None:
            self.value29 = value29
        if value30 is not None:
            self.value30 = value30
        if value31 is not None:
            self.value31 = value31
        if value32 is not None:
            self.value32 = value32
        if value33 is not None:
            self.value33 = value33
        if value34 is not None:
            self.value34 = value34
        if value35 is not None:
            self.value35 = value35
        if value36 is not None:
            self.value36 = value36
        if value37 is not None:
            self.value37 = value37
        if value38 is not None:
            self.value38 = value38
        if value39 is not None:
            self.value39 = value39
        if value40 is not None:
            self.value40 = value40
        if raw_value1 is not None:
            self.raw_value1 = raw_value1
        if raw_value2 is not None:
            self.raw_value2 = raw_value2
        if raw_value3 is not None:
            self.raw_value3 = raw_value3
        if raw_value4 is not None:
            self.raw_value4 = raw_value4
        if raw_value5 is not None:
            self.raw_value5 = raw_value5
        if raw_value6 is not None:
            self.raw_value6 = raw_value6
        if raw_value7 is not None:
            self.raw_value7 = raw_value7
        if raw_value8 is not None:
            self.raw_value8 = raw_value8
        if raw_value9 is not None:
            self.raw_value9 = raw_value9
        if raw_value10 is not None:
            self.raw_value10 = raw_value10
        if raw_value11 is not None:
            self.raw_value11 = raw_value11
        if raw_value12 is not None:
            self.raw_value12 = raw_value12
        if raw_value13 is not None:
            self.raw_value13 = raw_value13
        if raw_value14 is not None:
            self.raw_value14 = raw_value14
        if raw_value15 is not None:
            self.raw_value15 = raw_value15
        if raw_value16 is not None:
            self.raw_value16 = raw_value16
        if raw_value17 is not None:
            self.raw_value17 = raw_value17
        if raw_value18 is not None:
            self.raw_value18 = raw_value18
        if raw_value19 is not None:
            self.raw_value19 = raw_value19
        if raw_value20 is not None:
            self.raw_value20 = raw_value20
        if raw_value21 is not None:
            self.raw_value21 = raw_value21
        if raw_value22 is not None:
            self.raw_value22 = raw_value22
        if raw_value23 is not None:
            self.raw_value23 = raw_value23
        if raw_value24 is not None:
            self.raw_value24 = raw_value24
        if raw_value25 is not None:
            self.raw_value25 = raw_value25
        if raw_value26 is not None:
            self.raw_value26 = raw_value26
        if raw_value27 is not None:
            self.raw_value27 = raw_value27
        if raw_value28 is not None:
            self.raw_value28 = raw_value28
        if raw_value29 is not None:
            self.raw_value29 = raw_value29
        if raw_value30 is not None:
            self.raw_value30 = raw_value30
        if raw_value31 is not None:
            self.raw_value31 = raw_value31
        if raw_value32 is not None:
            self.raw_value32 = raw_value32
        if raw_value33 is not None:
            self.raw_value33 = raw_value33
        if raw_value34 is not None:
            self.raw_value34 = raw_value34
        if raw_value35 is not None:
            self.raw_value35 = raw_value35
        if raw_value36 is not None:
            self.raw_value36 = raw_value36
        if raw_value37 is not None:
            self.raw_value37 = raw_value37
        if raw_value38 is not None:
            self.raw_value38 = raw_value38
        if raw_value39 is not None:
            self.raw_value39 = raw_value39
        if raw_value40 is not None:
            self.raw_value40 = raw_value40
        if subtitles_to_readings is not None:
            self.subtitles_to_readings = subtitles_to_readings
        if value_subtitle1 is not None:
            self.value_subtitle1 = value_subtitle1
        if value_subtitle2 is not None:
            self.value_subtitle2 = value_subtitle2
        if value_subtitle3 is not None:
            self.value_subtitle3 = value_subtitle3
        if value_subtitle4 is not None:
            self.value_subtitle4 = value_subtitle4
        if value_subtitle5 is not None:
            self.value_subtitle5 = value_subtitle5
        if value_subtitle6 is not None:
            self.value_subtitle6 = value_subtitle6
        if value_subtitle7 is not None:
            self.value_subtitle7 = value_subtitle7
        if value_subtitle8 is not None:
            self.value_subtitle8 = value_subtitle8
        if value_subtitle9 is not None:
            self.value_subtitle9 = value_subtitle9
        if value_subtitle10 is not None:
            self.value_subtitle10 = value_subtitle10
        if value_subtitle11 is not None:
            self.value_subtitle11 = value_subtitle11
        if value_subtitle12 is not None:
            self.value_subtitle12 = value_subtitle12
        if value_subtitle13 is not None:
            self.value_subtitle13 = value_subtitle13
        if value_subtitle14 is not None:
            self.value_subtitle14 = value_subtitle14
        if value_subtitle15 is not None:
            self.value_subtitle15 = value_subtitle15
        if value_subtitle16 is not None:
            self.value_subtitle16 = value_subtitle16
        if value_subtitle17 is not None:
            self.value_subtitle17 = value_subtitle17
        if value_subtitle18 is not None:
            self.value_subtitle18 = value_subtitle18
        if value_subtitle19 is not None:
            self.value_subtitle19 = value_subtitle19
        if value_subtitle20 is not None:
            self.value_subtitle20 = value_subtitle20
        if value_subtitle21 is not None:
            self.value_subtitle21 = value_subtitle21
        if value_subtitle22 is not None:
            self.value_subtitle22 = value_subtitle22
        if value_subtitle23 is not None:
            self.value_subtitle23 = value_subtitle23
        if value_subtitle24 is not None:
            self.value_subtitle24 = value_subtitle24
        if value_subtitle25 is not None:
            self.value_subtitle25 = value_subtitle25
        if value_subtitle26 is not None:
            self.value_subtitle26 = value_subtitle26
        if value_subtitle27 is not None:
            self.value_subtitle27 = value_subtitle27
        if value_subtitle28 is not None:
            self.value_subtitle28 = value_subtitle28
        if value_subtitle29 is not None:
            self.value_subtitle29 = value_subtitle29
        if value_subtitle30 is not None:
            self.value_subtitle30 = value_subtitle30
        if value_subtitle31 is not None:
            self.value_subtitle31 = value_subtitle31
        if value_subtitle32 is not None:
            self.value_subtitle32 = value_subtitle32
        if value_subtitle33 is not None:
            self.value_subtitle33 = value_subtitle33
        if value_subtitle34 is not None:
            self.value_subtitle34 = value_subtitle34
        if value_subtitle35 is not None:
            self.value_subtitle35 = value_subtitle35
        if value_subtitle36 is not None:
            self.value_subtitle36 = value_subtitle36
        if value_subtitle37 is not None:
            self.value_subtitle37 = value_subtitle37
        if value_subtitle38 is not None:
            self.value_subtitle38 = value_subtitle38
        if value_subtitle39 is not None:
            self.value_subtitle39 = value_subtitle39
        if value_subtitle40 is not None:
            self.value_subtitle40 = value_subtitle40
        if values_decimal_places is not None:
            self.values_decimal_places = values_decimal_places
        if repeat_measurement_and_calculate_hysteresis is not None:
            self.repeat_measurement_and_calculate_hysteresis = (
                repeat_measurement_and_calculate_hysteresis
            )
        if measurement_point_order is not None:
            self.measurement_point_order = measurement_point_order
        if hysteresis_point is not None:
            self.hysteresis_point = hysteresis_point
        if max_hysteresis is not None:
            self.max_hysteresis = max_hysteresis
        if run is not None:
            self.run = run
        if direction is not None:
            self.direction = direction
        if hysteresis is not None:
            self.hysteresis = hysteresis
        if column_mean is not None:
            self.column_mean = column_mean
        if column_mean_result is not None:
            self.column_mean_result = column_mean_result
        if column_sd is not None:
            self.column_sd = column_sd
        if column_sd_result is not None:
            self.column_sd_result = column_sd_result
        if column_cv is not None:
            self.column_cv = column_cv
        if column_cv_result is not None:
            self.column_cv_result = column_cv_result
        if column_range is not None:
            self.column_range = column_range
        if column_range_result is not None:
            self.column_range_result = column_range_result
        if column_delta is not None:
            self.column_delta = column_delta
        if column_delta_result is not None:
            self.column_delta_result = column_delta_result
        if column_result is not None:
            self.column_result = column_result

    @property
    def is_accredited(self):
        """Gets the is_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The is_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_accredited

    @is_accredited.setter
    def is_accredited(self, is_accredited):
        """Sets the is_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param is_accredited: The is_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._is_accredited = is_accredited

    @property
    def service_total(self):
        """Gets the service_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._service_total

    @service_total.setter
    def service_total(self, service_total):
        """Sets the service_total of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_total: The service_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._service_total = service_total

    @property
    def repairs_total(self):
        """Gets the repairs_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The repairs_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._repairs_total

    @repairs_total.setter
    def repairs_total(self, repairs_total):
        """Sets the repairs_total of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param repairs_total: The repairs_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._repairs_total = repairs_total

    @property
    def parts_total(self):
        """Gets the parts_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The parts_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._parts_total

    @parts_total.setter
    def parts_total(self, parts_total):
        """Sets the parts_total of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param parts_total: The parts_total of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._parts_total = parts_total

    @property
    def parameter_id(self):
        """Gets the parameter_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The parameter_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._parameter_id

    @parameter_id.setter
    def parameter_id(self, parameter_id):
        """Sets the parameter_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param parameter_id: The parameter_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._parameter_id = parameter_id

    @property
    def tool_range_name(self):
        """Gets the tool_range_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tool_range_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tool_range_name

    @tool_range_name.setter
    def tool_range_name(self, tool_range_name):
        """Sets the tool_range_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tool_range_name: The tool_range_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._tool_range_name = tool_range_name

    @property
    def tool_range_uncertainty(self):
        """Gets the tool_range_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tool_range_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tool_range_uncertainty

    @tool_range_uncertainty.setter
    def tool_range_uncertainty(self, tool_range_uncertainty):
        """Sets the tool_range_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tool_range_uncertainty: The tool_range_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._tool_range_uncertainty = tool_range_uncertainty

    @property
    def primary_tool_last_service_date(self):
        """Gets the primary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._primary_tool_last_service_date

    @primary_tool_last_service_date.setter
    def primary_tool_last_service_date(self, primary_tool_last_service_date):
        """Sets the primary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_last_service_date: The primary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._primary_tool_last_service_date = primary_tool_last_service_date

    @property
    def primary_tool_next_service_date(self):
        """Gets the primary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._primary_tool_next_service_date

    @primary_tool_next_service_date.setter
    def primary_tool_next_service_date(self, primary_tool_next_service_date):
        """Sets the primary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_next_service_date: The primary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._primary_tool_next_service_date = primary_tool_next_service_date

    @property
    def primary_tool_calibrated_by(self):
        """Gets the primary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._primary_tool_calibrated_by

    @primary_tool_calibrated_by.setter
    def primary_tool_calibrated_by(self, primary_tool_calibrated_by):
        """Sets the primary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_calibrated_by: The primary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._primary_tool_calibrated_by = primary_tool_calibrated_by

    @property
    def primary_tool_tool_name(self):
        """Gets the primary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._primary_tool_tool_name

    @primary_tool_tool_name.setter
    def primary_tool_tool_name(self, primary_tool_tool_name):
        """Sets the primary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_tool_name: The primary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._primary_tool_tool_name = primary_tool_tool_name

    @property
    def primary_tool_tool_description(self):
        """Gets the primary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._primary_tool_tool_description

    @primary_tool_tool_description.setter
    def primary_tool_tool_description(self, primary_tool_tool_description):
        """Sets the primary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_tool_description: The primary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._primary_tool_tool_description = primary_tool_tool_description

    @property
    def primary_tool_tool_type_name(self):
        """Gets the primary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._primary_tool_tool_type_name

    @primary_tool_tool_type_name.setter
    def primary_tool_tool_type_name(self, primary_tool_tool_type_name):
        """Sets the primary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_tool_type_name: The primary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._primary_tool_tool_type_name = primary_tool_tool_type_name

    @property
    def primary_tool_manufacturer(self):
        """Gets the primary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._primary_tool_manufacturer

    @primary_tool_manufacturer.setter
    def primary_tool_manufacturer(self, primary_tool_manufacturer):
        """Sets the primary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_manufacturer: The primary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._primary_tool_manufacturer = primary_tool_manufacturer

    @property
    def primary_tool_manufacturer_part_number(self):
        """Gets the primary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._primary_tool_manufacturer_part_number

    @primary_tool_manufacturer_part_number.setter
    def primary_tool_manufacturer_part_number(
        self, primary_tool_manufacturer_part_number
    ):
        """Sets the primary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_manufacturer_part_number: The primary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._primary_tool_manufacturer_part_number = (
            primary_tool_manufacturer_part_number
        )

    @property
    def primary_tool_serial_number(self):
        """Gets the primary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The primary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._primary_tool_serial_number

    @primary_tool_serial_number.setter
    def primary_tool_serial_number(self, primary_tool_serial_number):
        """Sets the primary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param primary_tool_serial_number: The primary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._primary_tool_serial_number = primary_tool_serial_number

    @property
    def secondary_tool_last_service_date(self):
        """Gets the secondary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._secondary_tool_last_service_date

    @secondary_tool_last_service_date.setter
    def secondary_tool_last_service_date(self, secondary_tool_last_service_date):
        """Sets the secondary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_last_service_date: The secondary_tool_last_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._secondary_tool_last_service_date = secondary_tool_last_service_date

    @property
    def secondary_tool_next_service_date(self):
        """Gets the secondary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._secondary_tool_next_service_date

    @secondary_tool_next_service_date.setter
    def secondary_tool_next_service_date(self, secondary_tool_next_service_date):
        """Sets the secondary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_next_service_date: The secondary_tool_next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._secondary_tool_next_service_date = secondary_tool_next_service_date

    @property
    def secondary_tool_calibrated_by(self):
        """Gets the secondary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_tool_calibrated_by

    @secondary_tool_calibrated_by.setter
    def secondary_tool_calibrated_by(self, secondary_tool_calibrated_by):
        """Sets the secondary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_calibrated_by: The secondary_tool_calibrated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_tool_calibrated_by = secondary_tool_calibrated_by

    @property
    def secondary_tool_tool_name(self):
        """Gets the secondary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_tool_tool_name

    @secondary_tool_tool_name.setter
    def secondary_tool_tool_name(self, secondary_tool_tool_name):
        """Sets the secondary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_tool_name: The secondary_tool_tool_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_tool_tool_name = secondary_tool_tool_name

    @property
    def secondary_tool_tool_description(self):
        """Gets the secondary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_tool_tool_description

    @secondary_tool_tool_description.setter
    def secondary_tool_tool_description(self, secondary_tool_tool_description):
        """Sets the secondary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_tool_description: The secondary_tool_tool_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_tool_tool_description = secondary_tool_tool_description

    @property
    def secondary_tool_tool_type_name(self):
        """Gets the secondary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_tool_tool_type_name

    @secondary_tool_tool_type_name.setter
    def secondary_tool_tool_type_name(self, secondary_tool_tool_type_name):
        """Sets the secondary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_tool_type_name: The secondary_tool_tool_type_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_tool_tool_type_name = secondary_tool_tool_type_name

    @property
    def secondary_tool_manufacturer(self):
        """Gets the secondary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_tool_manufacturer

    @secondary_tool_manufacturer.setter
    def secondary_tool_manufacturer(self, secondary_tool_manufacturer):
        """Sets the secondary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_manufacturer: The secondary_tool_manufacturer of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_tool_manufacturer = secondary_tool_manufacturer

    @property
    def secondary_tool_manufacturer_part_number(self):
        """Gets the secondary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_tool_manufacturer_part_number

    @secondary_tool_manufacturer_part_number.setter
    def secondary_tool_manufacturer_part_number(
        self, secondary_tool_manufacturer_part_number
    ):
        """Sets the secondary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_manufacturer_part_number: The secondary_tool_manufacturer_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_tool_manufacturer_part_number = (
            secondary_tool_manufacturer_part_number
        )

    @property
    def secondary_tool_serial_number(self):
        """Gets the secondary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_tool_serial_number

    @secondary_tool_serial_number.setter
    def secondary_tool_serial_number(self, secondary_tool_serial_number):
        """Sets the secondary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_tool_serial_number: The secondary_tool_serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_tool_serial_number = secondary_tool_serial_number

    @property
    def measurement_set_name(self):
        """Gets the measurement_set_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_set_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._measurement_set_name

    @measurement_set_name.setter
    def measurement_set_name(self, measurement_set_name):
        """Sets the measurement_set_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_set_name: The measurement_set_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._measurement_set_name = measurement_set_name

    @property
    def decimal_places(self):
        """Gets the decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._decimal_places

    @decimal_places.setter
    def decimal_places(self, decimal_places):
        """Sets the decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param decimal_places: The decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._decimal_places = decimal_places

    @property
    def significant_figures(self):
        """Gets the significant_figures of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The significant_figures of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._significant_figures

    @significant_figures.setter
    def significant_figures(self, significant_figures):
        """Sets the significant_figures of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param significant_figures: The significant_figures of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._significant_figures = significant_figures

    @property
    def sd_header(self):
        """Gets the sd_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The sd_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._sd_header

    @sd_header.setter
    def sd_header(self, sd_header):
        """Sets the sd_header of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param sd_header: The sd_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._sd_header = sd_header

    @property
    def cv_header(self):
        """Gets the cv_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cv_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._cv_header

    @cv_header.setter
    def cv_header(self, cv_header):
        """Sets the cv_header of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cv_header: The cv_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._cv_header = cv_header

    @property
    def measurement_local_time(self):
        """Gets the measurement_local_time of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_local_time of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._measurement_local_time

    @measurement_local_time.setter
    def measurement_local_time(self, measurement_local_time):
        """Sets the measurement_local_time of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_local_time: The measurement_local_time of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._measurement_local_time = measurement_local_time

    @property
    def mean(self):
        """Gets the mean of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mean of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._mean

    @mean.setter
    def mean(self, mean):
        """Sets the mean of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mean: The mean of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._mean = mean

    @property
    def mean_raw(self):
        """Gets the mean_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mean_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._mean_raw

    @mean_raw.setter
    def mean_raw(self, mean_raw):
        """Sets the mean_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mean_raw: The mean_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._mean_raw = mean_raw

    @property
    def mean_decimal_places(self):
        """Gets the mean_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mean_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._mean_decimal_places

    @mean_decimal_places.setter
    def mean_decimal_places(self, mean_decimal_places):
        """Sets the mean_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mean_decimal_places: The mean_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._mean_decimal_places = mean_decimal_places

    @property
    def mean_extended(self):
        """Gets the mean_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mean_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._mean_extended

    @mean_extended.setter
    def mean_extended(self, mean_extended):
        """Sets the mean_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mean_extended: The mean_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._mean_extended = mean_extended

    @property
    def sd(self):
        """Gets the sd of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The sd of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._sd

    @sd.setter
    def sd(self, sd):
        """Sets the sd of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param sd: The sd of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._sd = sd

    @property
    def sd_raw(self):
        """Gets the sd_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The sd_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._sd_raw

    @sd_raw.setter
    def sd_raw(self, sd_raw):
        """Sets the sd_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param sd_raw: The sd_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._sd_raw = sd_raw

    @property
    def sd_decimal_places(self):
        """Gets the sd_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The sd_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._sd_decimal_places

    @sd_decimal_places.setter
    def sd_decimal_places(self, sd_decimal_places):
        """Sets the sd_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param sd_decimal_places: The sd_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._sd_decimal_places = sd_decimal_places

    @property
    def delta(self):
        """Gets the delta of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The delta of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._delta

    @delta.setter
    def delta(self, delta):
        """Sets the delta of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param delta: The delta of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._delta = delta

    @property
    def range(self):
        """Gets the range of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The range of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._range

    @range.setter
    def range(self, range):
        """Sets the range of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param range: The range of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._range = range

    @property
    def sd_extended(self):
        """Gets the sd_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The sd_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._sd_extended

    @sd_extended.setter
    def sd_extended(self, sd_extended):
        """Sets the sd_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param sd_extended: The sd_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._sd_extended = sd_extended

    @property
    def range_extended(self):
        """Gets the range_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The range_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._range_extended

    @range_extended.setter
    def range_extended(self, range_extended):
        """Sets the range_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param range_extended: The range_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._range_extended = range_extended

    @property
    def delta_extended(self):
        """Gets the delta_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The delta_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._delta_extended

    @delta_extended.setter
    def delta_extended(self, delta_extended):
        """Sets the delta_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param delta_extended: The delta_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._delta_extended = delta_extended

    @property
    def minimum_measured_value(self):
        """Gets the minimum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The minimum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._minimum_measured_value

    @minimum_measured_value.setter
    def minimum_measured_value(self, minimum_measured_value):
        """Sets the minimum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param minimum_measured_value: The minimum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._minimum_measured_value = minimum_measured_value

    @property
    def maximum_measured_value(self):
        """Gets the maximum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The maximum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._maximum_measured_value

    @maximum_measured_value.setter
    def maximum_measured_value(self, maximum_measured_value):
        """Sets the maximum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param maximum_measured_value: The maximum_measured_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._maximum_measured_value = maximum_measured_value

    @property
    def min_max_value_extended(self):
        """Gets the min_max_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The min_max_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._min_max_value_extended

    @min_max_value_extended.setter
    def min_max_value_extended(self, min_max_value_extended):
        """Sets the min_max_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param min_max_value_extended: The min_max_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._min_max_value_extended = min_max_value_extended

    @property
    def cv(self):
        """Gets the cv of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cv of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._cv

    @cv.setter
    def cv(self, cv):
        """Sets the cv of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cv: The cv of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._cv = cv

    @property
    def cv_raw(self):
        """Gets the cv_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cv_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._cv_raw

    @cv_raw.setter
    def cv_raw(self, cv_raw):
        """Sets the cv_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cv_raw: The cv_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._cv_raw = cv_raw

    @property
    def cv_decimal_places(self):
        """Gets the cv_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cv_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._cv_decimal_places

    @cv_decimal_places.setter
    def cv_decimal_places(self, cv_decimal_places):
        """Sets the cv_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cv_decimal_places: The cv_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._cv_decimal_places = cv_decimal_places

    @property
    def cv_extended(self):
        """Gets the cv_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cv_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._cv_extended

    @cv_extended.setter
    def cv_extended(self, cv_extended):
        """Sets the cv_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cv_extended: The cv_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._cv_extended = cv_extended

    @property
    def result(self):
        """Gets the result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param result: The result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._result = result

    @property
    def range_result(self):
        """Gets the range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._range_result

    @range_result.setter
    def range_result(self, range_result):
        """Sets the range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param range_result: The range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._range_result = range_result

    @property
    def delta_result(self):
        """Gets the delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._delta_result

    @delta_result.setter
    def delta_result(self, delta_result):
        """Sets the delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param delta_result: The delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._delta_result = delta_result

    @property
    def min_result(self):
        """Gets the min_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The min_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._min_result

    @min_result.setter
    def min_result(self, min_result):
        """Sets the min_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param min_result: The min_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._min_result = min_result

    @property
    def max_result(self):
        """Gets the max_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The max_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._max_result

    @max_result.setter
    def max_result(self, max_result):
        """Sets the max_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param max_result: The max_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._max_result = max_result

    @property
    def tar_result(self):
        """Gets the tar_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tar_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._tar_result

    @tar_result.setter
    def tar_result(self, tar_result):
        """Sets the tar_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tar_result: The tar_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._tar_result = tar_result

    @property
    def tur_result(self):
        """Gets the tur_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tur_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._tur_result

    @tur_result.setter
    def tur_result(self, tur_result):
        """Sets the tur_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tur_result: The tur_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._tur_result = tur_result

    @property
    def error_result(self):
        """Gets the error_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The error_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._error_result

    @error_result.setter
    def error_result(self, error_result):
        """Sets the error_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param error_result: The error_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._error_result = error_result

    @property
    def sd_result(self):
        """Gets the sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._sd_result

    @sd_result.setter
    def sd_result(self, sd_result):
        """Sets the sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param sd_result: The sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._sd_result = sd_result

    @property
    def cv_result(self):
        """Gets the cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._cv_result

    @cv_result.setter
    def cv_result(self, cv_result):
        """Sets the cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cv_result: The cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._cv_result = cv_result

    @property
    def custom_field_result(self):
        """Gets the custom_field_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The custom_field_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._custom_field_result

    @custom_field_result.setter
    def custom_field_result(self, custom_field_result):
        """Sets the custom_field_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param custom_field_result: The custom_field_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._custom_field_result = custom_field_result

    @property
    def mu(self):
        """Gets the mu of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mu of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._mu

    @mu.setter
    def mu(self, mu):
        """Sets the mu of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mu: The mu of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._mu = mu

    @property
    def mu_raw(self):
        """Gets the mu_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mu_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._mu_raw

    @mu_raw.setter
    def mu_raw(self, mu_raw):
        """Sets the mu_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mu_raw: The mu_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._mu_raw = mu_raw

    @property
    def mu_effective_dof(self):
        """Gets the mu_effective_dof of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mu_effective_dof of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._mu_effective_dof

    @mu_effective_dof.setter
    def mu_effective_dof(self, mu_effective_dof):
        """Sets the mu_effective_dof of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mu_effective_dof: The mu_effective_dof of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._mu_effective_dof = mu_effective_dof

    @property
    def mu_coverage_factor(self):
        """Gets the mu_coverage_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mu_coverage_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._mu_coverage_factor

    @mu_coverage_factor.setter
    def mu_coverage_factor(self, mu_coverage_factor):
        """Sets the mu_coverage_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mu_coverage_factor: The mu_coverage_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._mu_coverage_factor = mu_coverage_factor

    @property
    def mu_extended(self):
        """Gets the mu_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The mu_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._mu_extended

    @mu_extended.setter
    def mu_extended(self, mu_extended):
        """Sets the mu_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param mu_extended: The mu_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._mu_extended = mu_extended

    @property
    def cmc(self):
        """Gets the cmc of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cmc of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._cmc

    @cmc.setter
    def cmc(self, cmc):
        """Sets the cmc of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cmc: The cmc of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._cmc = cmc

    @property
    def cmc_comments(self):
        """Gets the cmc_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The cmc_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._cmc_comments

    @cmc_comments.setter
    def cmc_comments(self, cmc_comments):
        """Sets the cmc_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param cmc_comments: The cmc_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._cmc_comments = cmc_comments

    @property
    def tur(self):
        """Gets the tur of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tur of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._tur

    @tur.setter
    def tur(self, tur):
        """Sets the tur of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tur: The tur of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._tur = tur

    @property
    def tur_raw(self):
        """Gets the tur_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tur_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._tur_raw

    @tur_raw.setter
    def tur_raw(self, tur_raw):
        """Sets the tur_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tur_raw: The tur_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._tur_raw = tur_raw

    @property
    def tur_decimal_places(self):
        """Gets the tur_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tur_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._tur_decimal_places

    @tur_decimal_places.setter
    def tur_decimal_places(self, tur_decimal_places):
        """Sets the tur_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tur_decimal_places: The tur_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._tur_decimal_places = tur_decimal_places

    @property
    def tar(self):
        """Gets the tar of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tar of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._tar

    @tar.setter
    def tar(self, tar):
        """Sets the tar of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tar: The tar of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._tar = tar

    @property
    def tar_raw(self):
        """Gets the tar_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tar_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._tar_raw

    @tar_raw.setter
    def tar_raw(self, tar_raw):
        """Sets the tar_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tar_raw: The tar_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._tar_raw = tar_raw

    @property
    def tar_decimal_places(self):
        """Gets the tar_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tar_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._tar_decimal_places

    @tar_decimal_places.setter
    def tar_decimal_places(self, tar_decimal_places):
        """Sets the tar_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tar_decimal_places: The tar_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._tar_decimal_places = tar_decimal_places

    @property
    def guard_band(self):
        """Gets the guard_band of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The guard_band of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._guard_band

    @guard_band.setter
    def guard_band(self, guard_band):
        """Sets the guard_band of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param guard_band: The guard_band of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._guard_band = guard_band

    @property
    def guard_band_logic(self):
        """Gets the guard_band_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The guard_band_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._guard_band_logic

    @guard_band_logic.setter
    def guard_band_logic(self, guard_band_logic):
        """Sets the guard_band_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param guard_band_logic: The guard_band_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["Ncslz5403", "Uncertainty", "Tur41", "Rds"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and guard_band_logic not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `guard_band_logic` ({0}), must be one of {1}".format(  # noqa: E501
                    guard_band_logic, allowed_values
                )
            )

        self._guard_band_logic = guard_band_logic

    @property
    def uncertainty_budget(self):
        """Gets the uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._uncertainty_budget

    @uncertainty_budget.setter
    def uncertainty_budget(self, uncertainty_budget):
        """Sets the uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param uncertainty_budget: The uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._uncertainty_budget = uncertainty_budget

    @property
    def calculated_uncertainty(self):
        """Gets the calculated_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The calculated_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._calculated_uncertainty

    @calculated_uncertainty.setter
    def calculated_uncertainty(self, calculated_uncertainty):
        """Sets the calculated_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param calculated_uncertainty: The calculated_uncertainty of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._calculated_uncertainty = calculated_uncertainty

    @property
    def lock_uncertainty_budget(self):
        """Gets the lock_uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The lock_uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._lock_uncertainty_budget

    @lock_uncertainty_budget.setter
    def lock_uncertainty_budget(self, lock_uncertainty_budget):
        """Sets the lock_uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param lock_uncertainty_budget: The lock_uncertainty_budget of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._lock_uncertainty_budget = lock_uncertainty_budget

    @property
    def lab_mu(self):
        """Gets the lab_mu of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The lab_mu of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._lab_mu

    @lab_mu.setter
    def lab_mu(self, lab_mu):
        """Sets the lab_mu of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param lab_mu: The lab_mu of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._lab_mu = lab_mu

    @property
    def channel(self):
        """Gets the channel of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The channel of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param channel: The channel of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._channel = channel

    @property
    def measurement_type(self):
        """Gets the measurement_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._measurement_type

    @measurement_type.setter
    def measurement_type(self, measurement_type):
        """Sets the measurement_type of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_type: The measurement_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["Data", "Cumulative"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and measurement_type not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `measurement_type` ({0}), must be one of {1}".format(  # noqa: E501
                    measurement_type, allowed_values
                )
            )

        self._measurement_type = measurement_type

    @property
    def updated_by(self):
        """Gets the updated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The updated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._updated_by

    @updated_by.setter
    def updated_by(self, updated_by):
        """Sets the updated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param updated_by: The updated_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._updated_by = updated_by

    @property
    def updated_on(self):
        """Gets the updated_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The updated_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_on

    @updated_on.setter
    def updated_on(self, updated_on):
        """Sets the updated_on of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param updated_on: The updated_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._updated_on = updated_on

    @property
    def error(self):
        """Gets the error of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The error of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param error: The error of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._error = error

    @property
    def error_extended(self):
        """Gets the error_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The error_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._error_extended

    @error_extended.setter
    def error_extended(self, error_extended):
        """Sets the error_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param error_extended: The error_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._error_extended = error_extended

    @property
    def require_adjustment(self):
        """Gets the require_adjustment of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The require_adjustment of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._require_adjustment

    @require_adjustment.setter
    def require_adjustment(self, require_adjustment):
        """Sets the require_adjustment of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param require_adjustment: The require_adjustment of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._require_adjustment = require_adjustment

    @property
    def adjustment_threshold(self):
        """Gets the adjustment_threshold of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The adjustment_threshold of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._adjustment_threshold

    @adjustment_threshold.setter
    def adjustment_threshold(self, adjustment_threshold):
        """Sets the adjustment_threshold of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param adjustment_threshold: The adjustment_threshold of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._adjustment_threshold = adjustment_threshold

    @property
    def percent_of_tolerance(self):
        """Gets the percent_of_tolerance of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The percent_of_tolerance of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._percent_of_tolerance

    @percent_of_tolerance.setter
    def percent_of_tolerance(self, percent_of_tolerance):
        """Sets the percent_of_tolerance of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param percent_of_tolerance: The percent_of_tolerance of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._percent_of_tolerance = percent_of_tolerance

    @property
    def percent_of_tolerance_extended(self):
        """Gets the percent_of_tolerance_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The percent_of_tolerance_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._percent_of_tolerance_extended

    @percent_of_tolerance_extended.setter
    def percent_of_tolerance_extended(self, percent_of_tolerance_extended):
        """Sets the percent_of_tolerance_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param percent_of_tolerance_extended: The percent_of_tolerance_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._percent_of_tolerance_extended = percent_of_tolerance_extended

    @property
    def tol_decimal_places(self):
        """Gets the tol_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tol_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._tol_decimal_places

    @tol_decimal_places.setter
    def tol_decimal_places(self, tol_decimal_places):
        """Sets the tol_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tol_decimal_places: The tol_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._tol_decimal_places = tol_decimal_places

    @property
    def specification_title(self):
        """Gets the specification_title of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The specification_title of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._specification_title

    @specification_title.setter
    def specification_title(self, specification_title):
        """Sets the specification_title of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param specification_title: The specification_title of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._specification_title = specification_title

    @property
    def specification_subtitle(self):
        """Gets the specification_subtitle of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The specification_subtitle of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._specification_subtitle

    @specification_subtitle.setter
    def specification_subtitle(self, specification_subtitle):
        """Sets the specification_subtitle of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param specification_subtitle: The specification_subtitle of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._specification_subtitle = specification_subtitle

    @property
    def specification_group(self):
        """Gets the specification_group of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The specification_group of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._specification_group

    @specification_group.setter
    def specification_group(self, specification_group):
        """Sets the specification_group of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param specification_group: The specification_group of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._specification_group = specification_group

    @property
    def batch_type(self):
        """Gets the batch_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The batch_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._batch_type

    @batch_type.setter
    def batch_type(self, batch_type):
        """Sets the batch_type of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param batch_type: The batch_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._batch_type = batch_type

    @property
    def batch_result(self):
        """Gets the batch_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The batch_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._batch_result

    @batch_result.setter
    def batch_result(self, batch_result):
        """Sets the batch_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param batch_result: The batch_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._batch_result = batch_result

    @property
    def is_by_channel(self):
        """Gets the is_by_channel of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The is_by_channel of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_by_channel

    @is_by_channel.setter
    def is_by_channel(self, is_by_channel):
        """Sets the is_by_channel of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param is_by_channel: The is_by_channel of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._is_by_channel = is_by_channel

    @property
    def channel_count(self):
        """Gets the channel_count of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The channel_count of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._channel_count

    @channel_count.setter
    def channel_count(self, channel_count):
        """Sets the channel_count of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param channel_count: The channel_count of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._channel_count = channel_count

    @property
    def is_range_accredited(self):
        """Gets the is_range_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The is_range_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_range_accredited

    @is_range_accredited.setter
    def is_range_accredited(self, is_range_accredited):
        """Sets the is_range_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param is_range_accredited: The is_range_accredited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._is_range_accredited = is_range_accredited

    @property
    def commenced_on(self):
        """Gets the commenced_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The commenced_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._commenced_on

    @commenced_on.setter
    def commenced_on(self, commenced_on):
        """Sets the commenced_on of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param commenced_on: The commenced_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._commenced_on = commenced_on

    @property
    def commenced_by(self):
        """Gets the commenced_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The commenced_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._commenced_by

    @commenced_by.setter
    def commenced_by(self, commenced_by):
        """Sets the commenced_by of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param commenced_by: The commenced_by of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._commenced_by = commenced_by

    @property
    def z_factor(self):
        """Gets the z_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The z_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._z_factor

    @z_factor.setter
    def z_factor(self, z_factor):
        """Sets the z_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param z_factor: The z_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._z_factor = z_factor

    @property
    def air_buoyancy(self):
        """Gets the air_buoyancy of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The air_buoyancy of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._air_buoyancy

    @air_buoyancy.setter
    def air_buoyancy(self, air_buoyancy):
        """Sets the air_buoyancy of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param air_buoyancy: The air_buoyancy of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._air_buoyancy = air_buoyancy

    @property
    def evaporation_rate(self):
        """Gets the evaporation_rate of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The evaporation_rate of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._evaporation_rate

    @evaporation_rate.setter
    def evaporation_rate(self, evaporation_rate):
        """Sets the evaporation_rate of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param evaporation_rate: The evaporation_rate of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._evaporation_rate = evaporation_rate

    @property
    def air_humidity(self):
        """Gets the air_humidity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The air_humidity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._air_humidity

    @air_humidity.setter
    def air_humidity(self, air_humidity):
        """Sets the air_humidity of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param air_humidity: The air_humidity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._air_humidity = air_humidity

    @property
    def altitude(self):
        """Gets the altitude of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The altitude of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._altitude

    @altitude.setter
    def altitude(self, altitude):
        """Sets the altitude of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param altitude: The altitude of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._altitude = altitude

    @property
    def ambient_temperature(self):
        """Gets the ambient_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The ambient_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._ambient_temperature

    @ambient_temperature.setter
    def ambient_temperature(self, ambient_temperature):
        """Sets the ambient_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param ambient_temperature: The ambient_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._ambient_temperature = ambient_temperature

    @property
    def barometric_pressure(self):
        """Gets the barometric_pressure of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The barometric_pressure of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._barometric_pressure

    @barometric_pressure.setter
    def barometric_pressure(self, barometric_pressure):
        """Sets the barometric_pressure of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param barometric_pressure: The barometric_pressure of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._barometric_pressure = barometric_pressure

    @property
    def light_intensity(self):
        """Gets the light_intensity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The light_intensity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._light_intensity

    @light_intensity.setter
    def light_intensity(self, light_intensity):
        """Sets the light_intensity of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param light_intensity: The light_intensity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._light_intensity = light_intensity

    @property
    def noise_level(self):
        """Gets the noise_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The noise_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._noise_level

    @noise_level.setter
    def noise_level(self, noise_level):
        """Sets the noise_level of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param noise_level: The noise_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._noise_level = noise_level

    @property
    def ph_level(self):
        """Gets the ph_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The ph_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._ph_level

    @ph_level.setter
    def ph_level(self, ph_level):
        """Sets the ph_level of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param ph_level: The ph_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._ph_level = ph_level

    @property
    def water_conductivity(self):
        """Gets the water_conductivity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The water_conductivity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._water_conductivity

    @water_conductivity.setter
    def water_conductivity(self, water_conductivity):
        """Sets the water_conductivity of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param water_conductivity: The water_conductivity of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._water_conductivity = water_conductivity

    @property
    def water_temperature(self):
        """Gets the water_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The water_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._water_temperature

    @water_temperature.setter
    def water_temperature(self, water_temperature):
        """Sets the water_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param water_temperature: The water_temperature of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._water_temperature = water_temperature

    @property
    def solar_radiation(self):
        """Gets the solar_radiation of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The solar_radiation of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._solar_radiation

    @solar_radiation.setter
    def solar_radiation(self, solar_radiation):
        """Sets the solar_radiation of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param solar_radiation: The solar_radiation of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._solar_radiation = solar_radiation

    @property
    def wind_speed(self):
        """Gets the wind_speed of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The wind_speed of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._wind_speed

    @wind_speed.setter
    def wind_speed(self, wind_speed):
        """Sets the wind_speed of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param wind_speed: The wind_speed of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._wind_speed = wind_speed

    @property
    def z_factor_uom(self):
        """Gets the z_factor_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The z_factor_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._z_factor_uom

    @z_factor_uom.setter
    def z_factor_uom(self, z_factor_uom):
        """Sets the z_factor_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param z_factor_uom: The z_factor_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._z_factor_uom = z_factor_uom

    @property
    def air_buoyancy_uom(self):
        """Gets the air_buoyancy_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The air_buoyancy_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._air_buoyancy_uom

    @air_buoyancy_uom.setter
    def air_buoyancy_uom(self, air_buoyancy_uom):
        """Sets the air_buoyancy_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param air_buoyancy_uom: The air_buoyancy_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._air_buoyancy_uom = air_buoyancy_uom

    @property
    def evaporation_rate_uom(self):
        """Gets the evaporation_rate_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The evaporation_rate_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._evaporation_rate_uom

    @evaporation_rate_uom.setter
    def evaporation_rate_uom(self, evaporation_rate_uom):
        """Sets the evaporation_rate_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param evaporation_rate_uom: The evaporation_rate_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._evaporation_rate_uom = evaporation_rate_uom

    @property
    def air_humidity_uom(self):
        """Gets the air_humidity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The air_humidity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._air_humidity_uom

    @air_humidity_uom.setter
    def air_humidity_uom(self, air_humidity_uom):
        """Sets the air_humidity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param air_humidity_uom: The air_humidity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._air_humidity_uom = air_humidity_uom

    @property
    def altitude_uom(self):
        """Gets the altitude_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The altitude_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._altitude_uom

    @altitude_uom.setter
    def altitude_uom(self, altitude_uom):
        """Sets the altitude_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param altitude_uom: The altitude_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._altitude_uom = altitude_uom

    @property
    def ambient_temperature_uom(self):
        """Gets the ambient_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The ambient_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._ambient_temperature_uom

    @ambient_temperature_uom.setter
    def ambient_temperature_uom(self, ambient_temperature_uom):
        """Sets the ambient_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param ambient_temperature_uom: The ambient_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._ambient_temperature_uom = ambient_temperature_uom

    @property
    def barometric_pressure_uom(self):
        """Gets the barometric_pressure_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The barometric_pressure_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._barometric_pressure_uom

    @barometric_pressure_uom.setter
    def barometric_pressure_uom(self, barometric_pressure_uom):
        """Sets the barometric_pressure_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param barometric_pressure_uom: The barometric_pressure_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._barometric_pressure_uom = barometric_pressure_uom

    @property
    def light_intensity_uom(self):
        """Gets the light_intensity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The light_intensity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._light_intensity_uom

    @light_intensity_uom.setter
    def light_intensity_uom(self, light_intensity_uom):
        """Sets the light_intensity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param light_intensity_uom: The light_intensity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._light_intensity_uom = light_intensity_uom

    @property
    def noise_level_uom(self):
        """Gets the noise_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The noise_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._noise_level_uom

    @noise_level_uom.setter
    def noise_level_uom(self, noise_level_uom):
        """Sets the noise_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param noise_level_uom: The noise_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._noise_level_uom = noise_level_uom

    @property
    def ph_level_uom(self):
        """Gets the ph_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The ph_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._ph_level_uom

    @ph_level_uom.setter
    def ph_level_uom(self, ph_level_uom):
        """Sets the ph_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param ph_level_uom: The ph_level_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._ph_level_uom = ph_level_uom

    @property
    def water_conductivity_uom(self):
        """Gets the water_conductivity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The water_conductivity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._water_conductivity_uom

    @water_conductivity_uom.setter
    def water_conductivity_uom(self, water_conductivity_uom):
        """Sets the water_conductivity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param water_conductivity_uom: The water_conductivity_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._water_conductivity_uom = water_conductivity_uom

    @property
    def water_temperature_uom(self):
        """Gets the water_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The water_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._water_temperature_uom

    @water_temperature_uom.setter
    def water_temperature_uom(self, water_temperature_uom):
        """Sets the water_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param water_temperature_uom: The water_temperature_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._water_temperature_uom = water_temperature_uom

    @property
    def solar_radiation_uom(self):
        """Gets the solar_radiation_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The solar_radiation_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._solar_radiation_uom

    @solar_radiation_uom.setter
    def solar_radiation_uom(self, solar_radiation_uom):
        """Sets the solar_radiation_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param solar_radiation_uom: The solar_radiation_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._solar_radiation_uom = solar_radiation_uom

    @property
    def wind_speed_uom(self):
        """Gets the wind_speed_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The wind_speed_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._wind_speed_uom

    @wind_speed_uom.setter
    def wind_speed_uom(self, wind_speed_uom):
        """Sets the wind_speed_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param wind_speed_uom: The wind_speed_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._wind_speed_uom = wind_speed_uom

    @property
    def specification_name(self):
        """Gets the specification_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The specification_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._specification_name

    @specification_name.setter
    def specification_name(self, specification_name):
        """Sets the specification_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param specification_name: The specification_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._specification_name = specification_name

    @property
    def parameter_name(self):
        """Gets the parameter_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The parameter_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._parameter_name

    @parameter_name.setter
    def parameter_name(self, parameter_name):
        """Sets the parameter_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param parameter_name: The parameter_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._parameter_name = parameter_name

    @property
    def measurement_set_display_order(self):
        """Gets the measurement_set_display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_set_display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_set_display_order

    @measurement_set_display_order.setter
    def measurement_set_display_order(self, measurement_set_display_order):
        """Sets the measurement_set_display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_set_display_order: The measurement_set_display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._measurement_set_display_order = measurement_set_display_order

    @property
    def display_order(self):
        """Gets the display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param display_order: The display_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._display_order = display_order

    @property
    def unit_of_measure(self):
        """Gets the unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._unit_of_measure

    @unit_of_measure.setter
    def unit_of_measure(self, unit_of_measure):
        """Sets the unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param unit_of_measure: The unit_of_measure of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._unit_of_measure = unit_of_measure

    @property
    def display_format(self):
        """Gets the display_format of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The display_format of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._display_format

    @display_format.setter
    def display_format(self, display_format):
        """Sets the display_format of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param display_format: The display_format of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._display_format = display_format

    @property
    def precision(self):
        """Gets the precision of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The precision of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._precision

    @precision.setter
    def precision(self, precision):
        """Sets the precision of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param precision: The precision of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._precision = precision

    @property
    def minimum(self):
        """Gets the minimum of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The minimum of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._minimum

    @minimum.setter
    def minimum(self, minimum):
        """Sets the minimum of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param minimum: The minimum of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._minimum = minimum

    @property
    def nominal(self):
        """Gets the nominal of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The nominal of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._nominal

    @nominal.setter
    def nominal(self, nominal):
        """Sets the nominal of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param nominal: The nominal of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._nominal = nominal

    @property
    def expected_value(self):
        """Gets the expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._expected_value

    @expected_value.setter
    def expected_value(self, expected_value):
        """Sets the expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param expected_value: The expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._expected_value = expected_value

    @property
    def expected_value_raw(self):
        """Gets the expected_value_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The expected_value_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._expected_value_raw

    @expected_value_raw.setter
    def expected_value_raw(self, expected_value_raw):
        """Sets the expected_value_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param expected_value_raw: The expected_value_raw of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._expected_value_raw = expected_value_raw

    @property
    def test_value(self):
        """Gets the test_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The test_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._test_value

    @test_value.setter
    def test_value(self, test_value):
        """Sets the test_value of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param test_value: The test_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._test_value = test_value

    @property
    def base_value(self):
        """Gets the base_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The base_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._base_value

    @base_value.setter
    def base_value(self, base_value):
        """Sets the base_value of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param base_value: The base_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._base_value = base_value

    @property
    def use_expected_value(self):
        """Gets the use_expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The use_expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._use_expected_value

    @use_expected_value.setter
    def use_expected_value(self, use_expected_value):
        """Sets the use_expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param use_expected_value: The use_expected_value of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._use_expected_value = use_expected_value

    @property
    def reading_entry_logic(self):
        """Gets the reading_entry_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The reading_entry_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._reading_entry_logic

    @reading_entry_logic.setter
    def reading_entry_logic(self, reading_entry_logic):
        """Sets the reading_entry_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param reading_entry_logic: The reading_entry_logic of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "SingleValue",
            "TwoValues",
            "TwoValuesAndResult",
            "MeasuredValueConversion",
            "MeasuredValueConversionDisplay",
            "DoubleSubstitution",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and reading_entry_logic not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `reading_entry_logic` ({0}), must be one of {1}".format(  # noqa: E501
                    reading_entry_logic, allowed_values
                )
            )

        self._reading_entry_logic = reading_entry_logic

    @property
    def reading_entry_math(self):
        """Gets the reading_entry_math of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The reading_entry_math of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._reading_entry_math

    @reading_entry_math.setter
    def reading_entry_math(self, reading_entry_math):
        """Sets the reading_entry_math of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param reading_entry_math: The reading_entry_math of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "Multiplication",
            "Division",
            "Addition",
            "Subtraction",
            "ReverseSubtraction",
            "Difference",
            "Minimum",
            "Maximum",
            "Average",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and reading_entry_math not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `reading_entry_math` ({0}), must be one of {1}".format(  # noqa: E501
                    reading_entry_math, allowed_values
                )
            )

        self._reading_entry_math = reading_entry_math

    @property
    def double_substitution_sequence(self):
        """Gets the double_substitution_sequence of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The double_substitution_sequence of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._double_substitution_sequence

    @double_substitution_sequence.setter
    def double_substitution_sequence(self, double_substitution_sequence):
        """Sets the double_substitution_sequence of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param double_substitution_sequence: The double_substitution_sequence of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "ZeroStandard",
            "StandardTested",
            "TestedStandard",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and double_substitution_sequence not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `double_substitution_sequence` ({0}), must be one of {1}".format(  # noqa: E501
                    double_substitution_sequence, allowed_values
                )
            )

        self._double_substitution_sequence = double_substitution_sequence

    @property
    def reading_entry_math_string(self):
        """Gets the reading_entry_math_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The reading_entry_math_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._reading_entry_math_string

    @reading_entry_math_string.setter
    def reading_entry_math_string(self, reading_entry_math_string):
        """Sets the reading_entry_math_string of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param reading_entry_math_string: The reading_entry_math_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._reading_entry_math_string = reading_entry_math_string

    @property
    def nominal_extended(self):
        """Gets the nominal_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The nominal_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._nominal_extended

    @nominal_extended.setter
    def nominal_extended(self, nominal_extended):
        """Sets the nominal_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param nominal_extended: The nominal_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._nominal_extended = nominal_extended

    @property
    def expected_value_extended(self):
        """Gets the expected_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The expected_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._expected_value_extended

    @expected_value_extended.setter
    def expected_value_extended(self, expected_value_extended):
        """Sets the expected_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param expected_value_extended: The expected_value_extended of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._expected_value_extended = expected_value_extended

    @property
    def maximum(self):
        """Gets the maximum of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The maximum of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._maximum

    @maximum.setter
    def maximum(self, maximum):
        """Sets the maximum of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param maximum: The maximum of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._maximum = maximum

    @property
    def tolerance_min(self):
        """Gets the tolerance_min of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tolerance_min of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._tolerance_min

    @tolerance_min.setter
    def tolerance_min(self, tolerance_min):
        """Sets the tolerance_min of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tolerance_min: The tolerance_min of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._tolerance_min = tolerance_min

    @property
    def tolerance_max(self):
        """Gets the tolerance_max of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tolerance_max of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._tolerance_max

    @tolerance_max.setter
    def tolerance_max(self, tolerance_max):
        """Sets the tolerance_max of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tolerance_max: The tolerance_max of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._tolerance_max = tolerance_max

    @property
    def resolution(self):
        """Gets the resolution of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The resolution of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._resolution

    @resolution.setter
    def resolution(self, resolution):
        """Sets the resolution of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param resolution: The resolution of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._resolution = resolution

    @property
    def resolution_count(self):
        """Gets the resolution_count of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The resolution_count of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._resolution_count

    @resolution_count.setter
    def resolution_count(self, resolution_count):
        """Sets the resolution_count of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param resolution_count: The resolution_count of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._resolution_count = resolution_count

    @property
    def min_max_header(self):
        """Gets the min_max_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The min_max_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._min_max_header

    @min_max_header.setter
    def min_max_header(self, min_max_header):
        """Sets the min_max_header of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param min_max_header: The min_max_header of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._min_max_header = min_max_header

    @property
    def accuracy_class(self):
        """Gets the accuracy_class of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The accuracy_class of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._accuracy_class

    @accuracy_class.setter
    def accuracy_class(self, accuracy_class):
        """Sets the accuracy_class of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param accuracy_class: The accuracy_class of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._accuracy_class = accuracy_class

    @property
    def accuracy_class_min(self):
        """Gets the accuracy_class_min of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The accuracy_class_min of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._accuracy_class_min

    @accuracy_class_min.setter
    def accuracy_class_min(self, accuracy_class_min):
        """Sets the accuracy_class_min of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param accuracy_class_min: The accuracy_class_min of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._accuracy_class_min = accuracy_class_min

    @property
    def accuracy_class_max(self):
        """Gets the accuracy_class_max of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The accuracy_class_max of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._accuracy_class_max

    @accuracy_class_max.setter
    def accuracy_class_max(self, accuracy_class_max):
        """Sets the accuracy_class_max of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param accuracy_class_max: The accuracy_class_max of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._accuracy_class_max = accuracy_class_max

    @property
    def environment_mask(self):
        """Gets the environment_mask of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The environment_mask of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._environment_mask

    @environment_mask.setter
    def environment_mask(self, environment_mask):
        """Sets the environment_mask of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param environment_mask: The environment_mask of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "AmbientTemperature",
            "AirHumidity",
            "BarometricPressure",
            "EvaporationRate",
            "AirBuoyancy",
            "ZFactor",
            "Altitude",
            "WindSpeed",
            "SolarRadiation",
            "LightIntensity",
            "NoiseLevel",
            "PhLevel",
            "WaterConductivity",
            "WaterTemperature",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and environment_mask not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `environment_mask` ({0}), must be one of {1}".format(  # noqa: E501
                    environment_mask, allowed_values
                )
            )

        self._environment_mask = environment_mask

    @property
    def display_name(self):
        """Gets the display_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The display_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param display_name: The display_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._display_name = display_name

    @property
    def display_part_number(self):
        """Gets the display_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The display_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._display_part_number

    @display_part_number.setter
    def display_part_number(self, display_part_number):
        """Sets the display_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param display_part_number: The display_part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._display_part_number = display_part_number

    @property
    def part_number(self):
        """Gets the part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number):
        """Sets the part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param part_number: The part_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._part_number = part_number

    @property
    def vendor_company_id(self):
        """Gets the vendor_company_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The vendor_company_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._vendor_company_id

    @vendor_company_id.setter
    def vendor_company_id(self, vendor_company_id):
        """Sets the vendor_company_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param vendor_company_id: The vendor_company_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._vendor_company_id = vendor_company_id

    @property
    def service_order_number(self):
        """Gets the service_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._service_order_number

    @service_order_number.setter
    def service_order_number(self, service_order_number):
        """Sets the service_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_order_number: The service_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._service_order_number = service_order_number

    @property
    def custom_order_number(self):
        """Gets the custom_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The custom_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._custom_order_number

    @custom_order_number.setter
    def custom_order_number(self, custom_order_number):
        """Sets the custom_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param custom_order_number: The custom_order_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._custom_order_number = custom_order_number

    @property
    def completed_by_name(self):
        """Gets the completed_by_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The completed_by_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._completed_by_name

    @completed_by_name.setter
    def completed_by_name(self, completed_by_name):
        """Sets the completed_by_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param completed_by_name: The completed_by_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._completed_by_name = completed_by_name

    @property
    def completed_on(self):
        """Gets the completed_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The completed_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._completed_on

    @completed_on.setter
    def completed_on(self, completed_on):
        """Sets the completed_on of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param completed_on: The completed_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._completed_on = completed_on

    @property
    def is_limited(self):
        """Gets the is_limited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The is_limited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_limited

    @is_limited.setter
    def is_limited(self, is_limited):
        """Sets the is_limited of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param is_limited: The is_limited of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._is_limited = is_limited

    @property
    def vendor_tag(self):
        """Gets the vendor_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The vendor_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._vendor_tag

    @vendor_tag.setter
    def vendor_tag(self, vendor_tag):
        """Sets the vendor_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param vendor_tag: The vendor_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._vendor_tag = vendor_tag

    @property
    def vendor_service_notes(self):
        """Gets the vendor_service_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The vendor_service_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._vendor_service_notes

    @vendor_service_notes.setter
    def vendor_service_notes(self, vendor_service_notes):
        """Sets the vendor_service_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param vendor_service_notes: The vendor_service_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._vendor_service_notes = vendor_service_notes

    @property
    def room(self):
        """Gets the room of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The room of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._room

    @room.setter
    def room(self, room):
        """Sets the room of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param room: The room of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._room = room

    @property
    def segment_name(self):
        """Gets the segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._segment_name

    @segment_name.setter
    def segment_name(self, segment_name):
        """Sets the segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param segment_name: The segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._segment_name = segment_name

    @property
    def schedule_name(self):
        """Gets the schedule_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The schedule_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._schedule_name

    @schedule_name.setter
    def schedule_name(self, schedule_name):
        """Sets the schedule_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param schedule_name: The schedule_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._schedule_name = schedule_name

    @property
    def next_segment_name(self):
        """Gets the next_segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The next_segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._next_segment_name

    @next_segment_name.setter
    def next_segment_name(self, next_segment_name):
        """Sets the next_segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param next_segment_name: The next_segment_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._next_segment_name = next_segment_name

    @property
    def certificate_number(self):
        """Gets the certificate_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The certificate_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._certificate_number

    @certificate_number.setter
    def certificate_number(self, certificate_number):
        """Sets the certificate_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param certificate_number: The certificate_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._certificate_number = certificate_number

    @property
    def work_status(self):
        """Gets the work_status of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The work_status of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._work_status

    @work_status.setter
    def work_status(self, work_status):
        """Sets the work_status of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param work_status: The work_status of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._work_status = work_status

    @property
    def service_type(self):
        """Gets the service_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_type: The service_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._service_type = service_type

    @property
    def service_level(self):
        """Gets the service_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._service_level

    @service_level.setter
    def service_level(self, service_level):
        """Sets the service_level of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_level: The service_level of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._service_level = service_level

    @property
    def barcode(self):
        """Gets the barcode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The barcode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._barcode

    @barcode.setter
    def barcode(self, barcode):
        """Sets the barcode of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param barcode: The barcode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._barcode = barcode

    @property
    def service_comments(self):
        """Gets the service_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._service_comments

    @service_comments.setter
    def service_comments(self, service_comments):
        """Sets the service_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_comments: The service_comments of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._service_comments = service_comments

    @property
    def order_item_number(self):
        """Gets the order_item_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The order_item_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._order_item_number

    @order_item_number.setter
    def order_item_number(self, order_item_number):
        """Sets the order_item_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param order_item_number: The order_item_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._order_item_number = order_item_number

    @property
    def asset_tag(self):
        """Gets the asset_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The asset_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_tag

    @asset_tag.setter
    def asset_tag(self, asset_tag):
        """Sets the asset_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param asset_tag: The asset_tag of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._asset_tag = asset_tag

    @property
    def asset_user(self):
        """Gets the asset_user of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The asset_user of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_user

    @asset_user.setter
    def asset_user(self, asset_user):
        """Sets the asset_user of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param asset_user: The asset_user of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._asset_user = asset_user

    @property
    def serial_number(self):
        """Gets the serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param serial_number: The serial_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._serial_number = serial_number

    @property
    def equipment_id(self):
        """Gets the equipment_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The equipment_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._equipment_id

    @equipment_id.setter
    def equipment_id(self, equipment_id):
        """Sets the equipment_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param equipment_id: The equipment_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._equipment_id = equipment_id

    @property
    def legacy_identifier(self):
        """Gets the legacy_identifier of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The legacy_identifier of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._legacy_identifier

    @legacy_identifier.setter
    def legacy_identifier(self, legacy_identifier):
        """Sets the legacy_identifier of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param legacy_identifier: The legacy_identifier of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._legacy_identifier = legacy_identifier

    @property
    def site_name(self):
        """Gets the site_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The site_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param site_name: The site_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def asset_name(self):
        """Gets the asset_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The asset_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_name

    @asset_name.setter
    def asset_name(self, asset_name):
        """Sets the asset_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param asset_name: The asset_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._asset_name = asset_name

    @property
    def asset_description(self):
        """Gets the asset_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The asset_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_description

    @asset_description.setter
    def asset_description(self, asset_description):
        """Sets the asset_description of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param asset_description: The asset_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._asset_description = asset_description

    @property
    def product_name(self):
        """Gets the product_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The product_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param product_name: The product_name of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def product_description(self):
        """Gets the product_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The product_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._product_description

    @product_description.setter
    def product_description(self, product_description):
        """Sets the product_description of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param product_description: The product_description of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._product_description = product_description

    @property
    def asset_maker(self):
        """Gets the asset_maker of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The asset_maker of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_maker

    @asset_maker.setter
    def asset_maker(self, asset_maker):
        """Sets the asset_maker of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param asset_maker: The asset_maker of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._asset_maker = asset_maker

    @property
    def station(self):
        """Gets the station of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The station of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._station

    @station.setter
    def station(self, station):
        """Sets the station of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param station: The station of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._station = station

    @property
    def asset_tag_change(self):
        """Gets the asset_tag_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The asset_tag_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_tag_change

    @asset_tag_change.setter
    def asset_tag_change(self, asset_tag_change):
        """Sets the asset_tag_change of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param asset_tag_change: The asset_tag_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._asset_tag_change = asset_tag_change

    @property
    def asset_user_change(self):
        """Gets the asset_user_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The asset_user_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._asset_user_change

    @asset_user_change.setter
    def asset_user_change(self, asset_user_change):
        """Sets the asset_user_change of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param asset_user_change: The asset_user_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._asset_user_change = asset_user_change

    @property
    def serial_number_change(self):
        """Gets the serial_number_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The serial_number_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._serial_number_change

    @serial_number_change.setter
    def serial_number_change(self, serial_number_change):
        """Sets the serial_number_change of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param serial_number_change: The serial_number_change of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._serial_number_change = serial_number_change

    @property
    def service_date(self):
        """Gets the service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._service_date

    @service_date.setter
    def service_date(self, service_date):
        """Sets the service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_date: The service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._service_date = service_date

    @property
    def next_service_date(self):
        """Gets the next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._next_service_date

    @next_service_date.setter
    def next_service_date(self, next_service_date):
        """Sets the next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param next_service_date: The next_service_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._next_service_date = next_service_date

    @property
    def service_order_item_id(self):
        """Gets the service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._service_order_item_id

    @service_order_item_id.setter
    def service_order_item_id(self, service_order_item_id):
        """Sets the service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_order_item_id: The service_order_item_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._service_order_item_id = service_order_item_id

    @property
    def service_order_id(self):
        """Gets the service_order_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The service_order_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._service_order_id

    @service_order_id.setter
    def service_order_id(self, service_order_id):
        """Sets the service_order_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param service_order_id: The service_order_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._service_order_id = service_order_id

    @property
    def measurement_batch_id(self):
        """Gets the measurement_batch_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_batch_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_batch_id

    @measurement_batch_id.setter
    def measurement_batch_id(self, measurement_batch_id):
        """Sets the measurement_batch_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_batch_id: The measurement_batch_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._measurement_batch_id = measurement_batch_id

    @property
    def measurement_id(self):
        """Gets the measurement_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_id

    @measurement_id.setter
    def measurement_id(self, measurement_id):
        """Sets the measurement_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_id: The measurement_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._measurement_id = measurement_id

    @property
    def standard_id(self):
        """Gets the standard_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The standard_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._standard_id

    @standard_id.setter
    def standard_id(self, standard_id):
        """Sets the standard_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param standard_id: The standard_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._standard_id = standard_id

    @property
    def tool_id(self):
        """Gets the tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._tool_id

    @tool_id.setter
    def tool_id(self, tool_id):
        """Sets the tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tool_id: The tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._tool_id = tool_id

    @property
    def measurement_tool_id(self):
        """Gets the measurement_tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_tool_id

    @measurement_tool_id.setter
    def measurement_tool_id(self, measurement_tool_id):
        """Sets the measurement_tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_tool_id: The measurement_tool_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._measurement_tool_id = measurement_tool_id

    @property
    def measurement_condition_id(self):
        """Gets the measurement_condition_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_condition_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_condition_id

    @measurement_condition_id.setter
    def measurement_condition_id(self, measurement_condition_id):
        """Sets the measurement_condition_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_condition_id: The measurement_condition_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._measurement_condition_id = measurement_condition_id

    @property
    def measurement_point_id(self):
        """Gets the measurement_point_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_point_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_point_id

    @measurement_point_id.setter
    def measurement_point_id(self, measurement_point_id):
        """Sets the measurement_point_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_point_id: The measurement_point_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._measurement_point_id = measurement_point_id

    @property
    def measurement_set_id(self):
        """Gets the measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._measurement_set_id

    @measurement_set_id.setter
    def measurement_set_id(self, measurement_set_id):
        """Sets the measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_set_id: The measurement_set_id of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._measurement_set_id = measurement_set_id

    @property
    def is_hidden(self):
        """Gets the is_hidden of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The is_hidden of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_hidden

    @is_hidden.setter
    def is_hidden(self, is_hidden):
        """Sets the is_hidden of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param is_hidden: The is_hidden of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._is_hidden = is_hidden

    @property
    def readings(self):
        """Gets the readings of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The readings of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._readings

    @readings.setter
    def readings(self, readings):
        """Sets the readings of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param readings: The readings of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._readings = readings

    @property
    def tolerance_type(self):
        """Gets the tolerance_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tolerance_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tolerance_type

    @tolerance_type.setter
    def tolerance_type(self, tolerance_type):
        """Sets the tolerance_type of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tolerance_type: The tolerance_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "Percentage",
            "Range",
            "Offset",
            "PercentagePlus",
            "Ppm",
            "PpmPlus",
            "Function",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and tolerance_type not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `tolerance_type` ({0}), must be one of {1}".format(  # noqa: E501
                    tolerance_type, allowed_values
                )
            )

        self._tolerance_type = tolerance_type

    @property
    def tolerance_type_string(self):
        """Gets the tolerance_type_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tolerance_type_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tolerance_type_string

    @tolerance_type_string.setter
    def tolerance_type_string(self, tolerance_type_string):
        """Sets the tolerance_type_string of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tolerance_type_string: The tolerance_type_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._tolerance_type_string = tolerance_type_string

    @property
    def precision_type(self):
        """Gets the precision_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The precision_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._precision_type

    @precision_type.setter
    def precision_type(self, precision_type):
        """Sets the precision_type of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param precision_type: The precision_type of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["Percentage", "UnitOfMeasure", "Readability"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and precision_type not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `precision_type` ({0}), must be one of {1}".format(  # noqa: E501
                    precision_type, allowed_values
                )
            )

        self._precision_type = precision_type

    @property
    def specification_mode(self):
        """Gets the specification_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The specification_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._specification_mode

    @specification_mode.setter
    def specification_mode(self, specification_mode):
        """Sets the specification_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param specification_mode: The specification_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["Point", "Range"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and specification_mode not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `specification_mode` ({0}), must be one of {1}".format(  # noqa: E501
                    specification_mode, allowed_values
                )
            )

        self._specification_mode = specification_mode

    @property
    def tolerance_mode(self):
        """Gets the tolerance_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tolerance_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tolerance_mode

    @tolerance_mode.setter
    def tolerance_mode(self, tolerance_mode):
        """Sets the tolerance_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tolerance_mode: The tolerance_mode of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["Symmetric", "Asymmetric", "Range"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and tolerance_mode not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `tolerance_mode` ({0}), must be one of {1}".format(  # noqa: E501
                    tolerance_mode, allowed_values
                )
            )

        self._tolerance_mode = tolerance_mode

    @property
    def tolerance_unit(self):
        """Gets the tolerance_unit of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tolerance_unit of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tolerance_unit

    @tolerance_unit.setter
    def tolerance_unit(self, tolerance_unit):
        """Sets the tolerance_unit of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tolerance_unit: The tolerance_unit of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["Percentage", "UnitOfMeasure", "Ppm"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and tolerance_unit not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `tolerance_unit` ({0}), must be one of {1}".format(  # noqa: E501
                    tolerance_unit, allowed_values
                )
            )

        self._tolerance_unit = tolerance_unit

    @property
    def tolerance_string(self):
        """Gets the tolerance_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tolerance_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tolerance_string

    @tolerance_string.setter
    def tolerance_string(self, tolerance_string):
        """Sets the tolerance_string of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tolerance_string: The tolerance_string of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._tolerance_string = tolerance_string

    @property
    def po_number(self):
        """Gets the po_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The po_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param po_number: The po_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._po_number = po_number

    @property
    def secondary_po(self):
        """Gets the secondary_po of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The secondary_po of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._secondary_po

    @secondary_po.setter
    def secondary_po(self, secondary_po):
        """Sets the secondary_po of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param secondary_po: The secondary_po of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._secondary_po = secondary_po

    @property
    def shipped_date(self):
        """Gets the shipped_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The shipped_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._shipped_date

    @shipped_date.setter
    def shipped_date(self, shipped_date):
        """Sets the shipped_date of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param shipped_date: The shipped_date of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._shipped_date = shipped_date

    @property
    def shipment_status(self):
        """Gets the shipment_status of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The shipment_status of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._shipment_status

    @shipment_status.setter
    def shipment_status(self, shipment_status):
        """Sets the shipment_status of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param shipment_status: The shipment_status of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "NotShipped",
            "PartialShipment",
            "Shipped",
            "Delivered",
            "OnSite",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and shipment_status not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `shipment_status` ({0}), must be one of {1}".format(  # noqa: E501
                    shipment_status, allowed_values
                )
            )

        self._shipment_status = shipment_status

    @property
    def shipped_on(self):
        """Gets the shipped_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The shipped_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._shipped_on

    @shipped_on.setter
    def shipped_on(self, shipped_on):
        """Sets the shipped_on of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param shipped_on: The shipped_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._shipped_on = shipped_on

    @property
    def delivered_on(self):
        """Gets the delivered_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The delivered_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: datetime
        """
        return self._delivered_on

    @delivered_on.setter
    def delivered_on(self, delivered_on):
        """Sets the delivered_on of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param delivered_on: The delivered_on of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: datetime
        """

        self._delivered_on = delivered_on

    @property
    def tracking_number(self):
        """Gets the tracking_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The tracking_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param tracking_number: The tracking_number of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._tracking_number = tracking_number

    @property
    def payment_terms(self):
        """Gets the payment_terms of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The payment_terms of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._payment_terms

    @payment_terms.setter
    def payment_terms(self, payment_terms):
        """Sets the payment_terms of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param payment_terms: The payment_terms of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._payment_terms = payment_terms

    @property
    def shipping_method(self):
        """Gets the shipping_method of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The shipping_method of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._shipping_method

    @shipping_method.setter
    def shipping_method(self, shipping_method):
        """Sets the shipping_method of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param shipping_method: The shipping_method of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._shipping_method = shipping_method

    @property
    def location(self):
        """Gets the location of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The location of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param location: The location of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._location = location

    @property
    def site_access_notes(self):
        """Gets the site_access_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The site_access_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._site_access_notes

    @site_access_notes.setter
    def site_access_notes(self, site_access_notes):
        """Sets the site_access_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param site_access_notes: The site_access_notes of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._site_access_notes = site_access_notes

    @property
    def abbreviated_uom(self):
        """Gets the abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._abbreviated_uom

    @abbreviated_uom.setter
    def abbreviated_uom(self, abbreviated_uom):
        """Sets the abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param abbreviated_uom: The abbreviated_uom of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._abbreviated_uom = abbreviated_uom

    @property
    def unit_scale_factor(self):
        """Gets the unit_scale_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The unit_scale_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._unit_scale_factor

    @unit_scale_factor.setter
    def unit_scale_factor(self, unit_scale_factor):
        """Sets the unit_scale_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param unit_scale_factor: The unit_scale_factor of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._unit_scale_factor = unit_scale_factor

    @property
    def measurement_not_taken_result(self):
        """Gets the measurement_not_taken_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_not_taken_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._measurement_not_taken_result

    @measurement_not_taken_result.setter
    def measurement_not_taken_result(self, measurement_not_taken_result):
        """Sets the measurement_not_taken_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_not_taken_result: The measurement_not_taken_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["Pass", "Fail", "Limited"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and measurement_not_taken_result not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `measurement_not_taken_result` ({0}), must be one of {1}".format(  # noqa: E501
                    measurement_not_taken_result, allowed_values
                )
            )

        self._measurement_not_taken_result = measurement_not_taken_result

    @property
    def hide_from_certificate(self):
        """Gets the hide_from_certificate of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The hide_from_certificate of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._hide_from_certificate

    @hide_from_certificate.setter
    def hide_from_certificate(self, hide_from_certificate):
        """Sets the hide_from_certificate of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param hide_from_certificate: The hide_from_certificate of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._hide_from_certificate = hide_from_certificate

    @property
    def measurement_not_taken_reason(self):
        """Gets the measurement_not_taken_reason of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_not_taken_reason of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._measurement_not_taken_reason

    @measurement_not_taken_reason.setter
    def measurement_not_taken_reason(self, measurement_not_taken_reason):
        """Sets the measurement_not_taken_reason of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_not_taken_reason: The measurement_not_taken_reason of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._measurement_not_taken_reason = measurement_not_taken_reason

    @property
    def environment_text1(self):
        """Gets the environment_text1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The environment_text1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._environment_text1

    @environment_text1.setter
    def environment_text1(self, environment_text1):
        """Sets the environment_text1 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param environment_text1: The environment_text1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._environment_text1 = environment_text1

    @property
    def environment_text2(self):
        """Gets the environment_text2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The environment_text2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._environment_text2

    @environment_text2.setter
    def environment_text2(self, environment_text2):
        """Sets the environment_text2 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param environment_text2: The environment_text2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._environment_text2 = environment_text2

    @property
    def environment_text3(self):
        """Gets the environment_text3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The environment_text3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._environment_text3

    @environment_text3.setter
    def environment_text3(self, environment_text3):
        """Sets the environment_text3 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param environment_text3: The environment_text3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._environment_text3 = environment_text3

    @property
    def environment_text4(self):
        """Gets the environment_text4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The environment_text4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._environment_text4

    @environment_text4.setter
    def environment_text4(self, environment_text4):
        """Sets the environment_text4 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param environment_text4: The environment_text4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._environment_text4 = environment_text4

    @property
    def environment_text5(self):
        """Gets the environment_text5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The environment_text5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._environment_text5

    @environment_text5.setter
    def environment_text5(self, environment_text5):
        """Sets the environment_text5 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param environment_text5: The environment_text5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._environment_text5 = environment_text5

    @property
    def environment_text6(self):
        """Gets the environment_text6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The environment_text6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._environment_text6

    @environment_text6.setter
    def environment_text6(self, environment_text6):
        """Sets the environment_text6 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param environment_text6: The environment_text6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._environment_text6 = environment_text6

    @property
    def values(self):
        """Gets the values of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The values of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param values: The values of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._values = values

    @property
    def value1(self):
        """Gets the value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value1

    @value1.setter
    def value1(self, value1):
        """Sets the value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value1: The value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value1 = value1

    @property
    def value2(self):
        """Gets the value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value2

    @value2.setter
    def value2(self, value2):
        """Sets the value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value2: The value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value2 = value2

    @property
    def value3(self):
        """Gets the value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value3

    @value3.setter
    def value3(self, value3):
        """Sets the value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value3: The value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value3 = value3

    @property
    def value4(self):
        """Gets the value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value4

    @value4.setter
    def value4(self, value4):
        """Sets the value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value4: The value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value4 = value4

    @property
    def value5(self):
        """Gets the value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value5

    @value5.setter
    def value5(self, value5):
        """Sets the value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value5: The value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value5 = value5

    @property
    def value6(self):
        """Gets the value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value6

    @value6.setter
    def value6(self, value6):
        """Sets the value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value6: The value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value6 = value6

    @property
    def value7(self):
        """Gets the value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value7

    @value7.setter
    def value7(self, value7):
        """Sets the value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value7: The value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value7 = value7

    @property
    def value8(self):
        """Gets the value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value8

    @value8.setter
    def value8(self, value8):
        """Sets the value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value8: The value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value8 = value8

    @property
    def value9(self):
        """Gets the value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value9

    @value9.setter
    def value9(self, value9):
        """Sets the value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value9: The value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value9 = value9

    @property
    def value10(self):
        """Gets the value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value10

    @value10.setter
    def value10(self, value10):
        """Sets the value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value10: The value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value10 = value10

    @property
    def value11(self):
        """Gets the value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value11

    @value11.setter
    def value11(self, value11):
        """Sets the value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value11: The value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value11 = value11

    @property
    def value12(self):
        """Gets the value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value12

    @value12.setter
    def value12(self, value12):
        """Sets the value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value12: The value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value12 = value12

    @property
    def value13(self):
        """Gets the value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value13

    @value13.setter
    def value13(self, value13):
        """Sets the value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value13: The value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value13 = value13

    @property
    def value14(self):
        """Gets the value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value14

    @value14.setter
    def value14(self, value14):
        """Sets the value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value14: The value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value14 = value14

    @property
    def value15(self):
        """Gets the value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value15

    @value15.setter
    def value15(self, value15):
        """Sets the value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value15: The value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value15 = value15

    @property
    def value16(self):
        """Gets the value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value16

    @value16.setter
    def value16(self, value16):
        """Sets the value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value16: The value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value16 = value16

    @property
    def value17(self):
        """Gets the value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value17

    @value17.setter
    def value17(self, value17):
        """Sets the value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value17: The value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value17 = value17

    @property
    def value18(self):
        """Gets the value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value18

    @value18.setter
    def value18(self, value18):
        """Sets the value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value18: The value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value18 = value18

    @property
    def value19(self):
        """Gets the value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value19

    @value19.setter
    def value19(self, value19):
        """Sets the value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value19: The value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value19 = value19

    @property
    def value20(self):
        """Gets the value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value20

    @value20.setter
    def value20(self, value20):
        """Sets the value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value20: The value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value20 = value20

    @property
    def value21(self):
        """Gets the value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value21

    @value21.setter
    def value21(self, value21):
        """Sets the value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value21: The value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value21 = value21

    @property
    def value22(self):
        """Gets the value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value22

    @value22.setter
    def value22(self, value22):
        """Sets the value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value22: The value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value22 = value22

    @property
    def value23(self):
        """Gets the value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value23

    @value23.setter
    def value23(self, value23):
        """Sets the value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value23: The value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value23 = value23

    @property
    def value24(self):
        """Gets the value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value24

    @value24.setter
    def value24(self, value24):
        """Sets the value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value24: The value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value24 = value24

    @property
    def value25(self):
        """Gets the value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value25

    @value25.setter
    def value25(self, value25):
        """Sets the value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value25: The value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value25 = value25

    @property
    def value26(self):
        """Gets the value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value26

    @value26.setter
    def value26(self, value26):
        """Sets the value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value26: The value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value26 = value26

    @property
    def value27(self):
        """Gets the value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value27

    @value27.setter
    def value27(self, value27):
        """Sets the value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value27: The value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value27 = value27

    @property
    def value28(self):
        """Gets the value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value28

    @value28.setter
    def value28(self, value28):
        """Sets the value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value28: The value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value28 = value28

    @property
    def value29(self):
        """Gets the value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value29

    @value29.setter
    def value29(self, value29):
        """Sets the value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value29: The value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value29 = value29

    @property
    def value30(self):
        """Gets the value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value30

    @value30.setter
    def value30(self, value30):
        """Sets the value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value30: The value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value30 = value30

    @property
    def value31(self):
        """Gets the value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value31

    @value31.setter
    def value31(self, value31):
        """Sets the value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value31: The value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value31 = value31

    @property
    def value32(self):
        """Gets the value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value32

    @value32.setter
    def value32(self, value32):
        """Sets the value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value32: The value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value32 = value32

    @property
    def value33(self):
        """Gets the value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value33

    @value33.setter
    def value33(self, value33):
        """Sets the value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value33: The value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value33 = value33

    @property
    def value34(self):
        """Gets the value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value34

    @value34.setter
    def value34(self, value34):
        """Sets the value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value34: The value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value34 = value34

    @property
    def value35(self):
        """Gets the value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value35

    @value35.setter
    def value35(self, value35):
        """Sets the value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value35: The value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value35 = value35

    @property
    def value36(self):
        """Gets the value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value36

    @value36.setter
    def value36(self, value36):
        """Sets the value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value36: The value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value36 = value36

    @property
    def value37(self):
        """Gets the value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value37

    @value37.setter
    def value37(self, value37):
        """Sets the value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value37: The value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value37 = value37

    @property
    def value38(self):
        """Gets the value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value38

    @value38.setter
    def value38(self, value38):
        """Sets the value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value38: The value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value38 = value38

    @property
    def value39(self):
        """Gets the value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value39

    @value39.setter
    def value39(self, value39):
        """Sets the value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value39: The value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value39 = value39

    @property
    def value40(self):
        """Gets the value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value40

    @value40.setter
    def value40(self, value40):
        """Sets the value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value40: The value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value40 = value40

    @property
    def raw_value1(self):
        """Gets the raw_value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value1

    @raw_value1.setter
    def raw_value1(self, raw_value1):
        """Sets the raw_value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value1: The raw_value1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value1 = raw_value1

    @property
    def raw_value2(self):
        """Gets the raw_value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value2

    @raw_value2.setter
    def raw_value2(self, raw_value2):
        """Sets the raw_value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value2: The raw_value2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value2 = raw_value2

    @property
    def raw_value3(self):
        """Gets the raw_value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value3

    @raw_value3.setter
    def raw_value3(self, raw_value3):
        """Sets the raw_value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value3: The raw_value3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value3 = raw_value3

    @property
    def raw_value4(self):
        """Gets the raw_value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value4

    @raw_value4.setter
    def raw_value4(self, raw_value4):
        """Sets the raw_value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value4: The raw_value4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value4 = raw_value4

    @property
    def raw_value5(self):
        """Gets the raw_value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value5

    @raw_value5.setter
    def raw_value5(self, raw_value5):
        """Sets the raw_value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value5: The raw_value5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value5 = raw_value5

    @property
    def raw_value6(self):
        """Gets the raw_value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value6

    @raw_value6.setter
    def raw_value6(self, raw_value6):
        """Sets the raw_value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value6: The raw_value6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value6 = raw_value6

    @property
    def raw_value7(self):
        """Gets the raw_value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value7

    @raw_value7.setter
    def raw_value7(self, raw_value7):
        """Sets the raw_value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value7: The raw_value7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value7 = raw_value7

    @property
    def raw_value8(self):
        """Gets the raw_value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value8

    @raw_value8.setter
    def raw_value8(self, raw_value8):
        """Sets the raw_value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value8: The raw_value8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value8 = raw_value8

    @property
    def raw_value9(self):
        """Gets the raw_value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value9

    @raw_value9.setter
    def raw_value9(self, raw_value9):
        """Sets the raw_value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value9: The raw_value9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value9 = raw_value9

    @property
    def raw_value10(self):
        """Gets the raw_value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value10

    @raw_value10.setter
    def raw_value10(self, raw_value10):
        """Sets the raw_value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value10: The raw_value10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value10 = raw_value10

    @property
    def raw_value11(self):
        """Gets the raw_value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value11

    @raw_value11.setter
    def raw_value11(self, raw_value11):
        """Sets the raw_value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value11: The raw_value11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value11 = raw_value11

    @property
    def raw_value12(self):
        """Gets the raw_value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value12

    @raw_value12.setter
    def raw_value12(self, raw_value12):
        """Sets the raw_value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value12: The raw_value12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value12 = raw_value12

    @property
    def raw_value13(self):
        """Gets the raw_value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value13

    @raw_value13.setter
    def raw_value13(self, raw_value13):
        """Sets the raw_value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value13: The raw_value13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value13 = raw_value13

    @property
    def raw_value14(self):
        """Gets the raw_value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value14

    @raw_value14.setter
    def raw_value14(self, raw_value14):
        """Sets the raw_value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value14: The raw_value14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value14 = raw_value14

    @property
    def raw_value15(self):
        """Gets the raw_value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value15

    @raw_value15.setter
    def raw_value15(self, raw_value15):
        """Sets the raw_value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value15: The raw_value15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value15 = raw_value15

    @property
    def raw_value16(self):
        """Gets the raw_value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value16

    @raw_value16.setter
    def raw_value16(self, raw_value16):
        """Sets the raw_value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value16: The raw_value16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value16 = raw_value16

    @property
    def raw_value17(self):
        """Gets the raw_value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value17

    @raw_value17.setter
    def raw_value17(self, raw_value17):
        """Sets the raw_value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value17: The raw_value17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value17 = raw_value17

    @property
    def raw_value18(self):
        """Gets the raw_value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value18

    @raw_value18.setter
    def raw_value18(self, raw_value18):
        """Sets the raw_value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value18: The raw_value18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value18 = raw_value18

    @property
    def raw_value19(self):
        """Gets the raw_value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value19

    @raw_value19.setter
    def raw_value19(self, raw_value19):
        """Sets the raw_value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value19: The raw_value19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value19 = raw_value19

    @property
    def raw_value20(self):
        """Gets the raw_value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value20

    @raw_value20.setter
    def raw_value20(self, raw_value20):
        """Sets the raw_value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value20: The raw_value20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value20 = raw_value20

    @property
    def raw_value21(self):
        """Gets the raw_value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value21

    @raw_value21.setter
    def raw_value21(self, raw_value21):
        """Sets the raw_value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value21: The raw_value21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value21 = raw_value21

    @property
    def raw_value22(self):
        """Gets the raw_value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value22

    @raw_value22.setter
    def raw_value22(self, raw_value22):
        """Sets the raw_value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value22: The raw_value22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value22 = raw_value22

    @property
    def raw_value23(self):
        """Gets the raw_value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value23

    @raw_value23.setter
    def raw_value23(self, raw_value23):
        """Sets the raw_value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value23: The raw_value23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value23 = raw_value23

    @property
    def raw_value24(self):
        """Gets the raw_value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value24

    @raw_value24.setter
    def raw_value24(self, raw_value24):
        """Sets the raw_value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value24: The raw_value24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value24 = raw_value24

    @property
    def raw_value25(self):
        """Gets the raw_value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value25

    @raw_value25.setter
    def raw_value25(self, raw_value25):
        """Sets the raw_value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value25: The raw_value25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value25 = raw_value25

    @property
    def raw_value26(self):
        """Gets the raw_value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value26

    @raw_value26.setter
    def raw_value26(self, raw_value26):
        """Sets the raw_value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value26: The raw_value26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value26 = raw_value26

    @property
    def raw_value27(self):
        """Gets the raw_value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value27

    @raw_value27.setter
    def raw_value27(self, raw_value27):
        """Sets the raw_value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value27: The raw_value27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value27 = raw_value27

    @property
    def raw_value28(self):
        """Gets the raw_value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value28

    @raw_value28.setter
    def raw_value28(self, raw_value28):
        """Sets the raw_value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value28: The raw_value28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value28 = raw_value28

    @property
    def raw_value29(self):
        """Gets the raw_value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value29

    @raw_value29.setter
    def raw_value29(self, raw_value29):
        """Sets the raw_value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value29: The raw_value29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value29 = raw_value29

    @property
    def raw_value30(self):
        """Gets the raw_value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value30

    @raw_value30.setter
    def raw_value30(self, raw_value30):
        """Sets the raw_value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value30: The raw_value30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value30 = raw_value30

    @property
    def raw_value31(self):
        """Gets the raw_value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value31

    @raw_value31.setter
    def raw_value31(self, raw_value31):
        """Sets the raw_value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value31: The raw_value31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value31 = raw_value31

    @property
    def raw_value32(self):
        """Gets the raw_value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value32

    @raw_value32.setter
    def raw_value32(self, raw_value32):
        """Sets the raw_value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value32: The raw_value32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value32 = raw_value32

    @property
    def raw_value33(self):
        """Gets the raw_value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value33

    @raw_value33.setter
    def raw_value33(self, raw_value33):
        """Sets the raw_value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value33: The raw_value33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value33 = raw_value33

    @property
    def raw_value34(self):
        """Gets the raw_value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value34

    @raw_value34.setter
    def raw_value34(self, raw_value34):
        """Sets the raw_value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value34: The raw_value34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value34 = raw_value34

    @property
    def raw_value35(self):
        """Gets the raw_value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value35

    @raw_value35.setter
    def raw_value35(self, raw_value35):
        """Sets the raw_value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value35: The raw_value35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value35 = raw_value35

    @property
    def raw_value36(self):
        """Gets the raw_value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value36

    @raw_value36.setter
    def raw_value36(self, raw_value36):
        """Sets the raw_value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value36: The raw_value36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value36 = raw_value36

    @property
    def raw_value37(self):
        """Gets the raw_value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value37

    @raw_value37.setter
    def raw_value37(self, raw_value37):
        """Sets the raw_value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value37: The raw_value37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value37 = raw_value37

    @property
    def raw_value38(self):
        """Gets the raw_value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value38

    @raw_value38.setter
    def raw_value38(self, raw_value38):
        """Sets the raw_value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value38: The raw_value38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value38 = raw_value38

    @property
    def raw_value39(self):
        """Gets the raw_value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value39

    @raw_value39.setter
    def raw_value39(self, raw_value39):
        """Sets the raw_value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value39: The raw_value39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value39 = raw_value39

    @property
    def raw_value40(self):
        """Gets the raw_value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The raw_value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._raw_value40

    @raw_value40.setter
    def raw_value40(self, raw_value40):
        """Sets the raw_value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param raw_value40: The raw_value40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._raw_value40 = raw_value40

    @property
    def subtitles_to_readings(self):
        """Gets the subtitles_to_readings of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The subtitles_to_readings of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._subtitles_to_readings

    @subtitles_to_readings.setter
    def subtitles_to_readings(self, subtitles_to_readings):
        """Sets the subtitles_to_readings of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param subtitles_to_readings: The subtitles_to_readings of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._subtitles_to_readings = subtitles_to_readings

    @property
    def value_subtitle1(self):
        """Gets the value_subtitle1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle1

    @value_subtitle1.setter
    def value_subtitle1(self, value_subtitle1):
        """Sets the value_subtitle1 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle1: The value_subtitle1 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle1 = value_subtitle1

    @property
    def value_subtitle2(self):
        """Gets the value_subtitle2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle2

    @value_subtitle2.setter
    def value_subtitle2(self, value_subtitle2):
        """Sets the value_subtitle2 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle2: The value_subtitle2 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle2 = value_subtitle2

    @property
    def value_subtitle3(self):
        """Gets the value_subtitle3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle3

    @value_subtitle3.setter
    def value_subtitle3(self, value_subtitle3):
        """Sets the value_subtitle3 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle3: The value_subtitle3 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle3 = value_subtitle3

    @property
    def value_subtitle4(self):
        """Gets the value_subtitle4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle4

    @value_subtitle4.setter
    def value_subtitle4(self, value_subtitle4):
        """Sets the value_subtitle4 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle4: The value_subtitle4 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle4 = value_subtitle4

    @property
    def value_subtitle5(self):
        """Gets the value_subtitle5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle5

    @value_subtitle5.setter
    def value_subtitle5(self, value_subtitle5):
        """Sets the value_subtitle5 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle5: The value_subtitle5 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle5 = value_subtitle5

    @property
    def value_subtitle6(self):
        """Gets the value_subtitle6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle6

    @value_subtitle6.setter
    def value_subtitle6(self, value_subtitle6):
        """Sets the value_subtitle6 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle6: The value_subtitle6 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle6 = value_subtitle6

    @property
    def value_subtitle7(self):
        """Gets the value_subtitle7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle7

    @value_subtitle7.setter
    def value_subtitle7(self, value_subtitle7):
        """Sets the value_subtitle7 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle7: The value_subtitle7 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle7 = value_subtitle7

    @property
    def value_subtitle8(self):
        """Gets the value_subtitle8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle8

    @value_subtitle8.setter
    def value_subtitle8(self, value_subtitle8):
        """Sets the value_subtitle8 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle8: The value_subtitle8 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle8 = value_subtitle8

    @property
    def value_subtitle9(self):
        """Gets the value_subtitle9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle9

    @value_subtitle9.setter
    def value_subtitle9(self, value_subtitle9):
        """Sets the value_subtitle9 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle9: The value_subtitle9 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle9 = value_subtitle9

    @property
    def value_subtitle10(self):
        """Gets the value_subtitle10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle10

    @value_subtitle10.setter
    def value_subtitle10(self, value_subtitle10):
        """Sets the value_subtitle10 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle10: The value_subtitle10 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle10 = value_subtitle10

    @property
    def value_subtitle11(self):
        """Gets the value_subtitle11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle11

    @value_subtitle11.setter
    def value_subtitle11(self, value_subtitle11):
        """Sets the value_subtitle11 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle11: The value_subtitle11 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle11 = value_subtitle11

    @property
    def value_subtitle12(self):
        """Gets the value_subtitle12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle12

    @value_subtitle12.setter
    def value_subtitle12(self, value_subtitle12):
        """Sets the value_subtitle12 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle12: The value_subtitle12 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle12 = value_subtitle12

    @property
    def value_subtitle13(self):
        """Gets the value_subtitle13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle13

    @value_subtitle13.setter
    def value_subtitle13(self, value_subtitle13):
        """Sets the value_subtitle13 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle13: The value_subtitle13 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle13 = value_subtitle13

    @property
    def value_subtitle14(self):
        """Gets the value_subtitle14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle14

    @value_subtitle14.setter
    def value_subtitle14(self, value_subtitle14):
        """Sets the value_subtitle14 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle14: The value_subtitle14 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle14 = value_subtitle14

    @property
    def value_subtitle15(self):
        """Gets the value_subtitle15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle15

    @value_subtitle15.setter
    def value_subtitle15(self, value_subtitle15):
        """Sets the value_subtitle15 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle15: The value_subtitle15 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle15 = value_subtitle15

    @property
    def value_subtitle16(self):
        """Gets the value_subtitle16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle16

    @value_subtitle16.setter
    def value_subtitle16(self, value_subtitle16):
        """Sets the value_subtitle16 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle16: The value_subtitle16 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle16 = value_subtitle16

    @property
    def value_subtitle17(self):
        """Gets the value_subtitle17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle17

    @value_subtitle17.setter
    def value_subtitle17(self, value_subtitle17):
        """Sets the value_subtitle17 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle17: The value_subtitle17 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle17 = value_subtitle17

    @property
    def value_subtitle18(self):
        """Gets the value_subtitle18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle18

    @value_subtitle18.setter
    def value_subtitle18(self, value_subtitle18):
        """Sets the value_subtitle18 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle18: The value_subtitle18 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle18 = value_subtitle18

    @property
    def value_subtitle19(self):
        """Gets the value_subtitle19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle19

    @value_subtitle19.setter
    def value_subtitle19(self, value_subtitle19):
        """Sets the value_subtitle19 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle19: The value_subtitle19 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle19 = value_subtitle19

    @property
    def value_subtitle20(self):
        """Gets the value_subtitle20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle20

    @value_subtitle20.setter
    def value_subtitle20(self, value_subtitle20):
        """Sets the value_subtitle20 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle20: The value_subtitle20 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle20 = value_subtitle20

    @property
    def value_subtitle21(self):
        """Gets the value_subtitle21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle21

    @value_subtitle21.setter
    def value_subtitle21(self, value_subtitle21):
        """Sets the value_subtitle21 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle21: The value_subtitle21 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle21 = value_subtitle21

    @property
    def value_subtitle22(self):
        """Gets the value_subtitle22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle22

    @value_subtitle22.setter
    def value_subtitle22(self, value_subtitle22):
        """Sets the value_subtitle22 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle22: The value_subtitle22 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle22 = value_subtitle22

    @property
    def value_subtitle23(self):
        """Gets the value_subtitle23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle23

    @value_subtitle23.setter
    def value_subtitle23(self, value_subtitle23):
        """Sets the value_subtitle23 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle23: The value_subtitle23 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle23 = value_subtitle23

    @property
    def value_subtitle24(self):
        """Gets the value_subtitle24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle24

    @value_subtitle24.setter
    def value_subtitle24(self, value_subtitle24):
        """Sets the value_subtitle24 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle24: The value_subtitle24 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle24 = value_subtitle24

    @property
    def value_subtitle25(self):
        """Gets the value_subtitle25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle25

    @value_subtitle25.setter
    def value_subtitle25(self, value_subtitle25):
        """Sets the value_subtitle25 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle25: The value_subtitle25 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle25 = value_subtitle25

    @property
    def value_subtitle26(self):
        """Gets the value_subtitle26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle26

    @value_subtitle26.setter
    def value_subtitle26(self, value_subtitle26):
        """Sets the value_subtitle26 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle26: The value_subtitle26 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle26 = value_subtitle26

    @property
    def value_subtitle27(self):
        """Gets the value_subtitle27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle27

    @value_subtitle27.setter
    def value_subtitle27(self, value_subtitle27):
        """Sets the value_subtitle27 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle27: The value_subtitle27 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle27 = value_subtitle27

    @property
    def value_subtitle28(self):
        """Gets the value_subtitle28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle28

    @value_subtitle28.setter
    def value_subtitle28(self, value_subtitle28):
        """Sets the value_subtitle28 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle28: The value_subtitle28 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle28 = value_subtitle28

    @property
    def value_subtitle29(self):
        """Gets the value_subtitle29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle29

    @value_subtitle29.setter
    def value_subtitle29(self, value_subtitle29):
        """Sets the value_subtitle29 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle29: The value_subtitle29 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle29 = value_subtitle29

    @property
    def value_subtitle30(self):
        """Gets the value_subtitle30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle30

    @value_subtitle30.setter
    def value_subtitle30(self, value_subtitle30):
        """Sets the value_subtitle30 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle30: The value_subtitle30 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle30 = value_subtitle30

    @property
    def value_subtitle31(self):
        """Gets the value_subtitle31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle31

    @value_subtitle31.setter
    def value_subtitle31(self, value_subtitle31):
        """Sets the value_subtitle31 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle31: The value_subtitle31 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle31 = value_subtitle31

    @property
    def value_subtitle32(self):
        """Gets the value_subtitle32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle32

    @value_subtitle32.setter
    def value_subtitle32(self, value_subtitle32):
        """Sets the value_subtitle32 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle32: The value_subtitle32 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle32 = value_subtitle32

    @property
    def value_subtitle33(self):
        """Gets the value_subtitle33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle33

    @value_subtitle33.setter
    def value_subtitle33(self, value_subtitle33):
        """Sets the value_subtitle33 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle33: The value_subtitle33 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle33 = value_subtitle33

    @property
    def value_subtitle34(self):
        """Gets the value_subtitle34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle34

    @value_subtitle34.setter
    def value_subtitle34(self, value_subtitle34):
        """Sets the value_subtitle34 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle34: The value_subtitle34 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle34 = value_subtitle34

    @property
    def value_subtitle35(self):
        """Gets the value_subtitle35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle35

    @value_subtitle35.setter
    def value_subtitle35(self, value_subtitle35):
        """Sets the value_subtitle35 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle35: The value_subtitle35 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle35 = value_subtitle35

    @property
    def value_subtitle36(self):
        """Gets the value_subtitle36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle36

    @value_subtitle36.setter
    def value_subtitle36(self, value_subtitle36):
        """Sets the value_subtitle36 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle36: The value_subtitle36 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle36 = value_subtitle36

    @property
    def value_subtitle37(self):
        """Gets the value_subtitle37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle37

    @value_subtitle37.setter
    def value_subtitle37(self, value_subtitle37):
        """Sets the value_subtitle37 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle37: The value_subtitle37 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle37 = value_subtitle37

    @property
    def value_subtitle38(self):
        """Gets the value_subtitle38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle38

    @value_subtitle38.setter
    def value_subtitle38(self, value_subtitle38):
        """Sets the value_subtitle38 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle38: The value_subtitle38 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle38 = value_subtitle38

    @property
    def value_subtitle39(self):
        """Gets the value_subtitle39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle39

    @value_subtitle39.setter
    def value_subtitle39(self, value_subtitle39):
        """Sets the value_subtitle39 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle39: The value_subtitle39 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle39 = value_subtitle39

    @property
    def value_subtitle40(self):
        """Gets the value_subtitle40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The value_subtitle40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._value_subtitle40

    @value_subtitle40.setter
    def value_subtitle40(self, value_subtitle40):
        """Sets the value_subtitle40 of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param value_subtitle40: The value_subtitle40 of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._value_subtitle40 = value_subtitle40

    @property
    def values_decimal_places(self):
        """Gets the values_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The values_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._values_decimal_places

    @values_decimal_places.setter
    def values_decimal_places(self, values_decimal_places):
        """Sets the values_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param values_decimal_places: The values_decimal_places of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._values_decimal_places = values_decimal_places

    @property
    def repeat_measurement_and_calculate_hysteresis(self):
        """Gets the repeat_measurement_and_calculate_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The repeat_measurement_and_calculate_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: bool
        """
        return self._repeat_measurement_and_calculate_hysteresis

    @repeat_measurement_and_calculate_hysteresis.setter
    def repeat_measurement_and_calculate_hysteresis(
        self, repeat_measurement_and_calculate_hysteresis
    ):
        """Sets the repeat_measurement_and_calculate_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param repeat_measurement_and_calculate_hysteresis: The repeat_measurement_and_calculate_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: bool
        """

        self._repeat_measurement_and_calculate_hysteresis = (
            repeat_measurement_and_calculate_hysteresis
        )

    @property
    def measurement_point_order(self):
        """Gets the measurement_point_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The measurement_point_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._measurement_point_order

    @measurement_point_order.setter
    def measurement_point_order(self, measurement_point_order):
        """Sets the measurement_point_order of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param measurement_point_order: The measurement_point_order of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "AsEntered",
            "DescendingAscending",
            "AscendingDescending",
            "ZeroDescendingAscending",
            "ZeroAscendingDescending",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and measurement_point_order not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `measurement_point_order` ({0}), must be one of {1}".format(  # noqa: E501
                    measurement_point_order, allowed_values
                )
            )

        self._measurement_point_order = measurement_point_order

    @property
    def hysteresis_point(self):
        """Gets the hysteresis_point of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The hysteresis_point of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._hysteresis_point

    @hysteresis_point.setter
    def hysteresis_point(self, hysteresis_point):
        """Sets the hysteresis_point of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param hysteresis_point: The hysteresis_point of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """
        allowed_values = ["None", "Zero", "First", "Second"]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and hysteresis_point not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `hysteresis_point` ({0}), must be one of {1}".format(  # noqa: E501
                    hysteresis_point, allowed_values
                )
            )

        self._hysteresis_point = hysteresis_point

    @property
    def max_hysteresis(self):
        """Gets the max_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The max_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._max_hysteresis

    @max_hysteresis.setter
    def max_hysteresis(self, max_hysteresis):
        """Sets the max_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param max_hysteresis: The max_hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._max_hysteresis = max_hysteresis

    @property
    def run(self):
        """Gets the run of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The run of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._run

    @run.setter
    def run(self, run):
        """Sets the run of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param run: The run of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._run = run

    @property
    def direction(self):
        """Gets the direction of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The direction of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: int
        """
        return self._direction

    @direction.setter
    def direction(self, direction):
        """Sets the direction of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param direction: The direction of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: int
        """

        self._direction = direction

    @property
    def hysteresis(self):
        """Gets the hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: float
        """
        return self._hysteresis

    @hysteresis.setter
    def hysteresis(self, hysteresis):
        """Sets the hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param hysteresis: The hysteresis of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: float
        """

        self._hysteresis = hysteresis

    @property
    def column_mean(self):
        """Gets the column_mean of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_mean of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_mean

    @column_mean.setter
    def column_mean(self, column_mean):
        """Sets the column_mean of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_mean: The column_mean of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_mean = column_mean

    @property
    def column_mean_result(self):
        """Gets the column_mean_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_mean_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_mean_result

    @column_mean_result.setter
    def column_mean_result(self, column_mean_result):
        """Sets the column_mean_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_mean_result: The column_mean_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_mean_result = column_mean_result

    @property
    def column_sd(self):
        """Gets the column_sd of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_sd of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_sd

    @column_sd.setter
    def column_sd(self, column_sd):
        """Sets the column_sd of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_sd: The column_sd of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_sd = column_sd

    @property
    def column_sd_result(self):
        """Gets the column_sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_sd_result

    @column_sd_result.setter
    def column_sd_result(self, column_sd_result):
        """Sets the column_sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_sd_result: The column_sd_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_sd_result = column_sd_result

    @property
    def column_cv(self):
        """Gets the column_cv of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_cv of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_cv

    @column_cv.setter
    def column_cv(self, column_cv):
        """Sets the column_cv of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_cv: The column_cv of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_cv = column_cv

    @property
    def column_cv_result(self):
        """Gets the column_cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_cv_result

    @column_cv_result.setter
    def column_cv_result(self, column_cv_result):
        """Sets the column_cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_cv_result: The column_cv_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_cv_result = column_cv_result

    @property
    def column_range(self):
        """Gets the column_range of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_range of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_range

    @column_range.setter
    def column_range(self, column_range):
        """Sets the column_range of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_range: The column_range of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_range = column_range

    @property
    def column_range_result(self):
        """Gets the column_range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_range_result

    @column_range_result.setter
    def column_range_result(self, column_range_result):
        """Sets the column_range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_range_result: The column_range_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_range_result = column_range_result

    @property
    def column_delta(self):
        """Gets the column_delta of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_delta of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_delta

    @column_delta.setter
    def column_delta(self, column_delta):
        """Sets the column_delta of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_delta: The column_delta of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_delta = column_delta

    @property
    def column_delta_result(self):
        """Gets the column_delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_delta_result

    @column_delta_result.setter
    def column_delta_result(self, column_delta_result):
        """Sets the column_delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_delta_result: The column_delta_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_delta_result = column_delta_result

    @property
    def column_result(self):
        """Gets the column_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501


        :return: The column_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :rtype: str
        """
        return self._column_result

    @column_result.setter
    def column_result(self, column_result):
        """Sets the column_result of this QualerApiModelsReportDatasetsToMeasurementResponse.


        :param column_result: The column_result of this QualerApiModelsReportDatasetsToMeasurementResponse.  # noqa: E501
        :type: str
        """

        self._column_result = column_result

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (
                            (item[0], item[1].to_dict())
                            if hasattr(item[1], "to_dict")
                            else item
                        ),
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(QualerApiModelsReportDatasetsToMeasurementResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToMeasurementResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToMeasurementResponse):
            return True

        return self.to_dict() != other.to_dict()
