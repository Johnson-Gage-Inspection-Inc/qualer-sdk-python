# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Optional, Union

from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr


class QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel(
    BaseModel
):
    """
    QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel
    """

    service_order_item_part_id: Optional[StrictInt] = Field(
        None, alias="ServiceOrderItemPartId"
    )
    name: Optional[StrictStr] = Field(None, alias="Name")
    description: Optional[StrictStr] = Field(None, alias="Description")
    charge_date: Optional[datetime] = Field(None, alias="ChargeDate")
    price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="Price")
    unit_name: Optional[StrictStr] = Field(None, alias="UnitName")
    is_hourly_pricing: Optional[StrictBool] = Field(None, alias="IsHourlyPricing")
    time_spent_in_minutes: Optional[Union[StrictFloat, StrictInt]] = Field(
        None, alias="TimeSpentInMinutes"
    )
    quantity: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="Quantity")
    discount: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="Discount")
    is_taxable: Optional[StrictBool] = Field(None, alias="IsTaxable")
    delivery_charge: Optional[Union[StrictFloat, StrictInt]] = Field(
        None, alias="DeliveryCharge"
    )
    free_quantity: Optional[StrictInt] = Field(None, alias="FreeQuantity")
    created_by_id: Optional[StrictInt] = Field(None, alias="CreatedById")
    service_order_charge_type: Optional[StrictStr] = Field(
        None, alias="ServiceOrderChargeType"
    )
    __properties = [
        "ServiceOrderItemPartId",
        "Name",
        "Description",
        "ChargeDate",
        "Price",
        "UnitName",
        "IsHourlyPricing",
        "TimeSpentInMinutes",
        "Quantity",
        "Discount",
        "IsTaxable",
        "DeliveryCharge",
        "FreeQuantity",
        "CreatedById",
        "ServiceOrderChargeType",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel:
        """Create an instance of QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel:
        """Create an instance of QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel.parse_obj(
                obj
            )

        _obj = QualerWebMvcAreasApiModelsServiceOrdersFromServiceOrderPartRepairUpdateModel.parse_obj(
            {
                "service_order_item_part_id": obj.get("ServiceOrderItemPartId"),
                "name": obj.get("Name"),
                "description": obj.get("Description"),
                "charge_date": obj.get("ChargeDate"),
                "price": obj.get("Price"),
                "unit_name": obj.get("UnitName"),
                "is_hourly_pricing": obj.get("IsHourlyPricing"),
                "time_spent_in_minutes": obj.get("TimeSpentInMinutes"),
                "quantity": obj.get("Quantity"),
                "discount": obj.get("Discount"),
                "is_taxable": obj.get("IsTaxable"),
                "delivery_charge": obj.get("DeliveryCharge"),
                "free_quantity": obj.get("FreeQuantity"),
                "created_by_id": obj.get("CreatedById"),
                "service_order_charge_type": obj.get("ServiceOrderChargeType"),
            }
        )
        return _obj
