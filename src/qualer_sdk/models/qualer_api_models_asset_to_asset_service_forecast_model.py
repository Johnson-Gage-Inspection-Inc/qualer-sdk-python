# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsAssetToAssetServiceForecastModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "company_id": "int",
        "asset_id": "int",
        "site_id": "int",
        "asset_service_record_id": "int",
        "serial_number": "str",
        "asset_user": "str",
        "asset_tag": "str",
        "equipment_id": "str",
        "asset_name": "str",
        "category_name": "str",
        "manufacturer_name": "str",
        "site_name": "str",
        "maintenance_plan_id": "int",
        "maintenance_plan_name": "str",
        "maintenance_task_id": "int",
        "maintenance_task_name": "str",
        "next_service_date": "datetime",
        "advance_recall_date": "datetime",
        "grace_period_date": "datetime",
        "certificate_next_service_date": "datetime",
        "service_interval": "str",
        "interval_cycle": "str",
        "interval_length": "int",
        "on_day": "str",
        "on_month": "str",
        "on_week_days": "str",
        "weekday_of_month": "str",
        "advance_recall_period": "str",
        "days_before_due": "int",
        "past_due_grace_period": "str",
        "days_after_due": "int",
    }

    attribute_map = {
        "company_id": "CompanyId",
        "asset_id": "AssetId",
        "site_id": "SiteId",
        "asset_service_record_id": "AssetServiceRecordId",
        "serial_number": "SerialNumber",
        "asset_user": "AssetUser",
        "asset_tag": "AssetTag",
        "equipment_id": "EquipmentId",
        "asset_name": "AssetName",
        "category_name": "CategoryName",
        "manufacturer_name": "ManufacturerName",
        "site_name": "SiteName",
        "maintenance_plan_id": "MaintenancePlanId",
        "maintenance_plan_name": "MaintenancePlanName",
        "maintenance_task_id": "MaintenanceTaskId",
        "maintenance_task_name": "MaintenanceTaskName",
        "next_service_date": "NextServiceDate",
        "advance_recall_date": "AdvanceRecallDate",
        "grace_period_date": "GracePeriodDate",
        "certificate_next_service_date": "CertificateNextServiceDate",
        "service_interval": "ServiceInterval",
        "interval_cycle": "IntervalCycle",
        "interval_length": "IntervalLength",
        "on_day": "OnDay",
        "on_month": "OnMonth",
        "on_week_days": "OnWeekDays",
        "weekday_of_month": "WeekdayOfMonth",
        "advance_recall_period": "AdvanceRecallPeriod",
        "days_before_due": "DaysBeforeDue",
        "past_due_grace_period": "PastDueGracePeriod",
        "days_after_due": "DaysAfterDue",
    }

    def __init__(
        self,
        company_id=None,
        asset_id=None,
        site_id=None,
        asset_service_record_id=None,
        serial_number=None,
        asset_user=None,
        asset_tag=None,
        equipment_id=None,
        asset_name=None,
        category_name=None,
        manufacturer_name=None,
        site_name=None,
        maintenance_plan_id=None,
        maintenance_plan_name=None,
        maintenance_task_id=None,
        maintenance_task_name=None,
        next_service_date=None,
        advance_recall_date=None,
        grace_period_date=None,
        certificate_next_service_date=None,
        service_interval=None,
        interval_cycle=None,
        interval_length=None,
        on_day=None,
        on_month=None,
        on_week_days=None,
        weekday_of_month=None,
        advance_recall_period=None,
        days_before_due=None,
        past_due_grace_period=None,
        days_after_due=None,
        _configuration=None,
    ):  # noqa: E501
        """QualerApiModelsAssetToAssetServiceForecastModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._company_id = None
        self._asset_id = None
        self._site_id = None
        self._asset_service_record_id = None
        self._serial_number = None
        self._asset_user = None
        self._asset_tag = None
        self._equipment_id = None
        self._asset_name = None
        self._category_name = None
        self._manufacturer_name = None
        self._site_name = None
        self._maintenance_plan_id = None
        self._maintenance_plan_name = None
        self._maintenance_task_id = None
        self._maintenance_task_name = None
        self._next_service_date = None
        self._advance_recall_date = None
        self._grace_period_date = None
        self._certificate_next_service_date = None
        self._service_interval = None
        self._interval_cycle = None
        self._interval_length = None
        self._on_day = None
        self._on_month = None
        self._on_week_days = None
        self._weekday_of_month = None
        self._advance_recall_period = None
        self._days_before_due = None
        self._past_due_grace_period = None
        self._days_after_due = None
        self.discriminator = None

        if company_id is not None:
            self.company_id = company_id
        if asset_id is not None:
            self.asset_id = asset_id
        if site_id is not None:
            self.site_id = site_id
        if asset_service_record_id is not None:
            self.asset_service_record_id = asset_service_record_id
        if serial_number is not None:
            self.serial_number = serial_number
        if asset_user is not None:
            self.asset_user = asset_user
        if asset_tag is not None:
            self.asset_tag = asset_tag
        if equipment_id is not None:
            self.equipment_id = equipment_id
        if asset_name is not None:
            self.asset_name = asset_name
        if category_name is not None:
            self.category_name = category_name
        if manufacturer_name is not None:
            self.manufacturer_name = manufacturer_name
        if site_name is not None:
            self.site_name = site_name
        if maintenance_plan_id is not None:
            self.maintenance_plan_id = maintenance_plan_id
        if maintenance_plan_name is not None:
            self.maintenance_plan_name = maintenance_plan_name
        if maintenance_task_id is not None:
            self.maintenance_task_id = maintenance_task_id
        if maintenance_task_name is not None:
            self.maintenance_task_name = maintenance_task_name
        if next_service_date is not None:
            self.next_service_date = next_service_date
        if advance_recall_date is not None:
            self.advance_recall_date = advance_recall_date
        if grace_period_date is not None:
            self.grace_period_date = grace_period_date
        if certificate_next_service_date is not None:
            self.certificate_next_service_date = certificate_next_service_date
        if service_interval is not None:
            self.service_interval = service_interval
        if interval_cycle is not None:
            self.interval_cycle = interval_cycle
        if interval_length is not None:
            self.interval_length = interval_length
        if on_day is not None:
            self.on_day = on_day
        if on_month is not None:
            self.on_month = on_month
        if on_week_days is not None:
            self.on_week_days = on_week_days
        if weekday_of_month is not None:
            self.weekday_of_month = weekday_of_month
        if advance_recall_period is not None:
            self.advance_recall_period = advance_recall_period
        if days_before_due is not None:
            self.days_before_due = days_before_due
        if past_due_grace_period is not None:
            self.past_due_grace_period = past_due_grace_period
        if days_after_due is not None:
            self.days_after_due = days_after_due

    @property
    def company_id(self):
        """Gets the company_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The company_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param company_id: The company_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._company_id = company_id

    @property
    def asset_id(self):
        """Gets the asset_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The asset_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param asset_id: The asset_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._asset_id = asset_id

    @property
    def site_id(self):
        """Gets the site_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The site_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param site_id: The site_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._site_id = site_id

    @property
    def asset_service_record_id(self):
        """Gets the asset_service_record_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The asset_service_record_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._asset_service_record_id

    @asset_service_record_id.setter
    def asset_service_record_id(self, asset_service_record_id):
        """Sets the asset_service_record_id of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param asset_service_record_id: The asset_service_record_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._asset_service_record_id = asset_service_record_id

    @property
    def serial_number(self):
        """Gets the serial_number of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The serial_number of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._serial_number

    @serial_number.setter
    def serial_number(self, serial_number):
        """Sets the serial_number of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param serial_number: The serial_number of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._serial_number = serial_number

    @property
    def asset_user(self):
        """Gets the asset_user of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The asset_user of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_user

    @asset_user.setter
    def asset_user(self, asset_user):
        """Sets the asset_user of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param asset_user: The asset_user of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._asset_user = asset_user

    @property
    def asset_tag(self):
        """Gets the asset_tag of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The asset_tag of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_tag

    @asset_tag.setter
    def asset_tag(self, asset_tag):
        """Sets the asset_tag of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param asset_tag: The asset_tag of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._asset_tag = asset_tag

    @property
    def equipment_id(self):
        """Gets the equipment_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The equipment_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._equipment_id

    @equipment_id.setter
    def equipment_id(self, equipment_id):
        """Sets the equipment_id of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param equipment_id: The equipment_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._equipment_id = equipment_id

    @property
    def asset_name(self):
        """Gets the asset_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The asset_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._asset_name

    @asset_name.setter
    def asset_name(self, asset_name):
        """Sets the asset_name of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param asset_name: The asset_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._asset_name = asset_name

    @property
    def category_name(self):
        """Gets the category_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The category_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._category_name

    @category_name.setter
    def category_name(self, category_name):
        """Sets the category_name of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param category_name: The category_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._category_name = category_name

    @property
    def manufacturer_name(self):
        """Gets the manufacturer_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The manufacturer_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_name

    @manufacturer_name.setter
    def manufacturer_name(self, manufacturer_name):
        """Sets the manufacturer_name of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param manufacturer_name: The manufacturer_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._manufacturer_name = manufacturer_name

    @property
    def site_name(self):
        """Gets the site_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The site_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._site_name

    @site_name.setter
    def site_name(self, site_name):
        """Sets the site_name of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param site_name: The site_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._site_name = site_name

    @property
    def maintenance_plan_id(self):
        """Gets the maintenance_plan_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The maintenance_plan_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._maintenance_plan_id

    @maintenance_plan_id.setter
    def maintenance_plan_id(self, maintenance_plan_id):
        """Sets the maintenance_plan_id of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param maintenance_plan_id: The maintenance_plan_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._maintenance_plan_id = maintenance_plan_id

    @property
    def maintenance_plan_name(self):
        """Gets the maintenance_plan_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The maintenance_plan_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._maintenance_plan_name

    @maintenance_plan_name.setter
    def maintenance_plan_name(self, maintenance_plan_name):
        """Sets the maintenance_plan_name of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param maintenance_plan_name: The maintenance_plan_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._maintenance_plan_name = maintenance_plan_name

    @property
    def maintenance_task_id(self):
        """Gets the maintenance_task_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The maintenance_task_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._maintenance_task_id

    @maintenance_task_id.setter
    def maintenance_task_id(self, maintenance_task_id):
        """Sets the maintenance_task_id of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param maintenance_task_id: The maintenance_task_id of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._maintenance_task_id = maintenance_task_id

    @property
    def maintenance_task_name(self):
        """Gets the maintenance_task_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The maintenance_task_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._maintenance_task_name

    @maintenance_task_name.setter
    def maintenance_task_name(self, maintenance_task_name):
        """Sets the maintenance_task_name of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param maintenance_task_name: The maintenance_task_name of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._maintenance_task_name = maintenance_task_name

    @property
    def next_service_date(self):
        """Gets the next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: datetime
        """
        return self._next_service_date

    @next_service_date.setter
    def next_service_date(self, next_service_date):
        """Sets the next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param next_service_date: The next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: datetime
        """

        self._next_service_date = next_service_date

    @property
    def advance_recall_date(self):
        """Gets the advance_recall_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The advance_recall_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: datetime
        """
        return self._advance_recall_date

    @advance_recall_date.setter
    def advance_recall_date(self, advance_recall_date):
        """Sets the advance_recall_date of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param advance_recall_date: The advance_recall_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: datetime
        """

        self._advance_recall_date = advance_recall_date

    @property
    def grace_period_date(self):
        """Gets the grace_period_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The grace_period_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: datetime
        """
        return self._grace_period_date

    @grace_period_date.setter
    def grace_period_date(self, grace_period_date):
        """Sets the grace_period_date of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param grace_period_date: The grace_period_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: datetime
        """

        self._grace_period_date = grace_period_date

    @property
    def certificate_next_service_date(self):
        """Gets the certificate_next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The certificate_next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: datetime
        """
        return self._certificate_next_service_date

    @certificate_next_service_date.setter
    def certificate_next_service_date(self, certificate_next_service_date):
        """Sets the certificate_next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param certificate_next_service_date: The certificate_next_service_date of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: datetime
        """

        self._certificate_next_service_date = certificate_next_service_date

    @property
    def service_interval(self):
        """Gets the service_interval of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The service_interval of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._service_interval

    @service_interval.setter
    def service_interval(self, service_interval):
        """Sets the service_interval of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param service_interval: The service_interval of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._service_interval = service_interval

    @property
    def interval_cycle(self):
        """Gets the interval_cycle of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The interval_cycle of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._interval_cycle

    @interval_cycle.setter
    def interval_cycle(self, interval_cycle):
        """Sets the interval_cycle of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param interval_cycle: The interval_cycle of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._interval_cycle = interval_cycle

    @property
    def interval_length(self):
        """Gets the interval_length of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The interval_length of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._interval_length

    @interval_length.setter
    def interval_length(self, interval_length):
        """Sets the interval_length of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param interval_length: The interval_length of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._interval_length = interval_length

    @property
    def on_day(self):
        """Gets the on_day of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The on_day of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._on_day

    @on_day.setter
    def on_day(self, on_day):
        """Sets the on_day of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param on_day: The on_day of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "Day1",
            "Day2",
            "Day3",
            "Day4",
            "Day5",
            "Day6",
            "Day7",
            "Day8",
            "Day9",
            "Day10",
            "Day11",
            "Day12",
            "Day13",
            "Day14",
            "Day15",
            "Day16",
            "Day17",
            "Day18",
            "Day19",
            "Day20",
            "Day21",
            "Day22",
            "Day23",
            "Day24",
            "Day25",
            "Day26",
            "Day27",
            "Day28",
            "Day29",
            "Day30",
            "Day31",
            "First",
            "Second",
            "Third",
            "Fourth",
            "Last",
        ]  # noqa: E501
        if self._configuration.client_side_validation and on_day not in allowed_values:
            raise ValueError(
                "Invalid value for `on_day` ({0}), must be one of {1}".format(  # noqa: E501
                    on_day, allowed_values
                )
            )

        self._on_day = on_day

    @property
    def on_month(self):
        """Gets the on_month of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The on_month of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._on_month

    @on_month.setter
    def on_month(self, on_month):
        """Sets the on_month of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param on_month: The on_month of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "None",
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
            "All",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and on_month not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `on_month` ({0}), must be one of {1}".format(  # noqa: E501
                    on_month, allowed_values
                )
            )

        self._on_month = on_month

    @property
    def on_week_days(self):
        """Gets the on_week_days of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The on_week_days of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._on_week_days

    @on_week_days.setter
    def on_week_days(self, on_week_days):
        """Sets the on_week_days of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param on_week_days: The on_week_days of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "None",
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "WeekendDays",
            "WorkDays",
            "EveryDay",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and on_week_days not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `on_week_days` ({0}), must be one of {1}".format(  # noqa: E501
                    on_week_days, allowed_values
                )
            )

        self._on_week_days = on_week_days

    @property
    def weekday_of_month(self):
        """Gets the weekday_of_month of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The weekday_of_month of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._weekday_of_month

    @weekday_of_month.setter
    def weekday_of_month(self, weekday_of_month):
        """Sets the weekday_of_month of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param weekday_of_month: The weekday_of_month of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """
        allowed_values = [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
        ]  # noqa: E501
        if (
            self._configuration.client_side_validation
            and weekday_of_month not in allowed_values
        ):
            raise ValueError(
                "Invalid value for `weekday_of_month` ({0}), must be one of {1}".format(  # noqa: E501
                    weekday_of_month, allowed_values
                )
            )

        self._weekday_of_month = weekday_of_month

    @property
    def advance_recall_period(self):
        """Gets the advance_recall_period of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The advance_recall_period of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._advance_recall_period

    @advance_recall_period.setter
    def advance_recall_period(self, advance_recall_period):
        """Sets the advance_recall_period of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param advance_recall_period: The advance_recall_period of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._advance_recall_period = advance_recall_period

    @property
    def days_before_due(self):
        """Gets the days_before_due of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The days_before_due of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._days_before_due

    @days_before_due.setter
    def days_before_due(self, days_before_due):
        """Sets the days_before_due of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param days_before_due: The days_before_due of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._days_before_due = days_before_due

    @property
    def past_due_grace_period(self):
        """Gets the past_due_grace_period of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The past_due_grace_period of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: str
        """
        return self._past_due_grace_period

    @past_due_grace_period.setter
    def past_due_grace_period(self, past_due_grace_period):
        """Sets the past_due_grace_period of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param past_due_grace_period: The past_due_grace_period of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: str
        """

        self._past_due_grace_period = past_due_grace_period

    @property
    def days_after_due(self):
        """Gets the days_after_due of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501


        :return: The days_after_due of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :rtype: int
        """
        return self._days_after_due

    @days_after_due.setter
    def days_after_due(self, days_after_due):
        """Sets the days_after_due of this QualerApiModelsAssetToAssetServiceForecastModel.


        :param days_after_due: The days_after_due of this QualerApiModelsAssetToAssetServiceForecastModel.  # noqa: E501
        :type: int
        """

        self._days_after_due = days_after_due

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (
                            (item[0], item[1].to_dict())
                            if hasattr(item[1], "to_dict")
                            else item
                        ),
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(QualerApiModelsAssetToAssetServiceForecastModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetServiceForecastModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsAssetToAssetServiceForecastModel):
            return True

        return self.to_dict() != other.to_dict()
