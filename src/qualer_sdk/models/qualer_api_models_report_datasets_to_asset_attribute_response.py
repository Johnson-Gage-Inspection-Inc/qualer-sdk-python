# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsReportDatasetsToAssetAttributeResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "asset_id": "int",
        "attribute_name": "str",
        "attribute_value": "str",
        "is_service": "bool",
    }

    attribute_map = {
        "asset_id": "AssetId",
        "attribute_name": "AttributeName",
        "attribute_value": "AttributeValue",
        "is_service": "IsService",
    }

    def __init__(
        self,
        asset_id=None,
        attribute_name=None,
        attribute_value=None,
        is_service=None,
        _configuration=None,
    ):  # noqa: E501
        """QualerApiModelsReportDatasetsToAssetAttributeResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._asset_id = None
        self._attribute_name = None
        self._attribute_value = None
        self._is_service = None
        self.discriminator = None

        if asset_id is not None:
            self.asset_id = asset_id
        if attribute_name is not None:
            self.attribute_name = attribute_name
        if attribute_value is not None:
            self.attribute_value = attribute_value
        if is_service is not None:
            self.is_service = is_service

    @property
    def asset_id(self):
        """Gets the asset_id of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501


        :return: The asset_id of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :rtype: int
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this QualerApiModelsReportDatasetsToAssetAttributeResponse.


        :param asset_id: The asset_id of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :type: int
        """

        self._asset_id = asset_id

    @property
    def attribute_name(self):
        """Gets the attribute_name of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501


        :return: The attribute_name of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :rtype: str
        """
        return self._attribute_name

    @attribute_name.setter
    def attribute_name(self, attribute_name):
        """Sets the attribute_name of this QualerApiModelsReportDatasetsToAssetAttributeResponse.


        :param attribute_name: The attribute_name of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :type: str
        """

        self._attribute_name = attribute_name

    @property
    def attribute_value(self):
        """Gets the attribute_value of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501


        :return: The attribute_value of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :rtype: str
        """
        return self._attribute_value

    @attribute_value.setter
    def attribute_value(self, attribute_value):
        """Sets the attribute_value of this QualerApiModelsReportDatasetsToAssetAttributeResponse.


        :param attribute_value: The attribute_value of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :type: str
        """

        self._attribute_value = attribute_value

    @property
    def is_service(self):
        """Gets the is_service of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501


        :return: The is_service of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :rtype: bool
        """
        return self._is_service

    @is_service.setter
    def is_service(self, is_service):
        """Sets the is_service of this QualerApiModelsReportDatasetsToAssetAttributeResponse.


        :param is_service: The is_service of this QualerApiModelsReportDatasetsToAssetAttributeResponse.  # noqa: E501
        :type: bool
        """

        self._is_service = is_service

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (
                            (item[0], item[1].to_dict())
                            if hasattr(item[1], "to_dict")
                            else item
                        ),
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(QualerApiModelsReportDatasetsToAssetAttributeResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToAssetAttributeResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsReportDatasetsToAssetAttributeResponse):
            return True

        return self.to_dict() != other.to_dict()
