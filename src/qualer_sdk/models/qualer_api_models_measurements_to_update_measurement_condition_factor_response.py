# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional, Union

from pydantic import BaseModel, Field, StrictFloat, StrictInt, StrictStr


class QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse(BaseModel):
    """
    QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse
    """

    measurement_condition_factor_id: Optional[StrictInt] = Field(
        None, alias="MeasurementConditionFactorId"
    )
    factor_id: Optional[StrictStr] = Field(None, alias="FactorId")
    factor_name: Optional[StrictStr] = Field(None, alias="FactorName")
    factor_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        None, alias="FactorValue"
    )
    factor_uom: Optional[StrictStr] = Field(None, alias="FactorUom")
    __properties = [
        "MeasurementConditionFactorId",
        "FactorId",
        "FactorName",
        "FactorValue",
        "FactorUom",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse:
        """Create an instance of QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse:
        """Create an instance of QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse.parse_obj(
                obj
            )

        _obj = QualerApiModelsMeasurementsToUpdateMeasurementConditionFactorResponse.parse_obj(
            {
                "measurement_condition_factor_id": obj.get(
                    "MeasurementConditionFactorId"
                ),
                "factor_id": obj.get("FactorId"),
                "factor_name": obj.get("FactorName"),
                "factor_value": obj.get("FactorValue"),
                "factor_uom": obj.get("FactorUom"),
            }
        )
        return _obj
