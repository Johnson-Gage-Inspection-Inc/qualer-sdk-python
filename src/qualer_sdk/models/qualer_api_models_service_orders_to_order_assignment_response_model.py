# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field, StrictBool, StrictInt, StrictStr


class QualerApiModelsServiceOrdersToOrderAssignmentResponseModel(BaseModel):
    """
    QualerApiModelsServiceOrdersToOrderAssignmentResponseModel
    """

    work_item_id: Optional[StrictInt] = Field(None, alias="WorkItemId")
    employee_id: Optional[StrictInt] = Field(None, alias="EmployeeId")
    company_id: Optional[StrictInt] = Field(None, alias="CompanyId")
    subscription_email: Optional[StrictStr] = Field(None, alias="SubscriptionEmail")
    subscription_phone: Optional[StrictStr] = Field(None, alias="SubscriptionPhone")
    office_phone: Optional[StrictStr] = Field(None, alias="OfficePhone")
    is_locked: Optional[StrictBool] = Field(None, alias="IsLocked")
    image_url: Optional[StrictStr] = Field(None, alias="ImageUrl")
    alias: Optional[StrictStr] = Field(None, alias="Alias")
    title: Optional[StrictStr] = Field(None, alias="Title")
    is_deleted: Optional[StrictBool] = Field(None, alias="IsDeleted")
    last_seen_date_utc: Optional[datetime] = Field(None, alias="LastSeenDateUtc")
    __properties = [
        "WorkItemId",
        "EmployeeId",
        "CompanyId",
        "SubscriptionEmail",
        "SubscriptionPhone",
        "OfficePhone",
        "IsLocked",
        "ImageUrl",
        "Alias",
        "Title",
        "IsDeleted",
        "LastSeenDateUtc",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsServiceOrdersToOrderAssignmentResponseModel:
        """Create an instance of QualerApiModelsServiceOrdersToOrderAssignmentResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerApiModelsServiceOrdersToOrderAssignmentResponseModel:
        """Create an instance of QualerApiModelsServiceOrdersToOrderAssignmentResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsServiceOrdersToOrderAssignmentResponseModel.parse_obj(
                obj
            )

        _obj = QualerApiModelsServiceOrdersToOrderAssignmentResponseModel.parse_obj(
            {
                "work_item_id": obj.get("WorkItemId"),
                "employee_id": obj.get("EmployeeId"),
                "company_id": obj.get("CompanyId"),
                "subscription_email": obj.get("SubscriptionEmail"),
                "subscription_phone": obj.get("SubscriptionPhone"),
                "office_phone": obj.get("OfficePhone"),
                "is_locked": obj.get("IsLocked"),
                "image_url": obj.get("ImageUrl"),
                "alias": obj.get("Alias"),
                "title": obj.get("Title"),
                "is_deleted": obj.get("IsDeleted"),
                "last_seen_date_utc": obj.get("LastSeenDateUtc"),
            }
        )
        return _obj
