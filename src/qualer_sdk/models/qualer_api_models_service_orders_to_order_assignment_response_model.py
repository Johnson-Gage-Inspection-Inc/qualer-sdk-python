# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Any, ClassVar, Dict, List, Optional, Set

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr
from typing_extensions import Self


class QualerApiModelsServiceOrdersToOrderAssignmentResponseModel(BaseModel):
    """
    QualerApiModelsServiceOrdersToOrderAssignmentResponseModel
    """  # noqa: E501

    work_item_id: Optional[StrictInt] = Field(default=None, alias="WorkItemId")
    employee_id: Optional[StrictInt] = Field(default=None, alias="EmployeeId")
    company_id: Optional[StrictInt] = Field(default=None, alias="CompanyId")
    subscription_email: Optional[StrictStr] = Field(
        default=None, alias="SubscriptionEmail"
    )
    subscription_phone: Optional[StrictStr] = Field(
        default=None, alias="SubscriptionPhone"
    )
    office_phone: Optional[StrictStr] = Field(default=None, alias="OfficePhone")
    is_locked: Optional[StrictBool] = Field(default=None, alias="IsLocked")
    image_url: Optional[StrictStr] = Field(default=None, alias="ImageUrl")
    alias: Optional[StrictStr] = Field(default=None, alias="Alias")
    title: Optional[StrictStr] = Field(default=None, alias="Title")
    is_deleted: Optional[StrictBool] = Field(default=None, alias="IsDeleted")
    last_seen_date_utc: Optional[datetime] = Field(
        default=None, alias="LastSeenDateUtc"
    )
    __properties: ClassVar[List[str]] = [
        "WorkItemId",
        "EmployeeId",
        "CompanyId",
        "SubscriptionEmail",
        "SubscriptionPhone",
        "OfficePhone",
        "IsLocked",
        "ImageUrl",
        "Alias",
        "Title",
        "IsDeleted",
        "LastSeenDateUtc",
    ]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of QualerApiModelsServiceOrdersToOrderAssignmentResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of QualerApiModelsServiceOrdersToOrderAssignmentResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate(
            {
                "WorkItemId": obj.get("WorkItemId"),
                "EmployeeId": obj.get("EmployeeId"),
                "CompanyId": obj.get("CompanyId"),
                "SubscriptionEmail": obj.get("SubscriptionEmail"),
                "SubscriptionPhone": obj.get("SubscriptionPhone"),
                "OfficePhone": obj.get("OfficePhone"),
                "IsLocked": obj.get("IsLocked"),
                "ImageUrl": obj.get("ImageUrl"),
                "Alias": obj.get("Alias"),
                "Title": obj.get("Title"),
                "IsDeleted": obj.get("IsDeleted"),
                "LastSeenDateUtc": obj.get("LastSeenDateUtc"),
            }
        )
        return _obj
