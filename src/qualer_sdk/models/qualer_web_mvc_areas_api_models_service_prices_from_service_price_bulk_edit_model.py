# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional, Union

from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr


class QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel(BaseModel):
    """
    QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel
    """

    service_option_id: Optional[StrictInt] = Field(None, alias="ServiceOptionId")
    service_option: Optional[StrictStr] = Field(None, alias="ServiceOption")
    service_option_code: Optional[StrictStr] = Field(None, alias="ServiceOptionCode")
    option_type: Optional[StrictStr] = Field(None, alias="OptionType")
    description: Optional[StrictStr] = Field(None, alias="Description")
    service_task_id: Optional[StrictInt] = Field(None, alias="ServiceTaskId")
    service_code: Optional[StrictStr] = Field(None, alias="ServiceCode")
    document_number: Optional[StrictStr] = Field(None, alias="DocumentNumber")
    document_section: Optional[StrictStr] = Field(None, alias="DocumentSection")
    capability_id: Optional[StrictInt] = Field(None, alias="CapabilityId")
    service_type_id: Optional[StrictInt] = Field(None, alias="ServiceTypeId")
    service_task_price_id: Optional[StrictInt] = Field(None, alias="ServiceTaskPriceId")
    service_pricing_id: Optional[StrictInt] = Field(None, alias="ServicePricingId")
    price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="Price")
    is_hourly: Optional[StrictBool] = Field(None, alias="IsHourly")
    issue: Optional[StrictStr] = Field(None, alias="Issue")
    log_error: Optional[StrictStr] = Field(None, alias="LogError")
    __properties = [
        "ServiceOptionId",
        "ServiceOption",
        "ServiceOptionCode",
        "OptionType",
        "Description",
        "ServiceTaskId",
        "ServiceCode",
        "DocumentNumber",
        "DocumentSection",
        "CapabilityId",
        "ServiceTypeId",
        "ServiceTaskPriceId",
        "ServicePricingId",
        "Price",
        "IsHourly",
        "Issue",
        "LogError",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel:
        """Create an instance of QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel:
        """Create an instance of QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel.parse_obj(
                obj
            )

        _obj = QualerWebMvcAreasApiModelsServicePricesFromServicePriceBulkEditModel.parse_obj(
            {
                "service_option_id": obj.get("ServiceOptionId"),
                "service_option": obj.get("ServiceOption"),
                "service_option_code": obj.get("ServiceOptionCode"),
                "option_type": obj.get("OptionType"),
                "description": obj.get("Description"),
                "service_task_id": obj.get("ServiceTaskId"),
                "service_code": obj.get("ServiceCode"),
                "document_number": obj.get("DocumentNumber"),
                "document_section": obj.get("DocumentSection"),
                "capability_id": obj.get("CapabilityId"),
                "service_type_id": obj.get("ServiceTypeId"),
                "service_task_price_id": obj.get("ServiceTaskPriceId"),
                "service_pricing_id": obj.get("ServicePricingId"),
                "price": obj.get("Price"),
                "is_hourly": obj.get("IsHourly"),
                "issue": obj.get("Issue"),
                "log_error": obj.get("LogError"),
            }
        )
        return _obj
