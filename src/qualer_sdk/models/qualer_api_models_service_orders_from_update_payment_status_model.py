# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {"payment_status": "str", "invoiced_on": "datetime"}

    attribute_map = {"payment_status": "PaymentStatus", "invoiced_on": "InvoicedOn"}

    def __init__(
        self, payment_status=None, invoiced_on=None, _configuration=None
    ):  # noqa: E501
        """QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._payment_status = None
        self._invoiced_on = None
        self.discriminator = None

        if payment_status is not None:
            self.payment_status = payment_status
        if invoiced_on is not None:
            self.invoiced_on = invoiced_on

    @property
    def payment_status(self):
        """Gets the payment_status of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.  # noqa: E501


        :return: The payment_status of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.  # noqa: E501
        :rtype: str
        """
        return self._payment_status

    @payment_status.setter
    def payment_status(self, payment_status):
        """Sets the payment_status of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.


        :param payment_status: The payment_status of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.  # noqa: E501
        :type: str
        """

        self._payment_status = payment_status

    @property
    def invoiced_on(self):
        """Gets the invoiced_on of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.  # noqa: E501


        :return: The invoiced_on of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.  # noqa: E501
        :rtype: datetime
        """
        return self._invoiced_on

    @invoiced_on.setter
    def invoiced_on(self, invoiced_on):
        """Sets the invoiced_on of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.


        :param invoiced_on: The invoiced_on of this QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel.  # noqa: E501
        :type: datetime
        """

        self._invoiced_on = invoiced_on

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (
                            (item[0], item[1].to_dict())
                            if hasattr(item[1], "to_dict")
                            else item
                        ),
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(
            other, QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel
        ):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(
            other, QualerApiModelsServiceOrdersFromUpdatePaymentStatusModel
        ):
            return True

        return self.to_dict() != other.to_dict()
