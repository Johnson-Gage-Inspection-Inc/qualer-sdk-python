# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from pydantic import BaseModel, Field, StrictBool, StrictInt, StrictStr, validator


class QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse(BaseModel):
    """
    QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse
    """

    service_order_item_id: Optional[StrictInt] = Field(None, alias="ServiceOrderItemId")
    measurement_point_id: Optional[StrictInt] = Field(None, alias="MeasurementPointId")
    batch_type: Optional[StrictStr] = Field(None, alias="BatchType")
    column_index: Optional[StrictInt] = Field(None, alias="ColumnIndex")
    mean: Optional[StrictStr] = Field(None, alias="Mean")
    mean_result: Optional[StrictBool] = Field(None, alias="MeanResult")
    sd: Optional[StrictStr] = Field(None, alias="SD")
    sd_result: Optional[StrictBool] = Field(None, alias="SDResult")
    cv: Optional[StrictStr] = Field(None, alias="CV")
    cv_result: Optional[StrictBool] = Field(None, alias="CVResult")
    range: Optional[StrictStr] = Field(None, alias="Range")
    range_result: Optional[StrictBool] = Field(None, alias="RangeResult")
    delta: Optional[StrictStr] = Field(None, alias="Delta")
    delta_result: Optional[StrictBool] = Field(None, alias="DeltaResult")
    result: Optional[StrictStr] = Field(None, alias="Result")
    __properties = [
        "ServiceOrderItemId",
        "MeasurementPointId",
        "BatchType",
        "ColumnIndex",
        "Mean",
        "MeanResult",
        "SD",
        "SDResult",
        "CV",
        "CVResult",
        "Range",
        "RangeResult",
        "Delta",
        "DeltaResult",
        "Result",
    ]

    @validator("batch_type")
    def batch_type_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in ("Unset", "AsFound", "AsLeft"):
            raise ValueError(
                "must be one of enum values ('Unset', 'AsFound', 'AsLeft')"
            )
        return value

    @validator("result")
    def result_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in (
            "NotServiced",
            "Fail",
            "FailAmbiguous",
            "FailSignificant",
            "Pass",
            "PassAmbiguous",
            "PassAdjustment",
            "Done",
            "Pending",
        ):
            raise ValueError(
                "must be one of enum values ('NotServiced', 'Fail', 'FailAmbiguous', 'FailSignificant', 'Pass', 'PassAmbiguous', 'PassAdjustment', 'Done', 'Pending')"
            )
        return value

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse:
        """Create an instance of QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse:
        """Create an instance of QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse.parse_obj(
                obj
            )

        _obj = QualerApiModelsReportDatasetsToMeasurementChannelUniformityResponse.parse_obj(
            {
                "service_order_item_id": obj.get("ServiceOrderItemId"),
                "measurement_point_id": obj.get("MeasurementPointId"),
                "batch_type": obj.get("BatchType"),
                "column_index": obj.get("ColumnIndex"),
                "mean": obj.get("Mean"),
                "mean_result": obj.get("MeanResult"),
                "sd": obj.get("SD"),
                "sd_result": obj.get("SDResult"),
                "cv": obj.get("CV"),
                "cv_result": obj.get("CVResult"),
                "range": obj.get("Range"),
                "range_result": obj.get("RangeResult"),
                "delta": obj.get("Delta"),
                "delta_result": obj.get("DeltaResult"),
                "result": obj.get("Result"),
            }
        )
        return _obj
