# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {"id": "int", "name": "str", "position": "str"}

    attribute_map = {"id": "Id", "name": "Name", "position": "Position"}

    def __init__(
        self, id=None, name=None, position=None, _configuration=None
    ):  # noqa: E501
        """QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._name = None
        self._position = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if position is not None:
            self.position = position

    @property
    def id(self):
        """Gets the id of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501


        :return: The id of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.


        :param id: The id of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501


        :return: The name of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.


        :param name: The name of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def position(self):
        """Gets the position of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501


        :return: The position of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.


        :param position: The position of this QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.  # noqa: E501
        :type: str
        """

        self._position = position

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (
                            (item[0], item[1].to_dict())
                            if hasattr(item[1], "to_dict")
                            else item
                        ),
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(
            other, QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse
        ):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(
            other, QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse
        ):
            return True

        return self.to_dict() != other.to_dict()
