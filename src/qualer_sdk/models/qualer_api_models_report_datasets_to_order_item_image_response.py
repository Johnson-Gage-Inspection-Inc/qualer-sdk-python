# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional, Union

from pydantic import BaseModel, Field, StrictInt, StrictStr, conbytes, constr, validator


class QualerApiModelsReportDatasetsToOrderItemImageResponse(BaseModel):
    """
    QualerApiModelsReportDatasetsToOrderItemImageResponse
    """

    service_order_item_id: Optional[StrictInt] = Field(None, alias="ServiceOrderItemId")
    image: Optional[Union[conbytes(strict=True), constr(strict=True)]] = Field(
        None, alias="Image"
    )
    image_url: Optional[StrictStr] = Field(None, alias="ImageUrl")
    __properties = ["ServiceOrderItemId", "Image", "ImageUrl"]

    @validator("image")
    def image_validate_regular_expression(cls, value):
        """Validates the regular expression"""
        if value is None:
            return value

        if not re.match(
            r"^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$",
            value,
        ):
            raise ValueError(
                r"must validate the regular expression /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/"
            )
        return value

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsReportDatasetsToOrderItemImageResponse:
        """Create an instance of QualerApiModelsReportDatasetsToOrderItemImageResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerApiModelsReportDatasetsToOrderItemImageResponse:
        """Create an instance of QualerApiModelsReportDatasetsToOrderItemImageResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsReportDatasetsToOrderItemImageResponse.parse_obj(obj)

        _obj = QualerApiModelsReportDatasetsToOrderItemImageResponse.parse_obj(
            {
                "service_order_item_id": obj.get("ServiceOrderItemId"),
                "image": obj.get("Image"),
                "image_url": obj.get("ImageUrl"),
            }
        )
        return _obj
