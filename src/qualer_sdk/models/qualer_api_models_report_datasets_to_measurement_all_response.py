# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Any, ClassVar, Dict, List, Optional, Set, Union

from pydantic import (
    BaseModel,
    ConfigDict,
    Field,
    StrictBool,
    StrictFloat,
    StrictInt,
    StrictStr,
    field_validator,
)
from typing_extensions import Self


class QualerApiModelsReportDatasetsToMeasurementAllResponse(BaseModel):
    """
    QualerApiModelsReportDatasetsToMeasurementAllResponse
    """  # noqa: E501

    barcode: Optional[StrictStr] = Field(default=None, alias="Barcode")
    display_name: Optional[StrictStr] = Field(default=None, alias="DisplayName")
    display_part_number: Optional[StrictStr] = Field(
        default=None, alias="DisplayPartNumber"
    )
    part_number: Optional[StrictStr] = Field(default=None, alias="PartNumber")
    vendor_company_id: Optional[StrictInt] = Field(
        default=None, alias="VendorCompanyId"
    )
    service_order_number: Optional[StrictInt] = Field(
        default=None, alias="ServiceOrderNumber"
    )
    completed_by_name: Optional[StrictStr] = Field(
        default=None, alias="CompletedByName"
    )
    completed_on: Optional[datetime] = Field(default=None, alias="CompletedOn")
    is_limited: Optional[StrictBool] = Field(default=None, alias="IsLimited")
    vendor_tag: Optional[StrictStr] = Field(default=None, alias="VendorTag")
    room: Optional[StrictStr] = Field(default=None, alias="Room")
    segment_name: Optional[StrictStr] = Field(default=None, alias="SegmentName")
    schedule_name: Optional[StrictStr] = Field(default=None, alias="ScheduleName")
    next_segment_name: Optional[StrictStr] = Field(
        default=None, alias="NextSegmentName"
    )
    certificate_number: Optional[StrictStr] = Field(
        default=None, alias="CertificateNumber"
    )
    work_status: Optional[StrictInt] = Field(default=None, alias="WorkStatus")
    service_type: Optional[StrictStr] = Field(default=None, alias="ServiceType")
    service_level: Optional[StrictStr] = Field(default=None, alias="ServiceLevel")
    service_comments: Optional[StrictStr] = Field(default=None, alias="ServiceComments")
    order_item_number: Optional[StrictInt] = Field(
        default=None, alias="OrderItemNumber"
    )
    service_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="ServiceTotal"
    )
    repairs_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="RepairsTotal"
    )
    parts_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsTotal"
    )
    asset_tag: Optional[StrictStr] = Field(default=None, alias="AssetTag")
    asset_user: Optional[StrictStr] = Field(default=None, alias="AssetUser")
    serial_number: Optional[StrictStr] = Field(default=None, alias="SerialNumber")
    equipment_id: Optional[StrictStr] = Field(default=None, alias="EquipmentId")
    legacy_identifier: Optional[StrictStr] = Field(
        default=None, alias="LegacyIdentifier"
    )
    asset_name: Optional[StrictStr] = Field(default=None, alias="AssetName")
    asset_description: Optional[StrictStr] = Field(
        default=None, alias="AssetDescription"
    )
    product_name: Optional[StrictStr] = Field(default=None, alias="ProductName")
    product_description: Optional[StrictStr] = Field(
        default=None, alias="ProductDescription"
    )
    asset_maker: Optional[StrictStr] = Field(default=None, alias="AssetMaker")
    asset_tag_change: Optional[StrictStr] = Field(default=None, alias="AssetTagChange")
    asset_user_change: Optional[StrictStr] = Field(
        default=None, alias="AssetUserChange"
    )
    serial_number_change: Optional[StrictStr] = Field(
        default=None, alias="SerialNumberChange"
    )
    service_date: Optional[datetime] = Field(default=None, alias="ServiceDate")
    next_service_date: Optional[datetime] = Field(default=None, alias="NextServiceDate")
    service_order_item_id: Optional[StrictInt] = Field(
        default=None, alias="ServiceOrderItemId"
    )
    site_name: Optional[StrictStr] = Field(default=None, alias="SiteName")
    po_number: Optional[StrictStr] = Field(default=None, alias="PoNumber")
    shipped_date: Optional[datetime] = Field(default=None, alias="ShippedDate")
    tracking_number: Optional[StrictStr] = Field(default=None, alias="TrackingNumber")
    payment_terms: Optional[StrictInt] = Field(default=None, alias="PaymentTerms")
    shipping_method: Optional[StrictStr] = Field(default=None, alias="ShippingMethod")
    location: Optional[StrictStr] = Field(default=None, alias="Location")
    site_access_notes: Optional[StrictStr] = Field(
        default=None, alias="SiteAccessNotes"
    )
    as_left_decimal_places: Optional[StrictInt] = Field(
        default=None, alias="AsLeftDecimalPlaces"
    )
    as_left_measurement_set_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMeasurementSetName"
    )
    as_left_measurement_set_id: Optional[StrictInt] = Field(
        default=None, alias="AsLeftMeasurementSetId"
    )
    as_left_adjustment_threshold: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftAdjustmentThreshold"
    )
    as_left_mean_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMeanExtended"
    )
    as_left_sd_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSdExtended"
    )
    as_left_range_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRangeExtended"
    )
    as_left_delta_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftDeltaExtended"
    )
    as_left_cv_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftCvExtended"
    )
    as_left_nominal_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftNominalExtended"
    )
    as_left_min_max_header: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMinMaxHeader"
    )
    as_left_accuracy_class: Optional[StrictStr] = Field(
        default=None, alias="AsLeftAccuracyClass"
    )
    as_left_accuracy_class_min: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftAccuracyClassMin"
    )
    as_left_accuracy_class_max: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftAccuracyClassMax"
    )
    as_left_minimum_measured_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMinimumMeasuredValue"
    )
    as_left_maxi_mum_measured_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMaxiMumMeasuredValue"
    )
    as_left_min_max_value_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMinMaxValueExtended"
    )
    as_left_tool_range_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftToolRangeName"
    )
    as_left_tool_range_uncertainty: Optional[StrictStr] = Field(
        default=None, alias="AsLeftToolRangeUncertainty"
    )
    as_left_primary_tool_last_service_date: Optional[datetime] = Field(
        default=None, alias="AsLeftPrimaryToolLastServiceDate"
    )
    as_left_primary_tool_next_service_date: Optional[datetime] = Field(
        default=None, alias="AsLeftPrimaryToolNextServiceDate"
    )
    as_left_primary_tool_calibrated_by: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrimaryToolCalibratedBy"
    )
    as_left_primary_tool_tool_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrimaryToolToolName"
    )
    as_left_primary_tool_tool_description: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrimaryToolToolDescription"
    )
    as_left_primary_tool_tool_type_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrimaryToolToolTypeName"
    )
    as_left_primary_tool_manufacturer: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrimaryToolManufacturer"
    )
    as_left_primary_tool_manufacturer_part_number: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrimaryToolManufacturerPartNumber"
    )
    as_left_primary_tool_serial_number: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrimaryToolSerialNumber"
    )
    as_found_measurement_set_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMeasurementSetName"
    )
    as_found_measurement_set_id: Optional[StrictInt] = Field(
        default=None, alias="AsFoundMeasurementSetId"
    )
    as_found_adjustment_threshold: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundAdjustmentThreshold"
    )
    as_found_decimal_places: Optional[StrictInt] = Field(
        default=None, alias="AsFoundDecimalPlaces"
    )
    as_found_mean_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMeanExtended"
    )
    as_found_sd_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSdExtended"
    )
    as_found_range_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRangeExtended"
    )
    as_found_delta_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundDeltaExtended"
    )
    as_found_cv_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundCvExtended"
    )
    as_found_nominal_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundNominalExtended"
    )
    as_found_min_max_header: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMinMaxHeader"
    )
    as_found_accuracy_class: Optional[StrictStr] = Field(
        default=None, alias="AsFoundAccuracyClass"
    )
    as_found_accuracy_class_min: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundAccuracyClassMin"
    )
    as_found_accuracy_class_max: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundAccuracyClassMax"
    )
    as_found_minimum_measured_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMinimumMeasuredValue"
    )
    as_found_maxi_mum_measured_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMaxiMumMeasuredValue"
    )
    as_found_min_max_value_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMinMaxValueExtended"
    )
    as_found_tool_range_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundToolRangeName"
    )
    as_found_tool_range_uncertainty: Optional[StrictStr] = Field(
        default=None, alias="AsFoundToolRangeUncertainty"
    )
    as_found_primary_tool_last_service_date: Optional[datetime] = Field(
        default=None, alias="AsFoundPrimaryToolLastServiceDate"
    )
    as_found_primary_tool_next_service_date: Optional[datetime] = Field(
        default=None, alias="AsFoundPrimaryToolNextServiceDate"
    )
    as_found_primary_tool_calibrated_by: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrimaryToolCalibratedBy"
    )
    as_found_primary_tool_tool_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrimaryToolToolName"
    )
    as_found_primary_tool_tool_description: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrimaryToolToolDescription"
    )
    as_found_primary_tool_tool_type_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrimaryToolToolTypeName"
    )
    as_found_primary_tool_manufacturer: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrimaryToolManufacturer"
    )
    as_found_primary_tool_manufacturer_part_number: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrimaryToolManufacturerPartNumber"
    )
    as_found_primary_tool_serial_number: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrimaryToolSerialNumber"
    )
    as_left_secondary_tool_last_service_date: Optional[datetime] = Field(
        default=None, alias="AsLeftSecondaryToolLastServiceDate"
    )
    as_left_secondary_tool_next_service_date: Optional[datetime] = Field(
        default=None, alias="AsLeftSecondaryToolNextServiceDate"
    )
    as_left_secondary_tool_calibrated_by: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSecondaryToolCalibratedBy"
    )
    as_left_secondary_tool_tool_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSecondaryToolToolName"
    )
    as_left_secondary_tool_tool_description: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSecondaryToolToolDescription"
    )
    as_left_secondary_tool_tool_type_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSecondaryToolToolTypeName"
    )
    as_left_secondary_tool_manufacturer: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSecondaryToolManufacturer"
    )
    as_left_secondary_tool_manufacturer_part_number: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSecondaryToolManufacturerPartNumber"
    )
    as_left_secondary_tool_serial_number: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSecondaryToolSerialNumber"
    )
    as_found_secondary_tool_last_service_date: Optional[datetime] = Field(
        default=None, alias="AsFoundSecondaryToolLastServiceDate"
    )
    as_found_secondary_tool_next_service_date: Optional[datetime] = Field(
        default=None, alias="AsFoundSecondaryToolNextServiceDate"
    )
    as_found_secondary_tool_calibrated_by: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSecondaryToolCalibratedBy"
    )
    as_found_secondary_tool_tool_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSecondaryToolToolName"
    )
    as_found_secondary_tool_tool_description: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSecondaryToolToolDescription"
    )
    as_found_secondary_tool_tool_type_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSecondaryToolToolTypeName"
    )
    as_found_secondary_tool_manufacturer: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSecondaryToolManufacturer"
    )
    as_found_secondary_tool_manufacturer_part_number: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSecondaryToolManufacturerPartNumber"
    )
    as_found_secondary_tool_serial_number: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSecondaryToolSerialNumber"
    )
    as_found_measurement_not_taken_result: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMeasurementNotTakenResult"
    )
    as_found_hide_from_certificate: Optional[StrictBool] = Field(
        default=None, alias="AsFoundHideFromCertificate"
    )
    as_found_measurement_not_taken_reason: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMeasurementNotTakenReason"
    )
    as_left_values: Optional[StrictStr] = Field(default=None, alias="AsLeftValues")
    as_left_is_accredited: Optional[StrictBool] = Field(
        default=None, alias="AsLeftIsAccredited"
    )
    as_left_is_range_accredited: Optional[StrictBool] = Field(
        default=None, alias="AsLeftIsRangeAccredited"
    )
    as_found_values: Optional[StrictStr] = Field(default=None, alias="AsFoundValues")
    as_found_is_accredited: Optional[StrictBool] = Field(
        default=None, alias="AsFoundIsAccredited"
    )
    as_found_is_range_accredited: Optional[StrictBool] = Field(
        default=None, alias="AsFoundIsRangeAccredited"
    )
    as_found_parameter_id: Optional[StrictInt] = Field(
        default=None, alias="AsFoundParameterId"
    )
    as_found_sd_header: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundSdHeader"
    )
    as_found_cv_header: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundCvHeader"
    )
    as_found_measurement_local_time: Optional[datetime] = Field(
        default=None, alias="AsFoundMeasurementLocalTime"
    )
    as_found_tur: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundTur"
    )
    as_found_tur_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundTurRaw"
    )
    as_left_tur: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftTur"
    )
    as_left_tur_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftTurRaw"
    )
    as_found_tar: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundTar"
    )
    as_found_tar_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundTarRaw"
    )
    as_left_tar: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftTar"
    )
    as_left_tar_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftTarRaw"
    )
    as_found_guard_band: Optional[StrictStr] = Field(
        default=None, alias="AsFoundGuardBand"
    )
    as_left_guard_band: Optional[StrictStr] = Field(
        default=None, alias="AsLeftGuardBand"
    )
    as_found_guard_band_logic: Optional[StrictStr] = Field(
        default=None, alias="AsFoundGuardBandLogic"
    )
    as_left_guard_band_logic: Optional[StrictStr] = Field(
        default=None, alias="AsLeftGuardBandLogic"
    )
    as_found_error: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundError"
    )
    as_found_error_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundErrorExtended"
    )
    as_left_error: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftError"
    )
    as_left_error_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftErrorExtended"
    )
    as_found_percent_of_tolerance: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundPercentOfTolerance"
    )
    as_found_percent_of_tolerance_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPercentOfToleranceExtended"
    )
    as_left_percent_of_tolerance: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftPercentOfTolerance"
    )
    as_left_percent_of_tolerance_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPercentOfToleranceExtended"
    )
    as_found_tolerance_maximum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundToleranceMaximum"
    )
    as_found_tolerance_minimum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundToleranceMinimum"
    )
    as_found_tolerance_type: Optional[StrictInt] = Field(
        default=None, alias="AsFoundToleranceType"
    )
    as_found_tolerance_mode: Optional[StrictInt] = Field(
        default=None, alias="AsFoundToleranceMode"
    )
    as_found_tolerance_string: Optional[StrictStr] = Field(
        default=None, alias="AsFoundToleranceString"
    )
    as_left_tolerance_maximum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftToleranceMaximum"
    )
    as_left_tolerance_minimum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftToleranceMinimum"
    )
    as_left_tolerance_type: Optional[StrictInt] = Field(
        default=None, alias="AsLeftToleranceType"
    )
    as_left_tolerance_mode: Optional[StrictInt] = Field(
        default=None, alias="AsLeftToleranceMode"
    )
    as_left_tolerance_string: Optional[StrictStr] = Field(
        default=None, alias="AsLeftToleranceString"
    )
    as_found_max_hysteresis: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMaxHysteresis"
    )
    as_found_run: Optional[StrictInt] = Field(default=None, alias="AsFoundRun")
    as_found_direction: Optional[StrictInt] = Field(
        default=None, alias="AsFoundDirection"
    )
    as_found_hysteresis: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundHysteresis"
    )
    as_left_max_hysteresis: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMaxHysteresis"
    )
    as_left_run: Optional[StrictInt] = Field(default=None, alias="AsLeftRun")
    as_left_direction: Optional[StrictInt] = Field(
        default=None, alias="AsLeftDirection"
    )
    as_left_hysteresis: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftHysteresis"
    )
    as_found_reading_entry_math: Optional[StrictStr] = Field(
        default=None, alias="AsFoundReadingEntryMath"
    )
    as_found_reading_entry_math_string: Optional[StrictStr] = Field(
        default=None, alias="AsFoundReadingEntryMathString"
    )
    as_found_value1: Optional[StrictStr] = Field(default=None, alias="AsFoundValue1")
    as_found_value2: Optional[StrictStr] = Field(default=None, alias="AsFoundValue2")
    as_found_value3: Optional[StrictStr] = Field(default=None, alias="AsFoundValue3")
    as_found_value4: Optional[StrictStr] = Field(default=None, alias="AsFoundValue4")
    as_found_value5: Optional[StrictStr] = Field(default=None, alias="AsFoundValue5")
    as_found_value6: Optional[StrictStr] = Field(default=None, alias="AsFoundValue6")
    as_found_value7: Optional[StrictStr] = Field(default=None, alias="AsFoundValue7")
    as_found_value8: Optional[StrictStr] = Field(default=None, alias="AsFoundValue8")
    as_found_value9: Optional[StrictStr] = Field(default=None, alias="AsFoundValue9")
    as_found_value10: Optional[StrictStr] = Field(default=None, alias="AsFoundValue10")
    as_found_value11: Optional[StrictStr] = Field(default=None, alias="AsFoundValue11")
    as_found_value12: Optional[StrictStr] = Field(default=None, alias="AsFoundValue12")
    as_found_value13: Optional[StrictStr] = Field(default=None, alias="AsFoundValue13")
    as_found_value14: Optional[StrictStr] = Field(default=None, alias="AsFoundValue14")
    as_found_value15: Optional[StrictStr] = Field(default=None, alias="AsFoundValue15")
    as_found_value16: Optional[StrictStr] = Field(default=None, alias="AsFoundValue16")
    as_found_value17: Optional[StrictStr] = Field(default=None, alias="AsFoundValue17")
    as_found_value18: Optional[StrictStr] = Field(default=None, alias="AsFoundValue18")
    as_found_value19: Optional[StrictStr] = Field(default=None, alias="AsFoundValue19")
    as_found_value20: Optional[StrictStr] = Field(default=None, alias="AsFoundValue20")
    as_found_value21: Optional[StrictStr] = Field(default=None, alias="AsFoundValue21")
    as_found_value22: Optional[StrictStr] = Field(default=None, alias="AsFoundValue22")
    as_found_value23: Optional[StrictStr] = Field(default=None, alias="AsFoundValue23")
    as_found_value24: Optional[StrictStr] = Field(default=None, alias="AsFoundValue24")
    as_found_value25: Optional[StrictStr] = Field(default=None, alias="AsFoundValue25")
    as_found_value26: Optional[StrictStr] = Field(default=None, alias="AsFoundValue26")
    as_found_value27: Optional[StrictStr] = Field(default=None, alias="AsFoundValue27")
    as_found_value28: Optional[StrictStr] = Field(default=None, alias="AsFoundValue28")
    as_found_value29: Optional[StrictStr] = Field(default=None, alias="AsFoundValue29")
    as_found_value30: Optional[StrictStr] = Field(default=None, alias="AsFoundValue30")
    as_found_value31: Optional[StrictStr] = Field(default=None, alias="AsFoundValue31")
    as_found_value32: Optional[StrictStr] = Field(default=None, alias="AsFoundValue32")
    as_found_value33: Optional[StrictStr] = Field(default=None, alias="AsFoundValue33")
    as_found_value34: Optional[StrictStr] = Field(default=None, alias="AsFoundValue34")
    as_found_value35: Optional[StrictStr] = Field(default=None, alias="AsFoundValue35")
    as_found_value36: Optional[StrictStr] = Field(default=None, alias="AsFoundValue36")
    as_found_value37: Optional[StrictStr] = Field(default=None, alias="AsFoundValue37")
    as_found_value38: Optional[StrictStr] = Field(default=None, alias="AsFoundValue38")
    as_found_value39: Optional[StrictStr] = Field(default=None, alias="AsFoundValue39")
    as_found_value40: Optional[StrictStr] = Field(default=None, alias="AsFoundValue40")
    as_found_raw_value1: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue1"
    )
    as_found_raw_value2: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue2"
    )
    as_found_raw_value3: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue3"
    )
    as_found_raw_value4: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue4"
    )
    as_found_raw_value5: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue5"
    )
    as_found_raw_value6: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue6"
    )
    as_found_raw_value7: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue7"
    )
    as_found_raw_value8: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue8"
    )
    as_found_raw_value9: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue9"
    )
    as_found_raw_value10: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue10"
    )
    as_found_raw_value11: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue11"
    )
    as_found_raw_value12: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue12"
    )
    as_found_raw_value13: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue13"
    )
    as_found_raw_value14: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue14"
    )
    as_found_raw_value15: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue15"
    )
    as_found_raw_value16: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue16"
    )
    as_found_raw_value17: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue17"
    )
    as_found_raw_value18: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue18"
    )
    as_found_raw_value19: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue19"
    )
    as_found_raw_value20: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue20"
    )
    as_found_raw_value21: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue21"
    )
    as_found_raw_value22: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue22"
    )
    as_found_raw_value23: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue23"
    )
    as_found_raw_value24: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue24"
    )
    as_found_raw_value25: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue25"
    )
    as_found_raw_value26: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue26"
    )
    as_found_raw_value27: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue27"
    )
    as_found_raw_value28: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue28"
    )
    as_found_raw_value29: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue29"
    )
    as_found_raw_value30: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue30"
    )
    as_found_raw_value31: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue31"
    )
    as_found_raw_value32: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue32"
    )
    as_found_raw_value33: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue33"
    )
    as_found_raw_value34: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue34"
    )
    as_found_raw_value35: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue35"
    )
    as_found_raw_value36: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue36"
    )
    as_found_raw_value37: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue37"
    )
    as_found_raw_value38: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue38"
    )
    as_found_raw_value39: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue39"
    )
    as_found_raw_value40: Optional[StrictStr] = Field(
        default=None, alias="AsFoundRawValue40"
    )
    as_found_value_subtitle1: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle1"
    )
    as_found_value_subtitle2: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle2"
    )
    as_found_value_subtitle3: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle3"
    )
    as_found_value_subtitle4: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle4"
    )
    as_found_value_subtitle5: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle5"
    )
    as_found_value_subtitle6: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle6"
    )
    as_found_value_subtitle7: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle7"
    )
    as_found_value_subtitle8: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle8"
    )
    as_found_value_subtitle9: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle9"
    )
    as_found_value_subtitle10: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle10"
    )
    as_found_value_subtitle11: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle11"
    )
    as_found_value_subtitle12: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle12"
    )
    as_found_value_subtitle13: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle13"
    )
    as_found_value_subtitle14: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle14"
    )
    as_found_value_subtitle15: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle15"
    )
    as_found_value_subtitle16: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle16"
    )
    as_found_value_subtitle17: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle17"
    )
    as_found_value_subtitle18: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle18"
    )
    as_found_value_subtitle19: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle19"
    )
    as_found_value_subtitle20: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle20"
    )
    as_found_value_subtitle21: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle21"
    )
    as_found_value_subtitle22: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle22"
    )
    as_found_value_subtitle23: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle23"
    )
    as_found_value_subtitle24: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle24"
    )
    as_found_value_subtitle25: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle25"
    )
    as_found_value_subtitle26: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle26"
    )
    as_found_value_subtitle27: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle27"
    )
    as_found_value_subtitle28: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle28"
    )
    as_found_value_subtitle29: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle29"
    )
    as_found_value_subtitle30: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle30"
    )
    as_found_value_subtitle31: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle31"
    )
    as_found_value_subtitle32: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle32"
    )
    as_found_value_subtitle33: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle33"
    )
    as_found_value_subtitle34: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle34"
    )
    as_found_value_subtitle35: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle35"
    )
    as_found_value_subtitle36: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle36"
    )
    as_found_value_subtitle37: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle37"
    )
    as_found_value_subtitle38: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle38"
    )
    as_found_value_subtitle39: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle39"
    )
    as_found_value_subtitle40: Optional[StrictStr] = Field(
        default=None, alias="AsFoundValueSubtitle40"
    )
    as_found_mean: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMean"
    )
    as_found_mean_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMeanRaw"
    )
    as_found_sd: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundSd"
    )
    as_found_sd_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundSdRaw"
    )
    as_found_delta: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundDelta"
    )
    as_found_range: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundRange"
    )
    as_found_cv: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundCv"
    )
    as_found_cv_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundCvRaw"
    )
    as_found_result: Optional[StrictInt] = Field(default=None, alias="AsFoundResult")
    as_found_range_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundRangeResult"
    )
    as_found_delta_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundDeltaResult"
    )
    as_found_min_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundMinResult"
    )
    as_found_max_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundMaxResult"
    )
    as_found_tar_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundTarResult"
    )
    as_found_tur_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundTurResult"
    )
    as_found_error_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundErrorResult"
    )
    as_found_sd_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundSdResult"
    )
    as_found_cv_result: Optional[StrictBool] = Field(
        default=None, alias="AsFoundCvResult"
    )
    as_found_custom_field_result: Optional[StrictInt] = Field(
        default=None, alias="AsFoundCustomFieldResult"
    )
    as_found_mu: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMu"
    )
    as_found_mu_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMuRaw"
    )
    as_found_mu_effective_dof: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMuEffectiveDOF"
    )
    as_found_mu_coverage_factor: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMUCoverageFactor"
    )
    as_found_cmc: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundCmc"
    )
    as_found_cmc_comments: Optional[StrictStr] = Field(
        default=None, alias="AsFoundCmcComments"
    )
    as_found_calculated_uncertainty: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundCalculatedUncertainty"
    )
    as_found_lab_mu: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundLabMu"
    )
    as_found_uncertainty_budget: Optional[StrictStr] = Field(
        default=None, alias="AsFoundUncertaintyBudget"
    )
    as_found_mu_extended: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMuExtended"
    )
    as_found_channel: Optional[StrictInt] = Field(default=None, alias="AsFoundChannel")
    as_found_measurement_type: Optional[StrictStr] = Field(
        default=None, alias="AsFoundMeasurementType"
    )
    as_found_updated_by: Optional[StrictStr] = Field(
        default=None, alias="AsFoundUpdatedBy"
    )
    as_found_updated_on: Optional[datetime] = Field(
        default=None, alias="AsFoundUpdatedOn"
    )
    as_left_abbreviated_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftAbbreviatedUOM"
    )
    as_left_unit_scale_factor: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftUnitScaleFactor"
    )
    as_found_specification_title: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSpecificationTitle"
    )
    as_found_specification_subtitle: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSpecificationSubtitle"
    )
    as_found_specification_group: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSpecificationGroup"
    )
    as_found_batch_type: Optional[StrictInt] = Field(
        default=None, alias="AsFoundBatchType"
    )
    as_found_batch_result: Optional[StrictInt] = Field(
        default=None, alias="AsFoundBatchResult"
    )
    as_found_is_by_channel: Optional[StrictBool] = Field(
        default=None, alias="AsFoundIsByChannel"
    )
    as_found_channel_count: Optional[StrictInt] = Field(
        default=None, alias="AsFoundChannelCount"
    )
    as_found_commenced_on: Optional[datetime] = Field(
        default=None, alias="AsFoundCommencedOn"
    )
    as_found_commenced_by: Optional[StrictStr] = Field(
        default=None, alias="AsFoundCommencedBy"
    )
    as_found_z_factor: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundZFactor"
    )
    as_found_air_buoyancy: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundAirBuoyancy"
    )
    as_found_evaporation_rate: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundEvaporationRate"
    )
    as_found_ambient_temperature: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundAmbientTemperature"
    )
    as_found_air_humidity: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundAirHumidity"
    )
    as_found_barometric_pressure: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundBarometricPressure"
    )
    as_found_altitude: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundAltitude"
    )
    as_found_wind_speed: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundWindSpeed"
    )
    as_found_solar_radiation: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundSolarRadiation"
    )
    as_found_light_intensity: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundLightIntensity"
    )
    as_found_noise_level: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundNoiseLevel"
    )
    as_found_ph_level: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundPhLevel"
    )
    as_found_water_conductivity: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundWaterConductivity"
    )
    as_found_water_temperature: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundWaterTemperature"
    )
    as_found_z_factor_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundZFactorUom"
    )
    as_found_air_buoyancy_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundAirBuoyancyUom"
    )
    as_found_evaporation_rate_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundEvaporationRateUom"
    )
    as_found_ambient_temperature_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundAmbientTemperatureUom"
    )
    as_found_air_humidity_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundAirHumidityUom"
    )
    as_found_barometric_pressure_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundBarometricPressureUom"
    )
    as_found_altitude_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundAltitudeUom"
    )
    as_found_wind_speed_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundWindSpeedUom"
    )
    as_found_solar_radiation_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSolarRadiationUom"
    )
    as_found_light_intensity_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundLightIntensityUom"
    )
    as_found_noise_level_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundNoiseLevelUom"
    )
    as_found_ph_level_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPhLevelUom"
    )
    as_found_water_conductivity_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundWaterConductivityUom"
    )
    as_found_water_temperature_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundWaterTemperatureUom"
    )
    as_found_abbreviated_uom: Optional[StrictStr] = Field(
        default=None, alias="AsFoundAbbreviatedUOM"
    )
    as_found_unit_scale_factor: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundUnitScaleFactor"
    )
    as_found_specification_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundSpecificationName"
    )
    as_found_parameter_name: Optional[StrictStr] = Field(
        default=None, alias="AsFoundParameterName"
    )
    as_found_display_order: Optional[StrictInt] = Field(
        default=None, alias="AsFoundDisplayOrder"
    )
    as_found_unit_of_measure: Optional[StrictStr] = Field(
        default=None, alias="AsFoundUnitOfMeasure"
    )
    as_found_display_format: Optional[StrictStr] = Field(
        default=None, alias="AsFoundDisplayFormat"
    )
    as_found_precision: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundPrecision"
    )
    as_found_precision_type: Optional[StrictStr] = Field(
        default=None, alias="AsFoundPrecisionType"
    )
    as_found_minimum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMinimum"
    )
    as_found_nominal: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundNominal"
    )
    as_found_expected_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundExpectedValue"
    )
    as_found_expected_value_raw: Optional[StrictStr] = Field(
        default=None, alias="AsFoundExpectedValueRaw"
    )
    as_found_test_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundTestValue"
    )
    as_found_base_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundBaseValue"
    )
    as_found_maxi_mum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundMaxiMum"
    )
    as_found_resolution: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsFoundResolution"
    )
    as_found_resolution_count: Optional[StrictInt] = Field(
        default=None, alias="AsFoundResolutionCount"
    )
    as_found_measurement_batch_id: Optional[StrictInt] = Field(
        default=None, alias="AsFoundMeasurementBatchId"
    )
    as_found_measurement_id: Optional[StrictInt] = Field(
        default=None, alias="AsFoundMeasurementId"
    )
    as_found_standard_id: Optional[StrictInt] = Field(
        default=None, alias="AsFoundStandardId"
    )
    as_found_tool_id: Optional[StrictInt] = Field(default=None, alias="AsFoundToolId")
    as_found_measurement_condition_id: Optional[StrictInt] = Field(
        default=None, alias="AsFoundMeasurementConditionId"
    )
    as_found_measurement_point_id: Optional[StrictInt] = Field(
        default=None, alias="AsFoundMeasurementPointId"
    )
    as_left_parameter_id: Optional[StrictInt] = Field(
        default=None, alias="AsLeftParameterId"
    )
    as_left_sd_header: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftSdHeader"
    )
    as_left_cv_header: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftCvHeader"
    )
    as_left_measurement_local_time: Optional[datetime] = Field(
        default=None, alias="AsLeftMeasurementLocalTime"
    )
    as_left_reading_entry_math: Optional[StrictStr] = Field(
        default=None, alias="AsLeftReadingEntryMath"
    )
    as_left_reading_entry_math_string: Optional[StrictStr] = Field(
        default=None, alias="AsLeftReadingEntryMathString"
    )
    as_left_value1: Optional[StrictStr] = Field(default=None, alias="AsLeftValue1")
    as_left_value2: Optional[StrictStr] = Field(default=None, alias="AsLeftValue2")
    as_left_value3: Optional[StrictStr] = Field(default=None, alias="AsLeftValue3")
    as_left_value4: Optional[StrictStr] = Field(default=None, alias="AsLeftValue4")
    as_left_value5: Optional[StrictStr] = Field(default=None, alias="AsLeftValue5")
    as_left_value6: Optional[StrictStr] = Field(default=None, alias="AsLeftValue6")
    as_left_value7: Optional[StrictStr] = Field(default=None, alias="AsLeftValue7")
    as_left_value8: Optional[StrictStr] = Field(default=None, alias="AsLeftValue8")
    as_left_value9: Optional[StrictStr] = Field(default=None, alias="AsLeftValue9")
    as_left_value10: Optional[StrictStr] = Field(default=None, alias="AsLeftValue10")
    as_left_value11: Optional[StrictStr] = Field(default=None, alias="AsLeftValue11")
    as_left_value12: Optional[StrictStr] = Field(default=None, alias="AsLeftValue12")
    as_left_value13: Optional[StrictStr] = Field(default=None, alias="AsLeftValue13")
    as_left_value14: Optional[StrictStr] = Field(default=None, alias="AsLeftValue14")
    as_left_value15: Optional[StrictStr] = Field(default=None, alias="AsLeftValue15")
    as_left_value16: Optional[StrictStr] = Field(default=None, alias="AsLeftValue16")
    as_left_value17: Optional[StrictStr] = Field(default=None, alias="AsLeftValue17")
    as_left_value18: Optional[StrictStr] = Field(default=None, alias="AsLeftValue18")
    as_left_value19: Optional[StrictStr] = Field(default=None, alias="AsLeftValue19")
    as_left_value20: Optional[StrictStr] = Field(default=None, alias="AsLeftValue20")
    as_left_value21: Optional[StrictStr] = Field(default=None, alias="AsLeftValue21")
    as_left_value22: Optional[StrictStr] = Field(default=None, alias="AsLeftValue22")
    as_left_value23: Optional[StrictStr] = Field(default=None, alias="AsLeftValue23")
    as_left_value24: Optional[StrictStr] = Field(default=None, alias="AsLeftValue24")
    as_left_value25: Optional[StrictStr] = Field(default=None, alias="AsLeftValue25")
    as_left_value26: Optional[StrictStr] = Field(default=None, alias="AsLeftValue26")
    as_left_value27: Optional[StrictStr] = Field(default=None, alias="AsLeftValue27")
    as_left_value28: Optional[StrictStr] = Field(default=None, alias="AsLeftValue28")
    as_left_value29: Optional[StrictStr] = Field(default=None, alias="AsLeftValue29")
    as_left_value30: Optional[StrictStr] = Field(default=None, alias="AsLeftValue30")
    as_left_value31: Optional[StrictStr] = Field(default=None, alias="AsLeftValue31")
    as_left_value32: Optional[StrictStr] = Field(default=None, alias="AsLeftValue32")
    as_left_value33: Optional[StrictStr] = Field(default=None, alias="AsLeftValue33")
    as_left_value34: Optional[StrictStr] = Field(default=None, alias="AsLeftValue34")
    as_left_value35: Optional[StrictStr] = Field(default=None, alias="AsLeftValue35")
    as_left_value36: Optional[StrictStr] = Field(default=None, alias="AsLeftValue36")
    as_left_value37: Optional[StrictStr] = Field(default=None, alias="AsLeftValue37")
    as_left_value38: Optional[StrictStr] = Field(default=None, alias="AsLeftValue38")
    as_left_value39: Optional[StrictStr] = Field(default=None, alias="AsLeftValue39")
    as_left_value40: Optional[StrictStr] = Field(default=None, alias="AsLeftValue40")
    as_left_raw_value1: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue1"
    )
    as_left_raw_value2: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue2"
    )
    as_left_raw_value3: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue3"
    )
    as_left_raw_value4: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue4"
    )
    as_left_raw_value5: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue5"
    )
    as_left_raw_value6: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue6"
    )
    as_left_raw_value7: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue7"
    )
    as_left_raw_value8: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue8"
    )
    as_left_raw_value9: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue9"
    )
    as_left_raw_value10: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue10"
    )
    as_left_raw_value11: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue11"
    )
    as_left_raw_value12: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue12"
    )
    as_left_raw_value13: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue13"
    )
    as_left_raw_value14: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue14"
    )
    as_left_raw_value15: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue15"
    )
    as_left_raw_value16: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue16"
    )
    as_left_raw_value17: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue17"
    )
    as_left_raw_value18: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue18"
    )
    as_left_raw_value19: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue19"
    )
    as_left_raw_value20: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue20"
    )
    as_left_raw_value21: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue21"
    )
    as_left_raw_value22: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue22"
    )
    as_left_raw_value23: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue23"
    )
    as_left_raw_value24: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue24"
    )
    as_left_raw_value25: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue25"
    )
    as_left_raw_value26: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue26"
    )
    as_left_raw_value27: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue27"
    )
    as_left_raw_value28: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue28"
    )
    as_left_raw_value29: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue29"
    )
    as_left_raw_value30: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue30"
    )
    as_left_raw_value31: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue31"
    )
    as_left_raw_value32: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue32"
    )
    as_left_raw_value33: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue33"
    )
    as_left_raw_value34: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue34"
    )
    as_left_raw_value35: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue35"
    )
    as_left_raw_value36: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue36"
    )
    as_left_raw_value37: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue37"
    )
    as_left_raw_value38: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue38"
    )
    as_left_raw_value39: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue39"
    )
    as_left_raw_value40: Optional[StrictStr] = Field(
        default=None, alias="AsLeftRawValue40"
    )
    as_left_value_subtitle1: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle1"
    )
    as_left_value_subtitle2: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle2"
    )
    as_left_value_subtitle3: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle3"
    )
    as_left_value_subtitle4: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle4"
    )
    as_left_value_subtitle5: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle5"
    )
    as_left_value_subtitle6: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle6"
    )
    as_left_value_subtitle7: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle7"
    )
    as_left_value_subtitle8: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle8"
    )
    as_left_value_subtitle9: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle9"
    )
    as_left_value_subtitle10: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle10"
    )
    as_left_value_subtitle11: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle11"
    )
    as_left_value_subtitle12: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle12"
    )
    as_left_value_subtitle13: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle13"
    )
    as_left_value_subtitle14: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle14"
    )
    as_left_value_subtitle15: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle15"
    )
    as_left_value_subtitle16: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle16"
    )
    as_left_value_subtitle17: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle17"
    )
    as_left_value_subtitle18: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle18"
    )
    as_left_value_subtitle19: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle19"
    )
    as_left_value_subtitle20: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle20"
    )
    as_left_value_subtitle21: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle21"
    )
    as_left_value_subtitle22: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle22"
    )
    as_left_value_subtitle23: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle23"
    )
    as_left_value_subtitle24: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle24"
    )
    as_left_value_subtitle25: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle25"
    )
    as_left_value_subtitle26: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle26"
    )
    as_left_value_subtitle27: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle27"
    )
    as_left_value_subtitle28: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle28"
    )
    as_left_value_subtitle29: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle29"
    )
    as_left_value_subtitle30: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle30"
    )
    as_left_value_subtitle31: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle31"
    )
    as_left_value_subtitle32: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle32"
    )
    as_left_value_subtitle33: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle33"
    )
    as_left_value_subtitle34: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle34"
    )
    as_left_value_subtitle35: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle35"
    )
    as_left_value_subtitle36: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle36"
    )
    as_left_value_subtitle37: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle37"
    )
    as_left_value_subtitle38: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle38"
    )
    as_left_value_subtitle39: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle39"
    )
    as_left_value_subtitle40: Optional[StrictStr] = Field(
        default=None, alias="AsLeftValueSubtitle40"
    )
    as_left_mean: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMean"
    )
    as_left_mean_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMeanRaw"
    )
    as_left_sd: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftSd"
    )
    as_left_sd_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftSdRaw"
    )
    as_left_cv: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftCv"
    )
    as_left_cv_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftCvRaw"
    )
    as_left_delta: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftDelta"
    )
    as_left_range: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftRange"
    )
    as_left_result: Optional[StrictInt] = Field(default=None, alias="AsLeftResult")
    as_left_range_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftRangeResult"
    )
    as_left_delta_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftDeltaResult"
    )
    as_left_min_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftMinResult"
    )
    as_left_max_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftMaxResult"
    )
    as_left_tar_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftTarResult"
    )
    as_left_tur_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftTurResult"
    )
    as_left_error_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftErrorResult"
    )
    as_left_sd_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftSdResult"
    )
    as_left_cv_result: Optional[StrictBool] = Field(
        default=None, alias="AsLeftCvResult"
    )
    as_left_custom_field_result: Optional[StrictInt] = Field(
        default=None, alias="AsLeftCustomFieldResult"
    )
    as_left_mu: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMu"
    )
    as_left_mu_raw: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMuRaw"
    )
    as_left_mu_effective_dof: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMUEffectiveDOF"
    )
    as_left_mu_coverage_factor: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMUCoverageFactor"
    )
    as_left_cmc: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftCmc"
    )
    as_left_cmc_comments: Optional[StrictStr] = Field(
        default=None, alias="AsLeftCmcComments"
    )
    as_left_calculated_uncertainty: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftCalculatedUncertainty"
    )
    as_left_lab_mu: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftLabMu"
    )
    as_left_uncertainty_budget: Optional[StrictStr] = Field(
        default=None, alias="AsLeftUncertaintyBudget"
    )
    as_left_mu_extended: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMuExtended"
    )
    as_left_channel: Optional[StrictInt] = Field(default=None, alias="AsLeftChannel")
    as_left_measurement_type: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMeasurementType"
    )
    as_left_updated_by: Optional[StrictStr] = Field(
        default=None, alias="AsLeftUpdatedBy"
    )
    as_left_updated_on: Optional[datetime] = Field(
        default=None, alias="AsLeftUpdatedOn"
    )
    as_left_specification_title: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSpecificationTitle"
    )
    as_left_specification_subtitle: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSpecificationSubtitle"
    )
    as_left_specification_group: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSpecificationGroup"
    )
    as_left_batch_type: Optional[StrictInt] = Field(
        default=None, alias="AsLeftBatchType"
    )
    as_left_batch_result: Optional[StrictInt] = Field(
        default=None, alias="AsLeftBatchResult"
    )
    as_left_is_by_channel: Optional[StrictBool] = Field(
        default=None, alias="AsLeftIsByChannel"
    )
    as_left_channel_count: Optional[StrictInt] = Field(
        default=None, alias="AsLeftChannelCount"
    )
    as_left_commenced_on: Optional[datetime] = Field(
        default=None, alias="AsLeftCommencedOn"
    )
    as_left_commenced_by: Optional[StrictStr] = Field(
        default=None, alias="AsLeftCommencedBy"
    )
    as_left_z_factor: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftZFactor"
    )
    as_left_air_buoyancy: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftAirBuoyancy"
    )
    as_left_evaporation_rate: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftEvaporationRate"
    )
    as_left_ambient_temperature: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftAmbientTemperature"
    )
    as_left_air_humidity: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftAirHumidity"
    )
    as_left_barometric_pressure: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftBarometricPressure"
    )
    as_left_altitude: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftAltitude"
    )
    as_left_wind_speed: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftWindSpeed"
    )
    as_left_solar_radiation: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftSolarRadiation"
    )
    as_left_light_intensity: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftLightIntensity"
    )
    as_left_noise_level: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftNoiseLevel"
    )
    as_left_ph_level: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftPhLevel"
    )
    as_left_water_conductivity: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftWaterConductivity"
    )
    as_left_water_temperature: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftWaterTemperature"
    )
    as_left_z_factor_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftZFactorUom"
    )
    as_left_air_buoyancy_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftAirBuoyancyUom"
    )
    as_left_evaporation_rate_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftEvaporationRateUom"
    )
    as_left_ambient_temperature_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftAmbientTemperatureUom"
    )
    as_left_air_humidity_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftAirHumidityUom"
    )
    as_left_barometric_pressure_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftBarometricPressureUom"
    )
    as_left_altitude_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftAltitudeUom"
    )
    as_left_wind_speed_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftWindSpeedUom"
    )
    as_left_solar_radiation_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSolarRadiationUom"
    )
    as_left_light_intensity_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftLightIntensityUom"
    )
    as_left_noise_level_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftNoiseLevelUom"
    )
    as_left_ph_level_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPhLevelUom"
    )
    as_left_water_conductivity_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftWaterConductivityUom"
    )
    as_left_water_temperature_uom: Optional[StrictStr] = Field(
        default=None, alias="AsLeftWaterTemperatureUom"
    )
    as_left_specification_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftSpecificationName"
    )
    as_left_parameter_name: Optional[StrictStr] = Field(
        default=None, alias="AsLeftParameterName"
    )
    as_left_display_order: Optional[StrictInt] = Field(
        default=None, alias="AsLeftDisplayOrder"
    )
    as_left_unit_of_measure: Optional[StrictStr] = Field(
        default=None, alias="AsLeftUnitOfMeasure"
    )
    as_left_display_format: Optional[StrictStr] = Field(
        default=None, alias="AsLeftDisplayFormat"
    )
    as_left_precision: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftPrecision"
    )
    as_left_precision_type: Optional[StrictStr] = Field(
        default=None, alias="AsLeftPrecisionType"
    )
    as_left_minimum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMinimum"
    )
    as_left_nominal: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftNominal"
    )
    as_left_expected_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftExpectedValue"
    )
    as_left_expected_value_raw: Optional[StrictStr] = Field(
        default=None, alias="AsLeftExpectedValueRaw"
    )
    as_left_test_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftTestValue"
    )
    as_left_base_value: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftBaseValue"
    )
    as_left_maxi_mum: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftMaxiMum"
    )
    as_left_resolution: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="AsLeftResolution"
    )
    as_left_resolution_count: Optional[StrictInt] = Field(
        default=None, alias="AsLeftResolutionCount"
    )
    as_left_measurement_not_taken_result: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMeasurementNotTakenResult"
    )
    as_left_hide_from_certificate: Optional[StrictBool] = Field(
        default=None, alias="AsLeftHideFromCertificate"
    )
    as_left_measurement_not_taken_reason: Optional[StrictStr] = Field(
        default=None, alias="AsLeftMeasurementNotTakenReason"
    )
    as_left_measurement_batch_id: Optional[StrictInt] = Field(
        default=None, alias="AsLeftMeasurementBatchId"
    )
    as_left_measurement_id: Optional[StrictInt] = Field(
        default=None, alias="AsLeftMeasurementId"
    )
    as_left_standard_id: Optional[StrictInt] = Field(
        default=None, alias="AsLeftStandardId"
    )
    as_left_tool_id: Optional[StrictInt] = Field(default=None, alias="AsLeftToolId")
    as_left_measurement_condition_id: Optional[StrictInt] = Field(
        default=None, alias="AsLeftMeasurementConditionId"
    )
    as_left_measurement_point_id: Optional[StrictInt] = Field(
        default=None, alias="AsLeftMeasurementPointId"
    )
    __properties: ClassVar[List[str]] = [
        "Barcode",
        "DisplayName",
        "DisplayPartNumber",
        "PartNumber",
        "VendorCompanyId",
        "ServiceOrderNumber",
        "CompletedByName",
        "CompletedOn",
        "IsLimited",
        "VendorTag",
        "Room",
        "SegmentName",
        "ScheduleName",
        "NextSegmentName",
        "CertificateNumber",
        "WorkStatus",
        "ServiceType",
        "ServiceLevel",
        "ServiceComments",
        "OrderItemNumber",
        "ServiceTotal",
        "RepairsTotal",
        "PartsTotal",
        "AssetTag",
        "AssetUser",
        "SerialNumber",
        "EquipmentId",
        "LegacyIdentifier",
        "AssetName",
        "AssetDescription",
        "ProductName",
        "ProductDescription",
        "AssetMaker",
        "AssetTagChange",
        "AssetUserChange",
        "SerialNumberChange",
        "ServiceDate",
        "NextServiceDate",
        "ServiceOrderItemId",
        "SiteName",
        "PoNumber",
        "ShippedDate",
        "TrackingNumber",
        "PaymentTerms",
        "ShippingMethod",
        "Location",
        "SiteAccessNotes",
        "AsLeftDecimalPlaces",
        "AsLeftMeasurementSetName",
        "AsLeftMeasurementSetId",
        "AsLeftAdjustmentThreshold",
        "AsLeftMeanExtended",
        "AsLeftSdExtended",
        "AsLeftRangeExtended",
        "AsLeftDeltaExtended",
        "AsLeftCvExtended",
        "AsLeftNominalExtended",
        "AsLeftMinMaxHeader",
        "AsLeftAccuracyClass",
        "AsLeftAccuracyClassMin",
        "AsLeftAccuracyClassMax",
        "AsLeftMinimumMeasuredValue",
        "AsLeftMaxiMumMeasuredValue",
        "AsLeftMinMaxValueExtended",
        "AsLeftToolRangeName",
        "AsLeftToolRangeUncertainty",
        "AsLeftPrimaryToolLastServiceDate",
        "AsLeftPrimaryToolNextServiceDate",
        "AsLeftPrimaryToolCalibratedBy",
        "AsLeftPrimaryToolToolName",
        "AsLeftPrimaryToolToolDescription",
        "AsLeftPrimaryToolToolTypeName",
        "AsLeftPrimaryToolManufacturer",
        "AsLeftPrimaryToolManufacturerPartNumber",
        "AsLeftPrimaryToolSerialNumber",
        "AsFoundMeasurementSetName",
        "AsFoundMeasurementSetId",
        "AsFoundAdjustmentThreshold",
        "AsFoundDecimalPlaces",
        "AsFoundMeanExtended",
        "AsFoundSdExtended",
        "AsFoundRangeExtended",
        "AsFoundDeltaExtended",
        "AsFoundCvExtended",
        "AsFoundNominalExtended",
        "AsFoundMinMaxHeader",
        "AsFoundAccuracyClass",
        "AsFoundAccuracyClassMin",
        "AsFoundAccuracyClassMax",
        "AsFoundMinimumMeasuredValue",
        "AsFoundMaxiMumMeasuredValue",
        "AsFoundMinMaxValueExtended",
        "AsFoundToolRangeName",
        "AsFoundToolRangeUncertainty",
        "AsFoundPrimaryToolLastServiceDate",
        "AsFoundPrimaryToolNextServiceDate",
        "AsFoundPrimaryToolCalibratedBy",
        "AsFoundPrimaryToolToolName",
        "AsFoundPrimaryToolToolDescription",
        "AsFoundPrimaryToolToolTypeName",
        "AsFoundPrimaryToolManufacturer",
        "AsFoundPrimaryToolManufacturerPartNumber",
        "AsFoundPrimaryToolSerialNumber",
        "AsLeftSecondaryToolLastServiceDate",
        "AsLeftSecondaryToolNextServiceDate",
        "AsLeftSecondaryToolCalibratedBy",
        "AsLeftSecondaryToolToolName",
        "AsLeftSecondaryToolToolDescription",
        "AsLeftSecondaryToolToolTypeName",
        "AsLeftSecondaryToolManufacturer",
        "AsLeftSecondaryToolManufacturerPartNumber",
        "AsLeftSecondaryToolSerialNumber",
        "AsFoundSecondaryToolLastServiceDate",
        "AsFoundSecondaryToolNextServiceDate",
        "AsFoundSecondaryToolCalibratedBy",
        "AsFoundSecondaryToolToolName",
        "AsFoundSecondaryToolToolDescription",
        "AsFoundSecondaryToolToolTypeName",
        "AsFoundSecondaryToolManufacturer",
        "AsFoundSecondaryToolManufacturerPartNumber",
        "AsFoundSecondaryToolSerialNumber",
        "AsFoundMeasurementNotTakenResult",
        "AsFoundHideFromCertificate",
        "AsFoundMeasurementNotTakenReason",
        "AsLeftValues",
        "AsLeftIsAccredited",
        "AsLeftIsRangeAccredited",
        "AsFoundValues",
        "AsFoundIsAccredited",
        "AsFoundIsRangeAccredited",
        "AsFoundParameterId",
        "AsFoundSdHeader",
        "AsFoundCvHeader",
        "AsFoundMeasurementLocalTime",
        "AsFoundTur",
        "AsFoundTurRaw",
        "AsLeftTur",
        "AsLeftTurRaw",
        "AsFoundTar",
        "AsFoundTarRaw",
        "AsLeftTar",
        "AsLeftTarRaw",
        "AsFoundGuardBand",
        "AsLeftGuardBand",
        "AsFoundGuardBandLogic",
        "AsLeftGuardBandLogic",
        "AsFoundError",
        "AsFoundErrorExtended",
        "AsLeftError",
        "AsLeftErrorExtended",
        "AsFoundPercentOfTolerance",
        "AsFoundPercentOfToleranceExtended",
        "AsLeftPercentOfTolerance",
        "AsLeftPercentOfToleranceExtended",
        "AsFoundToleranceMaximum",
        "AsFoundToleranceMinimum",
        "AsFoundToleranceType",
        "AsFoundToleranceMode",
        "AsFoundToleranceString",
        "AsLeftToleranceMaximum",
        "AsLeftToleranceMinimum",
        "AsLeftToleranceType",
        "AsLeftToleranceMode",
        "AsLeftToleranceString",
        "AsFoundMaxHysteresis",
        "AsFoundRun",
        "AsFoundDirection",
        "AsFoundHysteresis",
        "AsLeftMaxHysteresis",
        "AsLeftRun",
        "AsLeftDirection",
        "AsLeftHysteresis",
        "AsFoundReadingEntryMath",
        "AsFoundReadingEntryMathString",
        "AsFoundValue1",
        "AsFoundValue2",
        "AsFoundValue3",
        "AsFoundValue4",
        "AsFoundValue5",
        "AsFoundValue6",
        "AsFoundValue7",
        "AsFoundValue8",
        "AsFoundValue9",
        "AsFoundValue10",
        "AsFoundValue11",
        "AsFoundValue12",
        "AsFoundValue13",
        "AsFoundValue14",
        "AsFoundValue15",
        "AsFoundValue16",
        "AsFoundValue17",
        "AsFoundValue18",
        "AsFoundValue19",
        "AsFoundValue20",
        "AsFoundValue21",
        "AsFoundValue22",
        "AsFoundValue23",
        "AsFoundValue24",
        "AsFoundValue25",
        "AsFoundValue26",
        "AsFoundValue27",
        "AsFoundValue28",
        "AsFoundValue29",
        "AsFoundValue30",
        "AsFoundValue31",
        "AsFoundValue32",
        "AsFoundValue33",
        "AsFoundValue34",
        "AsFoundValue35",
        "AsFoundValue36",
        "AsFoundValue37",
        "AsFoundValue38",
        "AsFoundValue39",
        "AsFoundValue40",
        "AsFoundRawValue1",
        "AsFoundRawValue2",
        "AsFoundRawValue3",
        "AsFoundRawValue4",
        "AsFoundRawValue5",
        "AsFoundRawValue6",
        "AsFoundRawValue7",
        "AsFoundRawValue8",
        "AsFoundRawValue9",
        "AsFoundRawValue10",
        "AsFoundRawValue11",
        "AsFoundRawValue12",
        "AsFoundRawValue13",
        "AsFoundRawValue14",
        "AsFoundRawValue15",
        "AsFoundRawValue16",
        "AsFoundRawValue17",
        "AsFoundRawValue18",
        "AsFoundRawValue19",
        "AsFoundRawValue20",
        "AsFoundRawValue21",
        "AsFoundRawValue22",
        "AsFoundRawValue23",
        "AsFoundRawValue24",
        "AsFoundRawValue25",
        "AsFoundRawValue26",
        "AsFoundRawValue27",
        "AsFoundRawValue28",
        "AsFoundRawValue29",
        "AsFoundRawValue30",
        "AsFoundRawValue31",
        "AsFoundRawValue32",
        "AsFoundRawValue33",
        "AsFoundRawValue34",
        "AsFoundRawValue35",
        "AsFoundRawValue36",
        "AsFoundRawValue37",
        "AsFoundRawValue38",
        "AsFoundRawValue39",
        "AsFoundRawValue40",
        "AsFoundValueSubtitle1",
        "AsFoundValueSubtitle2",
        "AsFoundValueSubtitle3",
        "AsFoundValueSubtitle4",
        "AsFoundValueSubtitle5",
        "AsFoundValueSubtitle6",
        "AsFoundValueSubtitle7",
        "AsFoundValueSubtitle8",
        "AsFoundValueSubtitle9",
        "AsFoundValueSubtitle10",
        "AsFoundValueSubtitle11",
        "AsFoundValueSubtitle12",
        "AsFoundValueSubtitle13",
        "AsFoundValueSubtitle14",
        "AsFoundValueSubtitle15",
        "AsFoundValueSubtitle16",
        "AsFoundValueSubtitle17",
        "AsFoundValueSubtitle18",
        "AsFoundValueSubtitle19",
        "AsFoundValueSubtitle20",
        "AsFoundValueSubtitle21",
        "AsFoundValueSubtitle22",
        "AsFoundValueSubtitle23",
        "AsFoundValueSubtitle24",
        "AsFoundValueSubtitle25",
        "AsFoundValueSubtitle26",
        "AsFoundValueSubtitle27",
        "AsFoundValueSubtitle28",
        "AsFoundValueSubtitle29",
        "AsFoundValueSubtitle30",
        "AsFoundValueSubtitle31",
        "AsFoundValueSubtitle32",
        "AsFoundValueSubtitle33",
        "AsFoundValueSubtitle34",
        "AsFoundValueSubtitle35",
        "AsFoundValueSubtitle36",
        "AsFoundValueSubtitle37",
        "AsFoundValueSubtitle38",
        "AsFoundValueSubtitle39",
        "AsFoundValueSubtitle40",
        "AsFoundMean",
        "AsFoundMeanRaw",
        "AsFoundSd",
        "AsFoundSdRaw",
        "AsFoundDelta",
        "AsFoundRange",
        "AsFoundCv",
        "AsFoundCvRaw",
        "AsFoundResult",
        "AsFoundRangeResult",
        "AsFoundDeltaResult",
        "AsFoundMinResult",
        "AsFoundMaxResult",
        "AsFoundTarResult",
        "AsFoundTurResult",
        "AsFoundErrorResult",
        "AsFoundSdResult",
        "AsFoundCvResult",
        "AsFoundCustomFieldResult",
        "AsFoundMu",
        "AsFoundMuRaw",
        "AsFoundMuEffectiveDOF",
        "AsFoundMUCoverageFactor",
        "AsFoundCmc",
        "AsFoundCmcComments",
        "AsFoundCalculatedUncertainty",
        "AsFoundLabMu",
        "AsFoundUncertaintyBudget",
        "AsFoundMuExtended",
        "AsFoundChannel",
        "AsFoundMeasurementType",
        "AsFoundUpdatedBy",
        "AsFoundUpdatedOn",
        "AsLeftAbbreviatedUOM",
        "AsLeftUnitScaleFactor",
        "AsFoundSpecificationTitle",
        "AsFoundSpecificationSubtitle",
        "AsFoundSpecificationGroup",
        "AsFoundBatchType",
        "AsFoundBatchResult",
        "AsFoundIsByChannel",
        "AsFoundChannelCount",
        "AsFoundCommencedOn",
        "AsFoundCommencedBy",
        "AsFoundZFactor",
        "AsFoundAirBuoyancy",
        "AsFoundEvaporationRate",
        "AsFoundAmbientTemperature",
        "AsFoundAirHumidity",
        "AsFoundBarometricPressure",
        "AsFoundAltitude",
        "AsFoundWindSpeed",
        "AsFoundSolarRadiation",
        "AsFoundLightIntensity",
        "AsFoundNoiseLevel",
        "AsFoundPhLevel",
        "AsFoundWaterConductivity",
        "AsFoundWaterTemperature",
        "AsFoundZFactorUom",
        "AsFoundAirBuoyancyUom",
        "AsFoundEvaporationRateUom",
        "AsFoundAmbientTemperatureUom",
        "AsFoundAirHumidityUom",
        "AsFoundBarometricPressureUom",
        "AsFoundAltitudeUom",
        "AsFoundWindSpeedUom",
        "AsFoundSolarRadiationUom",
        "AsFoundLightIntensityUom",
        "AsFoundNoiseLevelUom",
        "AsFoundPhLevelUom",
        "AsFoundWaterConductivityUom",
        "AsFoundWaterTemperatureUom",
        "AsFoundAbbreviatedUOM",
        "AsFoundUnitScaleFactor",
        "AsFoundSpecificationName",
        "AsFoundParameterName",
        "AsFoundDisplayOrder",
        "AsFoundUnitOfMeasure",
        "AsFoundDisplayFormat",
        "AsFoundPrecision",
        "AsFoundPrecisionType",
        "AsFoundMinimum",
        "AsFoundNominal",
        "AsFoundExpectedValue",
        "AsFoundExpectedValueRaw",
        "AsFoundTestValue",
        "AsFoundBaseValue",
        "AsFoundMaxiMum",
        "AsFoundResolution",
        "AsFoundResolutionCount",
        "AsFoundMeasurementBatchId",
        "AsFoundMeasurementId",
        "AsFoundStandardId",
        "AsFoundToolId",
        "AsFoundMeasurementConditionId",
        "AsFoundMeasurementPointId",
        "AsLeftParameterId",
        "AsLeftSdHeader",
        "AsLeftCvHeader",
        "AsLeftMeasurementLocalTime",
        "AsLeftReadingEntryMath",
        "AsLeftReadingEntryMathString",
        "AsLeftValue1",
        "AsLeftValue2",
        "AsLeftValue3",
        "AsLeftValue4",
        "AsLeftValue5",
        "AsLeftValue6",
        "AsLeftValue7",
        "AsLeftValue8",
        "AsLeftValue9",
        "AsLeftValue10",
        "AsLeftValue11",
        "AsLeftValue12",
        "AsLeftValue13",
        "AsLeftValue14",
        "AsLeftValue15",
        "AsLeftValue16",
        "AsLeftValue17",
        "AsLeftValue18",
        "AsLeftValue19",
        "AsLeftValue20",
        "AsLeftValue21",
        "AsLeftValue22",
        "AsLeftValue23",
        "AsLeftValue24",
        "AsLeftValue25",
        "AsLeftValue26",
        "AsLeftValue27",
        "AsLeftValue28",
        "AsLeftValue29",
        "AsLeftValue30",
        "AsLeftValue31",
        "AsLeftValue32",
        "AsLeftValue33",
        "AsLeftValue34",
        "AsLeftValue35",
        "AsLeftValue36",
        "AsLeftValue37",
        "AsLeftValue38",
        "AsLeftValue39",
        "AsLeftValue40",
        "AsLeftRawValue1",
        "AsLeftRawValue2",
        "AsLeftRawValue3",
        "AsLeftRawValue4",
        "AsLeftRawValue5",
        "AsLeftRawValue6",
        "AsLeftRawValue7",
        "AsLeftRawValue8",
        "AsLeftRawValue9",
        "AsLeftRawValue10",
        "AsLeftRawValue11",
        "AsLeftRawValue12",
        "AsLeftRawValue13",
        "AsLeftRawValue14",
        "AsLeftRawValue15",
        "AsLeftRawValue16",
        "AsLeftRawValue17",
        "AsLeftRawValue18",
        "AsLeftRawValue19",
        "AsLeftRawValue20",
        "AsLeftRawValue21",
        "AsLeftRawValue22",
        "AsLeftRawValue23",
        "AsLeftRawValue24",
        "AsLeftRawValue25",
        "AsLeftRawValue26",
        "AsLeftRawValue27",
        "AsLeftRawValue28",
        "AsLeftRawValue29",
        "AsLeftRawValue30",
        "AsLeftRawValue31",
        "AsLeftRawValue32",
        "AsLeftRawValue33",
        "AsLeftRawValue34",
        "AsLeftRawValue35",
        "AsLeftRawValue36",
        "AsLeftRawValue37",
        "AsLeftRawValue38",
        "AsLeftRawValue39",
        "AsLeftRawValue40",
        "AsLeftValueSubtitle1",
        "AsLeftValueSubtitle2",
        "AsLeftValueSubtitle3",
        "AsLeftValueSubtitle4",
        "AsLeftValueSubtitle5",
        "AsLeftValueSubtitle6",
        "AsLeftValueSubtitle7",
        "AsLeftValueSubtitle8",
        "AsLeftValueSubtitle9",
        "AsLeftValueSubtitle10",
        "AsLeftValueSubtitle11",
        "AsLeftValueSubtitle12",
        "AsLeftValueSubtitle13",
        "AsLeftValueSubtitle14",
        "AsLeftValueSubtitle15",
        "AsLeftValueSubtitle16",
        "AsLeftValueSubtitle17",
        "AsLeftValueSubtitle18",
        "AsLeftValueSubtitle19",
        "AsLeftValueSubtitle20",
        "AsLeftValueSubtitle21",
        "AsLeftValueSubtitle22",
        "AsLeftValueSubtitle23",
        "AsLeftValueSubtitle24",
        "AsLeftValueSubtitle25",
        "AsLeftValueSubtitle26",
        "AsLeftValueSubtitle27",
        "AsLeftValueSubtitle28",
        "AsLeftValueSubtitle29",
        "AsLeftValueSubtitle30",
        "AsLeftValueSubtitle31",
        "AsLeftValueSubtitle32",
        "AsLeftValueSubtitle33",
        "AsLeftValueSubtitle34",
        "AsLeftValueSubtitle35",
        "AsLeftValueSubtitle36",
        "AsLeftValueSubtitle37",
        "AsLeftValueSubtitle38",
        "AsLeftValueSubtitle39",
        "AsLeftValueSubtitle40",
        "AsLeftMean",
        "AsLeftMeanRaw",
        "AsLeftSd",
        "AsLeftSdRaw",
        "AsLeftCv",
        "AsLeftCvRaw",
        "AsLeftDelta",
        "AsLeftRange",
        "AsLeftResult",
        "AsLeftRangeResult",
        "AsLeftDeltaResult",
        "AsLeftMinResult",
        "AsLeftMaxResult",
        "AsLeftTarResult",
        "AsLeftTurResult",
        "AsLeftErrorResult",
        "AsLeftSdResult",
        "AsLeftCvResult",
        "AsLeftCustomFieldResult",
        "AsLeftMu",
        "AsLeftMuRaw",
        "AsLeftMUEffectiveDOF",
        "AsLeftMUCoverageFactor",
        "AsLeftCmc",
        "AsLeftCmcComments",
        "AsLeftCalculatedUncertainty",
        "AsLeftLabMu",
        "AsLeftUncertaintyBudget",
        "AsLeftMuExtended",
        "AsLeftChannel",
        "AsLeftMeasurementType",
        "AsLeftUpdatedBy",
        "AsLeftUpdatedOn",
        "AsLeftSpecificationTitle",
        "AsLeftSpecificationSubtitle",
        "AsLeftSpecificationGroup",
        "AsLeftBatchType",
        "AsLeftBatchResult",
        "AsLeftIsByChannel",
        "AsLeftChannelCount",
        "AsLeftCommencedOn",
        "AsLeftCommencedBy",
        "AsLeftZFactor",
        "AsLeftAirBuoyancy",
        "AsLeftEvaporationRate",
        "AsLeftAmbientTemperature",
        "AsLeftAirHumidity",
        "AsLeftBarometricPressure",
        "AsLeftAltitude",
        "AsLeftWindSpeed",
        "AsLeftSolarRadiation",
        "AsLeftLightIntensity",
        "AsLeftNoiseLevel",
        "AsLeftPhLevel",
        "AsLeftWaterConductivity",
        "AsLeftWaterTemperature",
        "AsLeftZFactorUom",
        "AsLeftAirBuoyancyUom",
        "AsLeftEvaporationRateUom",
        "AsLeftAmbientTemperatureUom",
        "AsLeftAirHumidityUom",
        "AsLeftBarometricPressureUom",
        "AsLeftAltitudeUom",
        "AsLeftWindSpeedUom",
        "AsLeftSolarRadiationUom",
        "AsLeftLightIntensityUom",
        "AsLeftNoiseLevelUom",
        "AsLeftPhLevelUom",
        "AsLeftWaterConductivityUom",
        "AsLeftWaterTemperatureUom",
        "AsLeftSpecificationName",
        "AsLeftParameterName",
        "AsLeftDisplayOrder",
        "AsLeftUnitOfMeasure",
        "AsLeftDisplayFormat",
        "AsLeftPrecision",
        "AsLeftPrecisionType",
        "AsLeftMinimum",
        "AsLeftNominal",
        "AsLeftExpectedValue",
        "AsLeftExpectedValueRaw",
        "AsLeftTestValue",
        "AsLeftBaseValue",
        "AsLeftMaxiMum",
        "AsLeftResolution",
        "AsLeftResolutionCount",
        "AsLeftMeasurementNotTakenResult",
        "AsLeftHideFromCertificate",
        "AsLeftMeasurementNotTakenReason",
        "AsLeftMeasurementBatchId",
        "AsLeftMeasurementId",
        "AsLeftStandardId",
        "AsLeftToolId",
        "AsLeftMeasurementConditionId",
        "AsLeftMeasurementPointId",
    ]

    @field_validator("as_found_measurement_not_taken_result")
    def as_found_measurement_not_taken_result_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Pass", "Fail", "Limited"]):
            raise ValueError("must be one of enum values ('Pass', 'Fail', 'Limited')")
        return value

    @field_validator("as_found_guard_band_logic")
    def as_found_guard_band_logic_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Ncslz5403", "Uncertainty", "Tur41", "Rds"]):
            raise ValueError(
                "must be one of enum values ('Ncslz5403', 'Uncertainty', 'Tur41', 'Rds')"
            )
        return value

    @field_validator("as_left_guard_band_logic")
    def as_left_guard_band_logic_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Ncslz5403", "Uncertainty", "Tur41", "Rds"]):
            raise ValueError(
                "must be one of enum values ('Ncslz5403', 'Uncertainty', 'Tur41', 'Rds')"
            )
        return value

    @field_validator("as_found_reading_entry_math")
    def as_found_reading_entry_math_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(
            [
                "Multiplication",
                "Division",
                "Addition",
                "Subtraction",
                "ReverseSubtraction",
                "Difference",
                "Minimum",
                "Maximum",
                "Average",
            ]
        ):
            raise ValueError(
                "must be one of enum values ('Multiplication', 'Division', 'Addition', 'Subtraction', 'ReverseSubtraction', 'Difference', 'Minimum', 'Maximum', 'Average')"
            )
        return value

    @field_validator("as_found_measurement_type")
    def as_found_measurement_type_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Data", "Cumulative"]):
            raise ValueError("must be one of enum values ('Data', 'Cumulative')")
        return value

    @field_validator("as_found_precision_type")
    def as_found_precision_type_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Percentage", "UnitOfMeasure", "Readability"]):
            raise ValueError(
                "must be one of enum values ('Percentage', 'UnitOfMeasure', 'Readability')"
            )
        return value

    @field_validator("as_left_reading_entry_math")
    def as_left_reading_entry_math_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(
            [
                "Multiplication",
                "Division",
                "Addition",
                "Subtraction",
                "ReverseSubtraction",
                "Difference",
                "Minimum",
                "Maximum",
                "Average",
            ]
        ):
            raise ValueError(
                "must be one of enum values ('Multiplication', 'Division', 'Addition', 'Subtraction', 'ReverseSubtraction', 'Difference', 'Minimum', 'Maximum', 'Average')"
            )
        return value

    @field_validator("as_left_measurement_type")
    def as_left_measurement_type_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Data", "Cumulative"]):
            raise ValueError("must be one of enum values ('Data', 'Cumulative')")
        return value

    @field_validator("as_left_precision_type")
    def as_left_precision_type_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Percentage", "UnitOfMeasure", "Readability"]):
            raise ValueError(
                "must be one of enum values ('Percentage', 'UnitOfMeasure', 'Readability')"
            )
        return value

    @field_validator("as_left_measurement_not_taken_result")
    def as_left_measurement_not_taken_result_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(["Pass", "Fail", "Limited"]):
            raise ValueError("must be one of enum values ('Pass', 'Fail', 'Limited')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of QualerApiModelsReportDatasetsToMeasurementAllResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of QualerApiModelsReportDatasetsToMeasurementAllResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate(
            {
                "Barcode": obj.get("Barcode"),
                "DisplayName": obj.get("DisplayName"),
                "DisplayPartNumber": obj.get("DisplayPartNumber"),
                "PartNumber": obj.get("PartNumber"),
                "VendorCompanyId": obj.get("VendorCompanyId"),
                "ServiceOrderNumber": obj.get("ServiceOrderNumber"),
                "CompletedByName": obj.get("CompletedByName"),
                "CompletedOn": obj.get("CompletedOn"),
                "IsLimited": obj.get("IsLimited"),
                "VendorTag": obj.get("VendorTag"),
                "Room": obj.get("Room"),
                "SegmentName": obj.get("SegmentName"),
                "ScheduleName": obj.get("ScheduleName"),
                "NextSegmentName": obj.get("NextSegmentName"),
                "CertificateNumber": obj.get("CertificateNumber"),
                "WorkStatus": obj.get("WorkStatus"),
                "ServiceType": obj.get("ServiceType"),
                "ServiceLevel": obj.get("ServiceLevel"),
                "ServiceComments": obj.get("ServiceComments"),
                "OrderItemNumber": obj.get("OrderItemNumber"),
                "ServiceTotal": obj.get("ServiceTotal"),
                "RepairsTotal": obj.get("RepairsTotal"),
                "PartsTotal": obj.get("PartsTotal"),
                "AssetTag": obj.get("AssetTag"),
                "AssetUser": obj.get("AssetUser"),
                "SerialNumber": obj.get("SerialNumber"),
                "EquipmentId": obj.get("EquipmentId"),
                "LegacyIdentifier": obj.get("LegacyIdentifier"),
                "AssetName": obj.get("AssetName"),
                "AssetDescription": obj.get("AssetDescription"),
                "ProductName": obj.get("ProductName"),
                "ProductDescription": obj.get("ProductDescription"),
                "AssetMaker": obj.get("AssetMaker"),
                "AssetTagChange": obj.get("AssetTagChange"),
                "AssetUserChange": obj.get("AssetUserChange"),
                "SerialNumberChange": obj.get("SerialNumberChange"),
                "ServiceDate": obj.get("ServiceDate"),
                "NextServiceDate": obj.get("NextServiceDate"),
                "ServiceOrderItemId": obj.get("ServiceOrderItemId"),
                "SiteName": obj.get("SiteName"),
                "PoNumber": obj.get("PoNumber"),
                "ShippedDate": obj.get("ShippedDate"),
                "TrackingNumber": obj.get("TrackingNumber"),
                "PaymentTerms": obj.get("PaymentTerms"),
                "ShippingMethod": obj.get("ShippingMethod"),
                "Location": obj.get("Location"),
                "SiteAccessNotes": obj.get("SiteAccessNotes"),
                "AsLeftDecimalPlaces": obj.get("AsLeftDecimalPlaces"),
                "AsLeftMeasurementSetName": obj.get("AsLeftMeasurementSetName"),
                "AsLeftMeasurementSetId": obj.get("AsLeftMeasurementSetId"),
                "AsLeftAdjustmentThreshold": obj.get("AsLeftAdjustmentThreshold"),
                "AsLeftMeanExtended": obj.get("AsLeftMeanExtended"),
                "AsLeftSdExtended": obj.get("AsLeftSdExtended"),
                "AsLeftRangeExtended": obj.get("AsLeftRangeExtended"),
                "AsLeftDeltaExtended": obj.get("AsLeftDeltaExtended"),
                "AsLeftCvExtended": obj.get("AsLeftCvExtended"),
                "AsLeftNominalExtended": obj.get("AsLeftNominalExtended"),
                "AsLeftMinMaxHeader": obj.get("AsLeftMinMaxHeader"),
                "AsLeftAccuracyClass": obj.get("AsLeftAccuracyClass"),
                "AsLeftAccuracyClassMin": obj.get("AsLeftAccuracyClassMin"),
                "AsLeftAccuracyClassMax": obj.get("AsLeftAccuracyClassMax"),
                "AsLeftMinimumMeasuredValue": obj.get("AsLeftMinimumMeasuredValue"),
                "AsLeftMaxiMumMeasuredValue": obj.get("AsLeftMaxiMumMeasuredValue"),
                "AsLeftMinMaxValueExtended": obj.get("AsLeftMinMaxValueExtended"),
                "AsLeftToolRangeName": obj.get("AsLeftToolRangeName"),
                "AsLeftToolRangeUncertainty": obj.get("AsLeftToolRangeUncertainty"),
                "AsLeftPrimaryToolLastServiceDate": obj.get(
                    "AsLeftPrimaryToolLastServiceDate"
                ),
                "AsLeftPrimaryToolNextServiceDate": obj.get(
                    "AsLeftPrimaryToolNextServiceDate"
                ),
                "AsLeftPrimaryToolCalibratedBy": obj.get(
                    "AsLeftPrimaryToolCalibratedBy"
                ),
                "AsLeftPrimaryToolToolName": obj.get("AsLeftPrimaryToolToolName"),
                "AsLeftPrimaryToolToolDescription": obj.get(
                    "AsLeftPrimaryToolToolDescription"
                ),
                "AsLeftPrimaryToolToolTypeName": obj.get(
                    "AsLeftPrimaryToolToolTypeName"
                ),
                "AsLeftPrimaryToolManufacturer": obj.get(
                    "AsLeftPrimaryToolManufacturer"
                ),
                "AsLeftPrimaryToolManufacturerPartNumber": obj.get(
                    "AsLeftPrimaryToolManufacturerPartNumber"
                ),
                "AsLeftPrimaryToolSerialNumber": obj.get(
                    "AsLeftPrimaryToolSerialNumber"
                ),
                "AsFoundMeasurementSetName": obj.get("AsFoundMeasurementSetName"),
                "AsFoundMeasurementSetId": obj.get("AsFoundMeasurementSetId"),
                "AsFoundAdjustmentThreshold": obj.get("AsFoundAdjustmentThreshold"),
                "AsFoundDecimalPlaces": obj.get("AsFoundDecimalPlaces"),
                "AsFoundMeanExtended": obj.get("AsFoundMeanExtended"),
                "AsFoundSdExtended": obj.get("AsFoundSdExtended"),
                "AsFoundRangeExtended": obj.get("AsFoundRangeExtended"),
                "AsFoundDeltaExtended": obj.get("AsFoundDeltaExtended"),
                "AsFoundCvExtended": obj.get("AsFoundCvExtended"),
                "AsFoundNominalExtended": obj.get("AsFoundNominalExtended"),
                "AsFoundMinMaxHeader": obj.get("AsFoundMinMaxHeader"),
                "AsFoundAccuracyClass": obj.get("AsFoundAccuracyClass"),
                "AsFoundAccuracyClassMin": obj.get("AsFoundAccuracyClassMin"),
                "AsFoundAccuracyClassMax": obj.get("AsFoundAccuracyClassMax"),
                "AsFoundMinimumMeasuredValue": obj.get("AsFoundMinimumMeasuredValue"),
                "AsFoundMaxiMumMeasuredValue": obj.get("AsFoundMaxiMumMeasuredValue"),
                "AsFoundMinMaxValueExtended": obj.get("AsFoundMinMaxValueExtended"),
                "AsFoundToolRangeName": obj.get("AsFoundToolRangeName"),
                "AsFoundToolRangeUncertainty": obj.get("AsFoundToolRangeUncertainty"),
                "AsFoundPrimaryToolLastServiceDate": obj.get(
                    "AsFoundPrimaryToolLastServiceDate"
                ),
                "AsFoundPrimaryToolNextServiceDate": obj.get(
                    "AsFoundPrimaryToolNextServiceDate"
                ),
                "AsFoundPrimaryToolCalibratedBy": obj.get(
                    "AsFoundPrimaryToolCalibratedBy"
                ),
                "AsFoundPrimaryToolToolName": obj.get("AsFoundPrimaryToolToolName"),
                "AsFoundPrimaryToolToolDescription": obj.get(
                    "AsFoundPrimaryToolToolDescription"
                ),
                "AsFoundPrimaryToolToolTypeName": obj.get(
                    "AsFoundPrimaryToolToolTypeName"
                ),
                "AsFoundPrimaryToolManufacturer": obj.get(
                    "AsFoundPrimaryToolManufacturer"
                ),
                "AsFoundPrimaryToolManufacturerPartNumber": obj.get(
                    "AsFoundPrimaryToolManufacturerPartNumber"
                ),
                "AsFoundPrimaryToolSerialNumber": obj.get(
                    "AsFoundPrimaryToolSerialNumber"
                ),
                "AsLeftSecondaryToolLastServiceDate": obj.get(
                    "AsLeftSecondaryToolLastServiceDate"
                ),
                "AsLeftSecondaryToolNextServiceDate": obj.get(
                    "AsLeftSecondaryToolNextServiceDate"
                ),
                "AsLeftSecondaryToolCalibratedBy": obj.get(
                    "AsLeftSecondaryToolCalibratedBy"
                ),
                "AsLeftSecondaryToolToolName": obj.get("AsLeftSecondaryToolToolName"),
                "AsLeftSecondaryToolToolDescription": obj.get(
                    "AsLeftSecondaryToolToolDescription"
                ),
                "AsLeftSecondaryToolToolTypeName": obj.get(
                    "AsLeftSecondaryToolToolTypeName"
                ),
                "AsLeftSecondaryToolManufacturer": obj.get(
                    "AsLeftSecondaryToolManufacturer"
                ),
                "AsLeftSecondaryToolManufacturerPartNumber": obj.get(
                    "AsLeftSecondaryToolManufacturerPartNumber"
                ),
                "AsLeftSecondaryToolSerialNumber": obj.get(
                    "AsLeftSecondaryToolSerialNumber"
                ),
                "AsFoundSecondaryToolLastServiceDate": obj.get(
                    "AsFoundSecondaryToolLastServiceDate"
                ),
                "AsFoundSecondaryToolNextServiceDate": obj.get(
                    "AsFoundSecondaryToolNextServiceDate"
                ),
                "AsFoundSecondaryToolCalibratedBy": obj.get(
                    "AsFoundSecondaryToolCalibratedBy"
                ),
                "AsFoundSecondaryToolToolName": obj.get("AsFoundSecondaryToolToolName"),
                "AsFoundSecondaryToolToolDescription": obj.get(
                    "AsFoundSecondaryToolToolDescription"
                ),
                "AsFoundSecondaryToolToolTypeName": obj.get(
                    "AsFoundSecondaryToolToolTypeName"
                ),
                "AsFoundSecondaryToolManufacturer": obj.get(
                    "AsFoundSecondaryToolManufacturer"
                ),
                "AsFoundSecondaryToolManufacturerPartNumber": obj.get(
                    "AsFoundSecondaryToolManufacturerPartNumber"
                ),
                "AsFoundSecondaryToolSerialNumber": obj.get(
                    "AsFoundSecondaryToolSerialNumber"
                ),
                "AsFoundMeasurementNotTakenResult": obj.get(
                    "AsFoundMeasurementNotTakenResult"
                ),
                "AsFoundHideFromCertificate": obj.get("AsFoundHideFromCertificate"),
                "AsFoundMeasurementNotTakenReason": obj.get(
                    "AsFoundMeasurementNotTakenReason"
                ),
                "AsLeftValues": obj.get("AsLeftValues"),
                "AsLeftIsAccredited": obj.get("AsLeftIsAccredited"),
                "AsLeftIsRangeAccredited": obj.get("AsLeftIsRangeAccredited"),
                "AsFoundValues": obj.get("AsFoundValues"),
                "AsFoundIsAccredited": obj.get("AsFoundIsAccredited"),
                "AsFoundIsRangeAccredited": obj.get("AsFoundIsRangeAccredited"),
                "AsFoundParameterId": obj.get("AsFoundParameterId"),
                "AsFoundSdHeader": obj.get("AsFoundSdHeader"),
                "AsFoundCvHeader": obj.get("AsFoundCvHeader"),
                "AsFoundMeasurementLocalTime": obj.get("AsFoundMeasurementLocalTime"),
                "AsFoundTur": obj.get("AsFoundTur"),
                "AsFoundTurRaw": obj.get("AsFoundTurRaw"),
                "AsLeftTur": obj.get("AsLeftTur"),
                "AsLeftTurRaw": obj.get("AsLeftTurRaw"),
                "AsFoundTar": obj.get("AsFoundTar"),
                "AsFoundTarRaw": obj.get("AsFoundTarRaw"),
                "AsLeftTar": obj.get("AsLeftTar"),
                "AsLeftTarRaw": obj.get("AsLeftTarRaw"),
                "AsFoundGuardBand": obj.get("AsFoundGuardBand"),
                "AsLeftGuardBand": obj.get("AsLeftGuardBand"),
                "AsFoundGuardBandLogic": obj.get("AsFoundGuardBandLogic"),
                "AsLeftGuardBandLogic": obj.get("AsLeftGuardBandLogic"),
                "AsFoundError": obj.get("AsFoundError"),
                "AsFoundErrorExtended": obj.get("AsFoundErrorExtended"),
                "AsLeftError": obj.get("AsLeftError"),
                "AsLeftErrorExtended": obj.get("AsLeftErrorExtended"),
                "AsFoundPercentOfTolerance": obj.get("AsFoundPercentOfTolerance"),
                "AsFoundPercentOfToleranceExtended": obj.get(
                    "AsFoundPercentOfToleranceExtended"
                ),
                "AsLeftPercentOfTolerance": obj.get("AsLeftPercentOfTolerance"),
                "AsLeftPercentOfToleranceExtended": obj.get(
                    "AsLeftPercentOfToleranceExtended"
                ),
                "AsFoundToleranceMaximum": obj.get("AsFoundToleranceMaximum"),
                "AsFoundToleranceMinimum": obj.get("AsFoundToleranceMinimum"),
                "AsFoundToleranceType": obj.get("AsFoundToleranceType"),
                "AsFoundToleranceMode": obj.get("AsFoundToleranceMode"),
                "AsFoundToleranceString": obj.get("AsFoundToleranceString"),
                "AsLeftToleranceMaximum": obj.get("AsLeftToleranceMaximum"),
                "AsLeftToleranceMinimum": obj.get("AsLeftToleranceMinimum"),
                "AsLeftToleranceType": obj.get("AsLeftToleranceType"),
                "AsLeftToleranceMode": obj.get("AsLeftToleranceMode"),
                "AsLeftToleranceString": obj.get("AsLeftToleranceString"),
                "AsFoundMaxHysteresis": obj.get("AsFoundMaxHysteresis"),
                "AsFoundRun": obj.get("AsFoundRun"),
                "AsFoundDirection": obj.get("AsFoundDirection"),
                "AsFoundHysteresis": obj.get("AsFoundHysteresis"),
                "AsLeftMaxHysteresis": obj.get("AsLeftMaxHysteresis"),
                "AsLeftRun": obj.get("AsLeftRun"),
                "AsLeftDirection": obj.get("AsLeftDirection"),
                "AsLeftHysteresis": obj.get("AsLeftHysteresis"),
                "AsFoundReadingEntryMath": obj.get("AsFoundReadingEntryMath"),
                "AsFoundReadingEntryMathString": obj.get(
                    "AsFoundReadingEntryMathString"
                ),
                "AsFoundValue1": obj.get("AsFoundValue1"),
                "AsFoundValue2": obj.get("AsFoundValue2"),
                "AsFoundValue3": obj.get("AsFoundValue3"),
                "AsFoundValue4": obj.get("AsFoundValue4"),
                "AsFoundValue5": obj.get("AsFoundValue5"),
                "AsFoundValue6": obj.get("AsFoundValue6"),
                "AsFoundValue7": obj.get("AsFoundValue7"),
                "AsFoundValue8": obj.get("AsFoundValue8"),
                "AsFoundValue9": obj.get("AsFoundValue9"),
                "AsFoundValue10": obj.get("AsFoundValue10"),
                "AsFoundValue11": obj.get("AsFoundValue11"),
                "AsFoundValue12": obj.get("AsFoundValue12"),
                "AsFoundValue13": obj.get("AsFoundValue13"),
                "AsFoundValue14": obj.get("AsFoundValue14"),
                "AsFoundValue15": obj.get("AsFoundValue15"),
                "AsFoundValue16": obj.get("AsFoundValue16"),
                "AsFoundValue17": obj.get("AsFoundValue17"),
                "AsFoundValue18": obj.get("AsFoundValue18"),
                "AsFoundValue19": obj.get("AsFoundValue19"),
                "AsFoundValue20": obj.get("AsFoundValue20"),
                "AsFoundValue21": obj.get("AsFoundValue21"),
                "AsFoundValue22": obj.get("AsFoundValue22"),
                "AsFoundValue23": obj.get("AsFoundValue23"),
                "AsFoundValue24": obj.get("AsFoundValue24"),
                "AsFoundValue25": obj.get("AsFoundValue25"),
                "AsFoundValue26": obj.get("AsFoundValue26"),
                "AsFoundValue27": obj.get("AsFoundValue27"),
                "AsFoundValue28": obj.get("AsFoundValue28"),
                "AsFoundValue29": obj.get("AsFoundValue29"),
                "AsFoundValue30": obj.get("AsFoundValue30"),
                "AsFoundValue31": obj.get("AsFoundValue31"),
                "AsFoundValue32": obj.get("AsFoundValue32"),
                "AsFoundValue33": obj.get("AsFoundValue33"),
                "AsFoundValue34": obj.get("AsFoundValue34"),
                "AsFoundValue35": obj.get("AsFoundValue35"),
                "AsFoundValue36": obj.get("AsFoundValue36"),
                "AsFoundValue37": obj.get("AsFoundValue37"),
                "AsFoundValue38": obj.get("AsFoundValue38"),
                "AsFoundValue39": obj.get("AsFoundValue39"),
                "AsFoundValue40": obj.get("AsFoundValue40"),
                "AsFoundRawValue1": obj.get("AsFoundRawValue1"),
                "AsFoundRawValue2": obj.get("AsFoundRawValue2"),
                "AsFoundRawValue3": obj.get("AsFoundRawValue3"),
                "AsFoundRawValue4": obj.get("AsFoundRawValue4"),
                "AsFoundRawValue5": obj.get("AsFoundRawValue5"),
                "AsFoundRawValue6": obj.get("AsFoundRawValue6"),
                "AsFoundRawValue7": obj.get("AsFoundRawValue7"),
                "AsFoundRawValue8": obj.get("AsFoundRawValue8"),
                "AsFoundRawValue9": obj.get("AsFoundRawValue9"),
                "AsFoundRawValue10": obj.get("AsFoundRawValue10"),
                "AsFoundRawValue11": obj.get("AsFoundRawValue11"),
                "AsFoundRawValue12": obj.get("AsFoundRawValue12"),
                "AsFoundRawValue13": obj.get("AsFoundRawValue13"),
                "AsFoundRawValue14": obj.get("AsFoundRawValue14"),
                "AsFoundRawValue15": obj.get("AsFoundRawValue15"),
                "AsFoundRawValue16": obj.get("AsFoundRawValue16"),
                "AsFoundRawValue17": obj.get("AsFoundRawValue17"),
                "AsFoundRawValue18": obj.get("AsFoundRawValue18"),
                "AsFoundRawValue19": obj.get("AsFoundRawValue19"),
                "AsFoundRawValue20": obj.get("AsFoundRawValue20"),
                "AsFoundRawValue21": obj.get("AsFoundRawValue21"),
                "AsFoundRawValue22": obj.get("AsFoundRawValue22"),
                "AsFoundRawValue23": obj.get("AsFoundRawValue23"),
                "AsFoundRawValue24": obj.get("AsFoundRawValue24"),
                "AsFoundRawValue25": obj.get("AsFoundRawValue25"),
                "AsFoundRawValue26": obj.get("AsFoundRawValue26"),
                "AsFoundRawValue27": obj.get("AsFoundRawValue27"),
                "AsFoundRawValue28": obj.get("AsFoundRawValue28"),
                "AsFoundRawValue29": obj.get("AsFoundRawValue29"),
                "AsFoundRawValue30": obj.get("AsFoundRawValue30"),
                "AsFoundRawValue31": obj.get("AsFoundRawValue31"),
                "AsFoundRawValue32": obj.get("AsFoundRawValue32"),
                "AsFoundRawValue33": obj.get("AsFoundRawValue33"),
                "AsFoundRawValue34": obj.get("AsFoundRawValue34"),
                "AsFoundRawValue35": obj.get("AsFoundRawValue35"),
                "AsFoundRawValue36": obj.get("AsFoundRawValue36"),
                "AsFoundRawValue37": obj.get("AsFoundRawValue37"),
                "AsFoundRawValue38": obj.get("AsFoundRawValue38"),
                "AsFoundRawValue39": obj.get("AsFoundRawValue39"),
                "AsFoundRawValue40": obj.get("AsFoundRawValue40"),
                "AsFoundValueSubtitle1": obj.get("AsFoundValueSubtitle1"),
                "AsFoundValueSubtitle2": obj.get("AsFoundValueSubtitle2"),
                "AsFoundValueSubtitle3": obj.get("AsFoundValueSubtitle3"),
                "AsFoundValueSubtitle4": obj.get("AsFoundValueSubtitle4"),
                "AsFoundValueSubtitle5": obj.get("AsFoundValueSubtitle5"),
                "AsFoundValueSubtitle6": obj.get("AsFoundValueSubtitle6"),
                "AsFoundValueSubtitle7": obj.get("AsFoundValueSubtitle7"),
                "AsFoundValueSubtitle8": obj.get("AsFoundValueSubtitle8"),
                "AsFoundValueSubtitle9": obj.get("AsFoundValueSubtitle9"),
                "AsFoundValueSubtitle10": obj.get("AsFoundValueSubtitle10"),
                "AsFoundValueSubtitle11": obj.get("AsFoundValueSubtitle11"),
                "AsFoundValueSubtitle12": obj.get("AsFoundValueSubtitle12"),
                "AsFoundValueSubtitle13": obj.get("AsFoundValueSubtitle13"),
                "AsFoundValueSubtitle14": obj.get("AsFoundValueSubtitle14"),
                "AsFoundValueSubtitle15": obj.get("AsFoundValueSubtitle15"),
                "AsFoundValueSubtitle16": obj.get("AsFoundValueSubtitle16"),
                "AsFoundValueSubtitle17": obj.get("AsFoundValueSubtitle17"),
                "AsFoundValueSubtitle18": obj.get("AsFoundValueSubtitle18"),
                "AsFoundValueSubtitle19": obj.get("AsFoundValueSubtitle19"),
                "AsFoundValueSubtitle20": obj.get("AsFoundValueSubtitle20"),
                "AsFoundValueSubtitle21": obj.get("AsFoundValueSubtitle21"),
                "AsFoundValueSubtitle22": obj.get("AsFoundValueSubtitle22"),
                "AsFoundValueSubtitle23": obj.get("AsFoundValueSubtitle23"),
                "AsFoundValueSubtitle24": obj.get("AsFoundValueSubtitle24"),
                "AsFoundValueSubtitle25": obj.get("AsFoundValueSubtitle25"),
                "AsFoundValueSubtitle26": obj.get("AsFoundValueSubtitle26"),
                "AsFoundValueSubtitle27": obj.get("AsFoundValueSubtitle27"),
                "AsFoundValueSubtitle28": obj.get("AsFoundValueSubtitle28"),
                "AsFoundValueSubtitle29": obj.get("AsFoundValueSubtitle29"),
                "AsFoundValueSubtitle30": obj.get("AsFoundValueSubtitle30"),
                "AsFoundValueSubtitle31": obj.get("AsFoundValueSubtitle31"),
                "AsFoundValueSubtitle32": obj.get("AsFoundValueSubtitle32"),
                "AsFoundValueSubtitle33": obj.get("AsFoundValueSubtitle33"),
                "AsFoundValueSubtitle34": obj.get("AsFoundValueSubtitle34"),
                "AsFoundValueSubtitle35": obj.get("AsFoundValueSubtitle35"),
                "AsFoundValueSubtitle36": obj.get("AsFoundValueSubtitle36"),
                "AsFoundValueSubtitle37": obj.get("AsFoundValueSubtitle37"),
                "AsFoundValueSubtitle38": obj.get("AsFoundValueSubtitle38"),
                "AsFoundValueSubtitle39": obj.get("AsFoundValueSubtitle39"),
                "AsFoundValueSubtitle40": obj.get("AsFoundValueSubtitle40"),
                "AsFoundMean": obj.get("AsFoundMean"),
                "AsFoundMeanRaw": obj.get("AsFoundMeanRaw"),
                "AsFoundSd": obj.get("AsFoundSd"),
                "AsFoundSdRaw": obj.get("AsFoundSdRaw"),
                "AsFoundDelta": obj.get("AsFoundDelta"),
                "AsFoundRange": obj.get("AsFoundRange"),
                "AsFoundCv": obj.get("AsFoundCv"),
                "AsFoundCvRaw": obj.get("AsFoundCvRaw"),
                "AsFoundResult": obj.get("AsFoundResult"),
                "AsFoundRangeResult": obj.get("AsFoundRangeResult"),
                "AsFoundDeltaResult": obj.get("AsFoundDeltaResult"),
                "AsFoundMinResult": obj.get("AsFoundMinResult"),
                "AsFoundMaxResult": obj.get("AsFoundMaxResult"),
                "AsFoundTarResult": obj.get("AsFoundTarResult"),
                "AsFoundTurResult": obj.get("AsFoundTurResult"),
                "AsFoundErrorResult": obj.get("AsFoundErrorResult"),
                "AsFoundSdResult": obj.get("AsFoundSdResult"),
                "AsFoundCvResult": obj.get("AsFoundCvResult"),
                "AsFoundCustomFieldResult": obj.get("AsFoundCustomFieldResult"),
                "AsFoundMu": obj.get("AsFoundMu"),
                "AsFoundMuRaw": obj.get("AsFoundMuRaw"),
                "AsFoundMuEffectiveDOF": obj.get("AsFoundMuEffectiveDOF"),
                "AsFoundMUCoverageFactor": obj.get("AsFoundMUCoverageFactor"),
                "AsFoundCmc": obj.get("AsFoundCmc"),
                "AsFoundCmcComments": obj.get("AsFoundCmcComments"),
                "AsFoundCalculatedUncertainty": obj.get("AsFoundCalculatedUncertainty"),
                "AsFoundLabMu": obj.get("AsFoundLabMu"),
                "AsFoundUncertaintyBudget": obj.get("AsFoundUncertaintyBudget"),
                "AsFoundMuExtended": obj.get("AsFoundMuExtended"),
                "AsFoundChannel": obj.get("AsFoundChannel"),
                "AsFoundMeasurementType": obj.get("AsFoundMeasurementType"),
                "AsFoundUpdatedBy": obj.get("AsFoundUpdatedBy"),
                "AsFoundUpdatedOn": obj.get("AsFoundUpdatedOn"),
                "AsLeftAbbreviatedUOM": obj.get("AsLeftAbbreviatedUOM"),
                "AsLeftUnitScaleFactor": obj.get("AsLeftUnitScaleFactor"),
                "AsFoundSpecificationTitle": obj.get("AsFoundSpecificationTitle"),
                "AsFoundSpecificationSubtitle": obj.get("AsFoundSpecificationSubtitle"),
                "AsFoundSpecificationGroup": obj.get("AsFoundSpecificationGroup"),
                "AsFoundBatchType": obj.get("AsFoundBatchType"),
                "AsFoundBatchResult": obj.get("AsFoundBatchResult"),
                "AsFoundIsByChannel": obj.get("AsFoundIsByChannel"),
                "AsFoundChannelCount": obj.get("AsFoundChannelCount"),
                "AsFoundCommencedOn": obj.get("AsFoundCommencedOn"),
                "AsFoundCommencedBy": obj.get("AsFoundCommencedBy"),
                "AsFoundZFactor": obj.get("AsFoundZFactor"),
                "AsFoundAirBuoyancy": obj.get("AsFoundAirBuoyancy"),
                "AsFoundEvaporationRate": obj.get("AsFoundEvaporationRate"),
                "AsFoundAmbientTemperature": obj.get("AsFoundAmbientTemperature"),
                "AsFoundAirHumidity": obj.get("AsFoundAirHumidity"),
                "AsFoundBarometricPressure": obj.get("AsFoundBarometricPressure"),
                "AsFoundAltitude": obj.get("AsFoundAltitude"),
                "AsFoundWindSpeed": obj.get("AsFoundWindSpeed"),
                "AsFoundSolarRadiation": obj.get("AsFoundSolarRadiation"),
                "AsFoundLightIntensity": obj.get("AsFoundLightIntensity"),
                "AsFoundNoiseLevel": obj.get("AsFoundNoiseLevel"),
                "AsFoundPhLevel": obj.get("AsFoundPhLevel"),
                "AsFoundWaterConductivity": obj.get("AsFoundWaterConductivity"),
                "AsFoundWaterTemperature": obj.get("AsFoundWaterTemperature"),
                "AsFoundZFactorUom": obj.get("AsFoundZFactorUom"),
                "AsFoundAirBuoyancyUom": obj.get("AsFoundAirBuoyancyUom"),
                "AsFoundEvaporationRateUom": obj.get("AsFoundEvaporationRateUom"),
                "AsFoundAmbientTemperatureUom": obj.get("AsFoundAmbientTemperatureUom"),
                "AsFoundAirHumidityUom": obj.get("AsFoundAirHumidityUom"),
                "AsFoundBarometricPressureUom": obj.get("AsFoundBarometricPressureUom"),
                "AsFoundAltitudeUom": obj.get("AsFoundAltitudeUom"),
                "AsFoundWindSpeedUom": obj.get("AsFoundWindSpeedUom"),
                "AsFoundSolarRadiationUom": obj.get("AsFoundSolarRadiationUom"),
                "AsFoundLightIntensityUom": obj.get("AsFoundLightIntensityUom"),
                "AsFoundNoiseLevelUom": obj.get("AsFoundNoiseLevelUom"),
                "AsFoundPhLevelUom": obj.get("AsFoundPhLevelUom"),
                "AsFoundWaterConductivityUom": obj.get("AsFoundWaterConductivityUom"),
                "AsFoundWaterTemperatureUom": obj.get("AsFoundWaterTemperatureUom"),
                "AsFoundAbbreviatedUOM": obj.get("AsFoundAbbreviatedUOM"),
                "AsFoundUnitScaleFactor": obj.get("AsFoundUnitScaleFactor"),
                "AsFoundSpecificationName": obj.get("AsFoundSpecificationName"),
                "AsFoundParameterName": obj.get("AsFoundParameterName"),
                "AsFoundDisplayOrder": obj.get("AsFoundDisplayOrder"),
                "AsFoundUnitOfMeasure": obj.get("AsFoundUnitOfMeasure"),
                "AsFoundDisplayFormat": obj.get("AsFoundDisplayFormat"),
                "AsFoundPrecision": obj.get("AsFoundPrecision"),
                "AsFoundPrecisionType": obj.get("AsFoundPrecisionType"),
                "AsFoundMinimum": obj.get("AsFoundMinimum"),
                "AsFoundNominal": obj.get("AsFoundNominal"),
                "AsFoundExpectedValue": obj.get("AsFoundExpectedValue"),
                "AsFoundExpectedValueRaw": obj.get("AsFoundExpectedValueRaw"),
                "AsFoundTestValue": obj.get("AsFoundTestValue"),
                "AsFoundBaseValue": obj.get("AsFoundBaseValue"),
                "AsFoundMaxiMum": obj.get("AsFoundMaxiMum"),
                "AsFoundResolution": obj.get("AsFoundResolution"),
                "AsFoundResolutionCount": obj.get("AsFoundResolutionCount"),
                "AsFoundMeasurementBatchId": obj.get("AsFoundMeasurementBatchId"),
                "AsFoundMeasurementId": obj.get("AsFoundMeasurementId"),
                "AsFoundStandardId": obj.get("AsFoundStandardId"),
                "AsFoundToolId": obj.get("AsFoundToolId"),
                "AsFoundMeasurementConditionId": obj.get(
                    "AsFoundMeasurementConditionId"
                ),
                "AsFoundMeasurementPointId": obj.get("AsFoundMeasurementPointId"),
                "AsLeftParameterId": obj.get("AsLeftParameterId"),
                "AsLeftSdHeader": obj.get("AsLeftSdHeader"),
                "AsLeftCvHeader": obj.get("AsLeftCvHeader"),
                "AsLeftMeasurementLocalTime": obj.get("AsLeftMeasurementLocalTime"),
                "AsLeftReadingEntryMath": obj.get("AsLeftReadingEntryMath"),
                "AsLeftReadingEntryMathString": obj.get("AsLeftReadingEntryMathString"),
                "AsLeftValue1": obj.get("AsLeftValue1"),
                "AsLeftValue2": obj.get("AsLeftValue2"),
                "AsLeftValue3": obj.get("AsLeftValue3"),
                "AsLeftValue4": obj.get("AsLeftValue4"),
                "AsLeftValue5": obj.get("AsLeftValue5"),
                "AsLeftValue6": obj.get("AsLeftValue6"),
                "AsLeftValue7": obj.get("AsLeftValue7"),
                "AsLeftValue8": obj.get("AsLeftValue8"),
                "AsLeftValue9": obj.get("AsLeftValue9"),
                "AsLeftValue10": obj.get("AsLeftValue10"),
                "AsLeftValue11": obj.get("AsLeftValue11"),
                "AsLeftValue12": obj.get("AsLeftValue12"),
                "AsLeftValue13": obj.get("AsLeftValue13"),
                "AsLeftValue14": obj.get("AsLeftValue14"),
                "AsLeftValue15": obj.get("AsLeftValue15"),
                "AsLeftValue16": obj.get("AsLeftValue16"),
                "AsLeftValue17": obj.get("AsLeftValue17"),
                "AsLeftValue18": obj.get("AsLeftValue18"),
                "AsLeftValue19": obj.get("AsLeftValue19"),
                "AsLeftValue20": obj.get("AsLeftValue20"),
                "AsLeftValue21": obj.get("AsLeftValue21"),
                "AsLeftValue22": obj.get("AsLeftValue22"),
                "AsLeftValue23": obj.get("AsLeftValue23"),
                "AsLeftValue24": obj.get("AsLeftValue24"),
                "AsLeftValue25": obj.get("AsLeftValue25"),
                "AsLeftValue26": obj.get("AsLeftValue26"),
                "AsLeftValue27": obj.get("AsLeftValue27"),
                "AsLeftValue28": obj.get("AsLeftValue28"),
                "AsLeftValue29": obj.get("AsLeftValue29"),
                "AsLeftValue30": obj.get("AsLeftValue30"),
                "AsLeftValue31": obj.get("AsLeftValue31"),
                "AsLeftValue32": obj.get("AsLeftValue32"),
                "AsLeftValue33": obj.get("AsLeftValue33"),
                "AsLeftValue34": obj.get("AsLeftValue34"),
                "AsLeftValue35": obj.get("AsLeftValue35"),
                "AsLeftValue36": obj.get("AsLeftValue36"),
                "AsLeftValue37": obj.get("AsLeftValue37"),
                "AsLeftValue38": obj.get("AsLeftValue38"),
                "AsLeftValue39": obj.get("AsLeftValue39"),
                "AsLeftValue40": obj.get("AsLeftValue40"),
                "AsLeftRawValue1": obj.get("AsLeftRawValue1"),
                "AsLeftRawValue2": obj.get("AsLeftRawValue2"),
                "AsLeftRawValue3": obj.get("AsLeftRawValue3"),
                "AsLeftRawValue4": obj.get("AsLeftRawValue4"),
                "AsLeftRawValue5": obj.get("AsLeftRawValue5"),
                "AsLeftRawValue6": obj.get("AsLeftRawValue6"),
                "AsLeftRawValue7": obj.get("AsLeftRawValue7"),
                "AsLeftRawValue8": obj.get("AsLeftRawValue8"),
                "AsLeftRawValue9": obj.get("AsLeftRawValue9"),
                "AsLeftRawValue10": obj.get("AsLeftRawValue10"),
                "AsLeftRawValue11": obj.get("AsLeftRawValue11"),
                "AsLeftRawValue12": obj.get("AsLeftRawValue12"),
                "AsLeftRawValue13": obj.get("AsLeftRawValue13"),
                "AsLeftRawValue14": obj.get("AsLeftRawValue14"),
                "AsLeftRawValue15": obj.get("AsLeftRawValue15"),
                "AsLeftRawValue16": obj.get("AsLeftRawValue16"),
                "AsLeftRawValue17": obj.get("AsLeftRawValue17"),
                "AsLeftRawValue18": obj.get("AsLeftRawValue18"),
                "AsLeftRawValue19": obj.get("AsLeftRawValue19"),
                "AsLeftRawValue20": obj.get("AsLeftRawValue20"),
                "AsLeftRawValue21": obj.get("AsLeftRawValue21"),
                "AsLeftRawValue22": obj.get("AsLeftRawValue22"),
                "AsLeftRawValue23": obj.get("AsLeftRawValue23"),
                "AsLeftRawValue24": obj.get("AsLeftRawValue24"),
                "AsLeftRawValue25": obj.get("AsLeftRawValue25"),
                "AsLeftRawValue26": obj.get("AsLeftRawValue26"),
                "AsLeftRawValue27": obj.get("AsLeftRawValue27"),
                "AsLeftRawValue28": obj.get("AsLeftRawValue28"),
                "AsLeftRawValue29": obj.get("AsLeftRawValue29"),
                "AsLeftRawValue30": obj.get("AsLeftRawValue30"),
                "AsLeftRawValue31": obj.get("AsLeftRawValue31"),
                "AsLeftRawValue32": obj.get("AsLeftRawValue32"),
                "AsLeftRawValue33": obj.get("AsLeftRawValue33"),
                "AsLeftRawValue34": obj.get("AsLeftRawValue34"),
                "AsLeftRawValue35": obj.get("AsLeftRawValue35"),
                "AsLeftRawValue36": obj.get("AsLeftRawValue36"),
                "AsLeftRawValue37": obj.get("AsLeftRawValue37"),
                "AsLeftRawValue38": obj.get("AsLeftRawValue38"),
                "AsLeftRawValue39": obj.get("AsLeftRawValue39"),
                "AsLeftRawValue40": obj.get("AsLeftRawValue40"),
                "AsLeftValueSubtitle1": obj.get("AsLeftValueSubtitle1"),
                "AsLeftValueSubtitle2": obj.get("AsLeftValueSubtitle2"),
                "AsLeftValueSubtitle3": obj.get("AsLeftValueSubtitle3"),
                "AsLeftValueSubtitle4": obj.get("AsLeftValueSubtitle4"),
                "AsLeftValueSubtitle5": obj.get("AsLeftValueSubtitle5"),
                "AsLeftValueSubtitle6": obj.get("AsLeftValueSubtitle6"),
                "AsLeftValueSubtitle7": obj.get("AsLeftValueSubtitle7"),
                "AsLeftValueSubtitle8": obj.get("AsLeftValueSubtitle8"),
                "AsLeftValueSubtitle9": obj.get("AsLeftValueSubtitle9"),
                "AsLeftValueSubtitle10": obj.get("AsLeftValueSubtitle10"),
                "AsLeftValueSubtitle11": obj.get("AsLeftValueSubtitle11"),
                "AsLeftValueSubtitle12": obj.get("AsLeftValueSubtitle12"),
                "AsLeftValueSubtitle13": obj.get("AsLeftValueSubtitle13"),
                "AsLeftValueSubtitle14": obj.get("AsLeftValueSubtitle14"),
                "AsLeftValueSubtitle15": obj.get("AsLeftValueSubtitle15"),
                "AsLeftValueSubtitle16": obj.get("AsLeftValueSubtitle16"),
                "AsLeftValueSubtitle17": obj.get("AsLeftValueSubtitle17"),
                "AsLeftValueSubtitle18": obj.get("AsLeftValueSubtitle18"),
                "AsLeftValueSubtitle19": obj.get("AsLeftValueSubtitle19"),
                "AsLeftValueSubtitle20": obj.get("AsLeftValueSubtitle20"),
                "AsLeftValueSubtitle21": obj.get("AsLeftValueSubtitle21"),
                "AsLeftValueSubtitle22": obj.get("AsLeftValueSubtitle22"),
                "AsLeftValueSubtitle23": obj.get("AsLeftValueSubtitle23"),
                "AsLeftValueSubtitle24": obj.get("AsLeftValueSubtitle24"),
                "AsLeftValueSubtitle25": obj.get("AsLeftValueSubtitle25"),
                "AsLeftValueSubtitle26": obj.get("AsLeftValueSubtitle26"),
                "AsLeftValueSubtitle27": obj.get("AsLeftValueSubtitle27"),
                "AsLeftValueSubtitle28": obj.get("AsLeftValueSubtitle28"),
                "AsLeftValueSubtitle29": obj.get("AsLeftValueSubtitle29"),
                "AsLeftValueSubtitle30": obj.get("AsLeftValueSubtitle30"),
                "AsLeftValueSubtitle31": obj.get("AsLeftValueSubtitle31"),
                "AsLeftValueSubtitle32": obj.get("AsLeftValueSubtitle32"),
                "AsLeftValueSubtitle33": obj.get("AsLeftValueSubtitle33"),
                "AsLeftValueSubtitle34": obj.get("AsLeftValueSubtitle34"),
                "AsLeftValueSubtitle35": obj.get("AsLeftValueSubtitle35"),
                "AsLeftValueSubtitle36": obj.get("AsLeftValueSubtitle36"),
                "AsLeftValueSubtitle37": obj.get("AsLeftValueSubtitle37"),
                "AsLeftValueSubtitle38": obj.get("AsLeftValueSubtitle38"),
                "AsLeftValueSubtitle39": obj.get("AsLeftValueSubtitle39"),
                "AsLeftValueSubtitle40": obj.get("AsLeftValueSubtitle40"),
                "AsLeftMean": obj.get("AsLeftMean"),
                "AsLeftMeanRaw": obj.get("AsLeftMeanRaw"),
                "AsLeftSd": obj.get("AsLeftSd"),
                "AsLeftSdRaw": obj.get("AsLeftSdRaw"),
                "AsLeftCv": obj.get("AsLeftCv"),
                "AsLeftCvRaw": obj.get("AsLeftCvRaw"),
                "AsLeftDelta": obj.get("AsLeftDelta"),
                "AsLeftRange": obj.get("AsLeftRange"),
                "AsLeftResult": obj.get("AsLeftResult"),
                "AsLeftRangeResult": obj.get("AsLeftRangeResult"),
                "AsLeftDeltaResult": obj.get("AsLeftDeltaResult"),
                "AsLeftMinResult": obj.get("AsLeftMinResult"),
                "AsLeftMaxResult": obj.get("AsLeftMaxResult"),
                "AsLeftTarResult": obj.get("AsLeftTarResult"),
                "AsLeftTurResult": obj.get("AsLeftTurResult"),
                "AsLeftErrorResult": obj.get("AsLeftErrorResult"),
                "AsLeftSdResult": obj.get("AsLeftSdResult"),
                "AsLeftCvResult": obj.get("AsLeftCvResult"),
                "AsLeftCustomFieldResult": obj.get("AsLeftCustomFieldResult"),
                "AsLeftMu": obj.get("AsLeftMu"),
                "AsLeftMuRaw": obj.get("AsLeftMuRaw"),
                "AsLeftMUEffectiveDOF": obj.get("AsLeftMUEffectiveDOF"),
                "AsLeftMUCoverageFactor": obj.get("AsLeftMUCoverageFactor"),
                "AsLeftCmc": obj.get("AsLeftCmc"),
                "AsLeftCmcComments": obj.get("AsLeftCmcComments"),
                "AsLeftCalculatedUncertainty": obj.get("AsLeftCalculatedUncertainty"),
                "AsLeftLabMu": obj.get("AsLeftLabMu"),
                "AsLeftUncertaintyBudget": obj.get("AsLeftUncertaintyBudget"),
                "AsLeftMuExtended": obj.get("AsLeftMuExtended"),
                "AsLeftChannel": obj.get("AsLeftChannel"),
                "AsLeftMeasurementType": obj.get("AsLeftMeasurementType"),
                "AsLeftUpdatedBy": obj.get("AsLeftUpdatedBy"),
                "AsLeftUpdatedOn": obj.get("AsLeftUpdatedOn"),
                "AsLeftSpecificationTitle": obj.get("AsLeftSpecificationTitle"),
                "AsLeftSpecificationSubtitle": obj.get("AsLeftSpecificationSubtitle"),
                "AsLeftSpecificationGroup": obj.get("AsLeftSpecificationGroup"),
                "AsLeftBatchType": obj.get("AsLeftBatchType"),
                "AsLeftBatchResult": obj.get("AsLeftBatchResult"),
                "AsLeftIsByChannel": obj.get("AsLeftIsByChannel"),
                "AsLeftChannelCount": obj.get("AsLeftChannelCount"),
                "AsLeftCommencedOn": obj.get("AsLeftCommencedOn"),
                "AsLeftCommencedBy": obj.get("AsLeftCommencedBy"),
                "AsLeftZFactor": obj.get("AsLeftZFactor"),
                "AsLeftAirBuoyancy": obj.get("AsLeftAirBuoyancy"),
                "AsLeftEvaporationRate": obj.get("AsLeftEvaporationRate"),
                "AsLeftAmbientTemperature": obj.get("AsLeftAmbientTemperature"),
                "AsLeftAirHumidity": obj.get("AsLeftAirHumidity"),
                "AsLeftBarometricPressure": obj.get("AsLeftBarometricPressure"),
                "AsLeftAltitude": obj.get("AsLeftAltitude"),
                "AsLeftWindSpeed": obj.get("AsLeftWindSpeed"),
                "AsLeftSolarRadiation": obj.get("AsLeftSolarRadiation"),
                "AsLeftLightIntensity": obj.get("AsLeftLightIntensity"),
                "AsLeftNoiseLevel": obj.get("AsLeftNoiseLevel"),
                "AsLeftPhLevel": obj.get("AsLeftPhLevel"),
                "AsLeftWaterConductivity": obj.get("AsLeftWaterConductivity"),
                "AsLeftWaterTemperature": obj.get("AsLeftWaterTemperature"),
                "AsLeftZFactorUom": obj.get("AsLeftZFactorUom"),
                "AsLeftAirBuoyancyUom": obj.get("AsLeftAirBuoyancyUom"),
                "AsLeftEvaporationRateUom": obj.get("AsLeftEvaporationRateUom"),
                "AsLeftAmbientTemperatureUom": obj.get("AsLeftAmbientTemperatureUom"),
                "AsLeftAirHumidityUom": obj.get("AsLeftAirHumidityUom"),
                "AsLeftBarometricPressureUom": obj.get("AsLeftBarometricPressureUom"),
                "AsLeftAltitudeUom": obj.get("AsLeftAltitudeUom"),
                "AsLeftWindSpeedUom": obj.get("AsLeftWindSpeedUom"),
                "AsLeftSolarRadiationUom": obj.get("AsLeftSolarRadiationUom"),
                "AsLeftLightIntensityUom": obj.get("AsLeftLightIntensityUom"),
                "AsLeftNoiseLevelUom": obj.get("AsLeftNoiseLevelUom"),
                "AsLeftPhLevelUom": obj.get("AsLeftPhLevelUom"),
                "AsLeftWaterConductivityUom": obj.get("AsLeftWaterConductivityUom"),
                "AsLeftWaterTemperatureUom": obj.get("AsLeftWaterTemperatureUom"),
                "AsLeftSpecificationName": obj.get("AsLeftSpecificationName"),
                "AsLeftParameterName": obj.get("AsLeftParameterName"),
                "AsLeftDisplayOrder": obj.get("AsLeftDisplayOrder"),
                "AsLeftUnitOfMeasure": obj.get("AsLeftUnitOfMeasure"),
                "AsLeftDisplayFormat": obj.get("AsLeftDisplayFormat"),
                "AsLeftPrecision": obj.get("AsLeftPrecision"),
                "AsLeftPrecisionType": obj.get("AsLeftPrecisionType"),
                "AsLeftMinimum": obj.get("AsLeftMinimum"),
                "AsLeftNominal": obj.get("AsLeftNominal"),
                "AsLeftExpectedValue": obj.get("AsLeftExpectedValue"),
                "AsLeftExpectedValueRaw": obj.get("AsLeftExpectedValueRaw"),
                "AsLeftTestValue": obj.get("AsLeftTestValue"),
                "AsLeftBaseValue": obj.get("AsLeftBaseValue"),
                "AsLeftMaxiMum": obj.get("AsLeftMaxiMum"),
                "AsLeftResolution": obj.get("AsLeftResolution"),
                "AsLeftResolutionCount": obj.get("AsLeftResolutionCount"),
                "AsLeftMeasurementNotTakenResult": obj.get(
                    "AsLeftMeasurementNotTakenResult"
                ),
                "AsLeftHideFromCertificate": obj.get("AsLeftHideFromCertificate"),
                "AsLeftMeasurementNotTakenReason": obj.get(
                    "AsLeftMeasurementNotTakenReason"
                ),
                "AsLeftMeasurementBatchId": obj.get("AsLeftMeasurementBatchId"),
                "AsLeftMeasurementId": obj.get("AsLeftMeasurementId"),
                "AsLeftStandardId": obj.get("AsLeftStandardId"),
                "AsLeftToolId": obj.get("AsLeftToolId"),
                "AsLeftMeasurementConditionId": obj.get("AsLeftMeasurementConditionId"),
                "AsLeftMeasurementPointId": obj.get("AsLeftMeasurementPointId"),
            }
        )
        return _obj
