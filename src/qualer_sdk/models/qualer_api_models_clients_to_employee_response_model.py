# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field, StrictBool, StrictInt, StrictStr, conlist

from qualer_sdk.models.qualer_api_models_clients_to_employee_employee_department_response import (
    QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse,
)


class QualerApiModelsClientsToEmployeeResponseModel(BaseModel):
    """
    QualerApiModelsClientsToEmployeeResponseModel
    """

    employee_id: Optional[StrictInt] = Field(None, alias="EmployeeId")
    first_name: Optional[StrictStr] = Field(None, alias="FirstName")
    last_name: Optional[StrictStr] = Field(None, alias="LastName")
    company_id: Optional[StrictInt] = Field(None, alias="CompanyId")
    login_email: Optional[StrictStr] = Field(None, alias="LoginEmail")
    departments: Optional[
        conlist(QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse)
    ] = Field(None, alias="Departments")
    subscription_email: Optional[StrictStr] = Field(None, alias="SubscriptionEmail")
    subscription_phone: Optional[StrictStr] = Field(None, alias="SubscriptionPhone")
    office_phone: Optional[StrictStr] = Field(None, alias="OfficePhone")
    is_locked: Optional[StrictBool] = Field(None, alias="IsLocked")
    image_url: Optional[StrictStr] = Field(None, alias="ImageUrl")
    alias: Optional[StrictStr] = Field(None, alias="Alias")
    title: Optional[StrictStr] = Field(None, alias="Title")
    is_deleted: Optional[StrictBool] = Field(None, alias="IsDeleted")
    last_seen_date_utc: Optional[datetime] = Field(None, alias="LastSeenDateUtc")
    culture_name: Optional[StrictStr] = Field(None, alias="CultureName")
    culture_ui_name: Optional[StrictStr] = Field(None, alias="CultureUiName")
    __properties = [
        "EmployeeId",
        "FirstName",
        "LastName",
        "CompanyId",
        "LoginEmail",
        "Departments",
        "SubscriptionEmail",
        "SubscriptionPhone",
        "OfficePhone",
        "IsLocked",
        "ImageUrl",
        "Alias",
        "Title",
        "IsDeleted",
        "LastSeenDateUtc",
        "CultureName",
        "CultureUiName",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> QualerApiModelsClientsToEmployeeResponseModel:
        """Create an instance of QualerApiModelsClientsToEmployeeResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in departments (list)
        _items = []
        if self.departments:
            for _item in self.departments:
                if _item:
                    _items.append(_item.to_dict())
            _dict["Departments"] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QualerApiModelsClientsToEmployeeResponseModel:
        """Create an instance of QualerApiModelsClientsToEmployeeResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsClientsToEmployeeResponseModel.parse_obj(obj)

        _obj = QualerApiModelsClientsToEmployeeResponseModel.parse_obj(
            {
                "employee_id": obj.get("EmployeeId"),
                "first_name": obj.get("FirstName"),
                "last_name": obj.get("LastName"),
                "company_id": obj.get("CompanyId"),
                "login_email": obj.get("LoginEmail"),
                "departments": (
                    [
                        QualerApiModelsClientsToEmployeeEmployeeDepartmentResponse.from_dict(
                            _item
                        )
                        for _item in obj.get("Departments")
                    ]
                    if obj.get("Departments") is not None
                    else None
                ),
                "subscription_email": obj.get("SubscriptionEmail"),
                "subscription_phone": obj.get("SubscriptionPhone"),
                "office_phone": obj.get("OfficePhone"),
                "is_locked": obj.get("IsLocked"),
                "image_url": obj.get("ImageUrl"),
                "alias": obj.get("Alias"),
                "title": obj.get("Title"),
                "is_deleted": obj.get("IsDeleted"),
                "last_seen_date_utc": obj.get("LastSeenDateUtc"),
                "culture_name": obj.get("CultureName"),
                "culture_ui_name": obj.get("CultureUiName"),
            }
        )
        return _obj
