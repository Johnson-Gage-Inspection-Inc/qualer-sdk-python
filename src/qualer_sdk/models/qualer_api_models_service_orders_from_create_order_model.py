# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from pydantic import BaseModel, Field, StrictBool, StrictInt, StrictStr, conlist


class QualerApiModelsServiceOrdersFromCreateOrderModel(BaseModel):
    """
    QualerApiModelsServiceOrdersFromCreateOrderModel
    """

    client_company_id: Optional[StrictInt] = Field(None, alias="ClientCompanyId")
    vendor_site_id: Optional[StrictInt] = Field(None, alias="VendorSiteId")
    asset_ids: Optional[conlist(StrictInt)] = Field(None, alias="AssetIds")
    schedule_segment_ids: Optional[conlist(StrictInt)] = Field(
        None, alias="ScheduleSegmentIds"
    )
    service_level_ids: Optional[conlist(StrictInt)] = Field(
        None, alias="ServiceLevelIds"
    )
    use_due_segments: Optional[StrictBool] = Field(None, alias="UseDueSegments")
    order_notes: Optional[StrictStr] = Field(None, alias="OrderNotes")
    __properties = [
        "ClientCompanyId",
        "VendorSiteId",
        "AssetIds",
        "ScheduleSegmentIds",
        "ServiceLevelIds",
        "UseDueSegments",
        "OrderNotes",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsServiceOrdersFromCreateOrderModel:
        """Create an instance of QualerApiModelsServiceOrdersFromCreateOrderModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QualerApiModelsServiceOrdersFromCreateOrderModel:
        """Create an instance of QualerApiModelsServiceOrdersFromCreateOrderModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsServiceOrdersFromCreateOrderModel.parse_obj(obj)

        _obj = QualerApiModelsServiceOrdersFromCreateOrderModel.parse_obj(
            {
                "client_company_id": obj.get("ClientCompanyId"),
                "vendor_site_id": obj.get("VendorSiteId"),
                "asset_ids": obj.get("AssetIds"),
                "schedule_segment_ids": obj.get("ScheduleSegmentIds"),
                "service_level_ids": obj.get("ServiceLevelIds"),
                "use_due_segments": obj.get("UseDueSegments"),
                "order_notes": obj.get("OrderNotes"),
            }
        )
        return _obj
