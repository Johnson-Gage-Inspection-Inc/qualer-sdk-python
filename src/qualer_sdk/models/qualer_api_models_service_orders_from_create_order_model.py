# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsServiceOrdersFromCreateOrderModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "client_company_id": "int",
        "vendor_site_id": "int",
        "asset_ids": "list[int]",
        "schedule_segment_ids": "list[int]",
        "service_level_ids": "list[int]",
        "use_due_segments": "bool",
        "order_notes": "str",
    }

    attribute_map = {
        "client_company_id": "ClientCompanyId",
        "vendor_site_id": "VendorSiteId",
        "asset_ids": "AssetIds",
        "schedule_segment_ids": "ScheduleSegmentIds",
        "service_level_ids": "ServiceLevelIds",
        "use_due_segments": "UseDueSegments",
        "order_notes": "OrderNotes",
    }

    def __init__(
        self,
        client_company_id=None,
        vendor_site_id=None,
        asset_ids=None,
        schedule_segment_ids=None,
        service_level_ids=None,
        use_due_segments=None,
        order_notes=None,
        _configuration=None,
    ):  # noqa: E501
        """QualerApiModelsServiceOrdersFromCreateOrderModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._client_company_id = None
        self._vendor_site_id = None
        self._asset_ids = None
        self._schedule_segment_ids = None
        self._service_level_ids = None
        self._use_due_segments = None
        self._order_notes = None
        self.discriminator = None

        if client_company_id is not None:
            self.client_company_id = client_company_id
        if vendor_site_id is not None:
            self.vendor_site_id = vendor_site_id
        if asset_ids is not None:
            self.asset_ids = asset_ids
        if schedule_segment_ids is not None:
            self.schedule_segment_ids = schedule_segment_ids
        if service_level_ids is not None:
            self.service_level_ids = service_level_ids
        if use_due_segments is not None:
            self.use_due_segments = use_due_segments
        if order_notes is not None:
            self.order_notes = order_notes

    @property
    def client_company_id(self):
        """Gets the client_company_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501


        :return: The client_company_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :rtype: int
        """
        return self._client_company_id

    @client_company_id.setter
    def client_company_id(self, client_company_id):
        """Sets the client_company_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.


        :param client_company_id: The client_company_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :type: int
        """

        self._client_company_id = client_company_id

    @property
    def vendor_site_id(self):
        """Gets the vendor_site_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501


        :return: The vendor_site_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :rtype: int
        """
        return self._vendor_site_id

    @vendor_site_id.setter
    def vendor_site_id(self, vendor_site_id):
        """Sets the vendor_site_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.


        :param vendor_site_id: The vendor_site_id of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :type: int
        """

        self._vendor_site_id = vendor_site_id

    @property
    def asset_ids(self):
        """Gets the asset_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501


        :return: The asset_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :rtype: list[int]
        """
        return self._asset_ids

    @asset_ids.setter
    def asset_ids(self, asset_ids):
        """Sets the asset_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.


        :param asset_ids: The asset_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :type: list[int]
        """

        self._asset_ids = asset_ids

    @property
    def schedule_segment_ids(self):
        """Gets the schedule_segment_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501


        :return: The schedule_segment_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :rtype: list[int]
        """
        return self._schedule_segment_ids

    @schedule_segment_ids.setter
    def schedule_segment_ids(self, schedule_segment_ids):
        """Sets the schedule_segment_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.


        :param schedule_segment_ids: The schedule_segment_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :type: list[int]
        """

        self._schedule_segment_ids = schedule_segment_ids

    @property
    def service_level_ids(self):
        """Gets the service_level_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501


        :return: The service_level_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :rtype: list[int]
        """
        return self._service_level_ids

    @service_level_ids.setter
    def service_level_ids(self, service_level_ids):
        """Sets the service_level_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.


        :param service_level_ids: The service_level_ids of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :type: list[int]
        """

        self._service_level_ids = service_level_ids

    @property
    def use_due_segments(self):
        """Gets the use_due_segments of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501


        :return: The use_due_segments of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :rtype: bool
        """
        return self._use_due_segments

    @use_due_segments.setter
    def use_due_segments(self, use_due_segments):
        """Sets the use_due_segments of this QualerApiModelsServiceOrdersFromCreateOrderModel.


        :param use_due_segments: The use_due_segments of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :type: bool
        """

        self._use_due_segments = use_due_segments

    @property
    def order_notes(self):
        """Gets the order_notes of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501


        :return: The order_notes of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :rtype: str
        """
        return self._order_notes

    @order_notes.setter
    def order_notes(self, order_notes):
        """Sets the order_notes of this QualerApiModelsServiceOrdersFromCreateOrderModel.


        :param order_notes: The order_notes of this QualerApiModelsServiceOrdersFromCreateOrderModel.  # noqa: E501
        :type: str
        """

        self._order_notes = order_notes

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (
                            (item[0], item[1].to_dict())
                            if hasattr(item[1], "to_dict")
                            else item
                        ),
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(QualerApiModelsServiceOrdersFromCreateOrderModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, QualerApiModelsServiceOrdersFromCreateOrderModel):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, QualerApiModelsServiceOrdersFromCreateOrderModel):
            return True

        return self.to_dict() != other.to_dict()
