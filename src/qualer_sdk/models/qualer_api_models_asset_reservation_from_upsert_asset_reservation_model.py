# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field, StrictInt, StrictStr


class QualerApiModelsAssetReservationFromUpsertAssetReservationModel(BaseModel):
    """
    QualerApiModelsAssetReservationFromUpsertAssetReservationModel
    """

    asset_id: Optional[StrictInt] = Field(None, alias="AssetId")
    product_id: Optional[StrictInt] = Field(None, alias="ProductId")
    reservation_id: Optional[StrictInt] = Field(None, alias="ReservationId")
    service_order_id: Optional[StrictInt] = Field(None, alias="ServiceOrderId")
    begin_date: Optional[datetime] = Field(None, alias="BeginDate")
    end_date: Optional[datetime] = Field(None, alias="EndDate")
    reserved_by: Optional[StrictInt] = Field(None, alias="ReservedBy")
    reserved_by_name: Optional[StrictStr] = Field(None, alias="ReservedByName")
    comments: Optional[StrictStr] = Field(None, alias="Comments")
    __properties = [
        "AssetId",
        "ProductId",
        "ReservationId",
        "ServiceOrderId",
        "BeginDate",
        "EndDate",
        "ReservedBy",
        "ReservedByName",
        "Comments",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsAssetReservationFromUpsertAssetReservationModel:
        """Create an instance of QualerApiModelsAssetReservationFromUpsertAssetReservationModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerApiModelsAssetReservationFromUpsertAssetReservationModel:
        """Create an instance of QualerApiModelsAssetReservationFromUpsertAssetReservationModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsAssetReservationFromUpsertAssetReservationModel.parse_obj(
                obj
            )

        _obj = QualerApiModelsAssetReservationFromUpsertAssetReservationModel.parse_obj(
            {
                "asset_id": obj.get("AssetId"),
                "product_id": obj.get("ProductId"),
                "reservation_id": obj.get("ReservationId"),
                "service_order_id": obj.get("ServiceOrderId"),
                "begin_date": obj.get("BeginDate"),
                "end_date": obj.get("EndDate"),
                "reserved_by": obj.get("ReservedBy"),
                "reserved_by_name": obj.get("ReservedByName"),
                "comments": obj.get("Comments"),
            }
        )
        return _obj
