# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from pydantic import BaseModel, Field, StrictInt


class QualerApiModelsAssetToClientAssetCountersResponseModel(BaseModel):
    """
    QualerApiModelsAssetToClientAssetCountersResponseModel
    """

    client_assets_collected: Optional[StrictInt] = Field(
        None, alias="ClientAssetsCollected"
    )
    client_unset: Optional[StrictInt] = Field(None, alias="ClientUnset")
    client_due_for_service: Optional[StrictInt] = Field(
        None, alias="ClientDueForService"
    )
    client_past_due: Optional[StrictInt] = Field(None, alias="ClientPastDue")
    client_out_of_service: Optional[StrictInt] = Field(None, alias="ClientOutOfService")
    client_without_schedule: Optional[StrictInt] = Field(
        None, alias="ClientWithoutSchedule"
    )
    __properties = [
        "ClientAssetsCollected",
        "ClientUnset",
        "ClientDueForService",
        "ClientPastDue",
        "ClientOutOfService",
        "ClientWithoutSchedule",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsAssetToClientAssetCountersResponseModel:
        """Create an instance of QualerApiModelsAssetToClientAssetCountersResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerApiModelsAssetToClientAssetCountersResponseModel:
        """Create an instance of QualerApiModelsAssetToClientAssetCountersResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsAssetToClientAssetCountersResponseModel.parse_obj(obj)

        _obj = QualerApiModelsAssetToClientAssetCountersResponseModel.parse_obj(
            {
                "client_assets_collected": obj.get("ClientAssetsCollected"),
                "client_unset": obj.get("ClientUnset"),
                "client_due_for_service": obj.get("ClientDueForService"),
                "client_past_due": obj.get("ClientPastDue"),
                "client_out_of_service": obj.get("ClientOutOfService"),
                "client_without_schedule": obj.get("ClientWithoutSchedule"),
            }
        )
        return _obj
