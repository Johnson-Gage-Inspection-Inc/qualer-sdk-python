# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from pydantic import BaseModel, Field, StrictInt


class QualerApiModelsAssetToAssetsCountResponseModel(BaseModel):
    """
    QualerApiModelsAssetToAssetsCountResponseModel
    """

    assets_all: Optional[StrictInt] = Field(None, alias="AssetsAll")
    assets_collected: Optional[StrictInt] = Field(None, alias="AssetsCollected")
    assets_recently_serviced: Optional[StrictInt] = Field(
        None, alias="AssetsRecentlyServiced"
    )
    assets_due: Optional[StrictInt] = Field(None, alias="AssetsDue")
    assets_past_due: Optional[StrictInt] = Field(None, alias="AssetsPastDue")
    assets_service_pending: Optional[StrictInt] = Field(
        None, alias="AssetsServicePending"
    )
    assets_recently_purchased: Optional[StrictInt] = Field(
        None, alias="AssetsRecentlyPurchased"
    )
    assets_warranty_expires: Optional[StrictInt] = Field(
        None, alias="AssetsWarrantyExpires"
    )
    assets_due_for_replacement: Optional[StrictInt] = Field(
        None, alias="AssetsDueForReplacement"
    )
    assets_out_of_service: Optional[StrictInt] = Field(None, alias="AssetsOutOfService")
    assets_not_serviced: Optional[StrictInt] = Field(None, alias="AssetsNotServiced")
    assets_without_schedule: Optional[StrictInt] = Field(
        None, alias="AssetsWithoutSchedule"
    )
    assets_without_vendor: Optional[StrictInt] = Field(
        None, alias="AssetsWithoutVendor"
    )
    assets_without_product: Optional[StrictInt] = Field(
        None, alias="AssetsWithoutProduct"
    )
    assets_added: Optional[StrictInt] = Field(None, alias="AssetsAdded")
    assets_updated: Optional[StrictInt] = Field(None, alias="AssetsUpdated")
    assets_deleted: Optional[StrictInt] = Field(None, alias="AssetsDeleted")
    assets_no_agreement: Optional[StrictInt] = Field(None, alias="AssetsNoAgreement")
    assets_expired_agreement: Optional[StrictInt] = Field(
        None, alias="AssetsExpiredAgreement"
    )
    assets_expiring_soon_agreement: Optional[StrictInt] = Field(
        None, alias="AssetsExpiringSoonAgreement"
    )
    __properties = [
        "AssetsAll",
        "AssetsCollected",
        "AssetsRecentlyServiced",
        "AssetsDue",
        "AssetsPastDue",
        "AssetsServicePending",
        "AssetsRecentlyPurchased",
        "AssetsWarrantyExpires",
        "AssetsDueForReplacement",
        "AssetsOutOfService",
        "AssetsNotServiced",
        "AssetsWithoutSchedule",
        "AssetsWithoutVendor",
        "AssetsWithoutProduct",
        "AssetsAdded",
        "AssetsUpdated",
        "AssetsDeleted",
        "AssetsNoAgreement",
        "AssetsExpiredAgreement",
        "AssetsExpiringSoonAgreement",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> QualerApiModelsAssetToAssetsCountResponseModel:
        """Create an instance of QualerApiModelsAssetToAssetsCountResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QualerApiModelsAssetToAssetsCountResponseModel:
        """Create an instance of QualerApiModelsAssetToAssetsCountResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsAssetToAssetsCountResponseModel.parse_obj(obj)

        _obj = QualerApiModelsAssetToAssetsCountResponseModel.parse_obj(
            {
                "assets_all": obj.get("AssetsAll"),
                "assets_collected": obj.get("AssetsCollected"),
                "assets_recently_serviced": obj.get("AssetsRecentlyServiced"),
                "assets_due": obj.get("AssetsDue"),
                "assets_past_due": obj.get("AssetsPastDue"),
                "assets_service_pending": obj.get("AssetsServicePending"),
                "assets_recently_purchased": obj.get("AssetsRecentlyPurchased"),
                "assets_warranty_expires": obj.get("AssetsWarrantyExpires"),
                "assets_due_for_replacement": obj.get("AssetsDueForReplacement"),
                "assets_out_of_service": obj.get("AssetsOutOfService"),
                "assets_not_serviced": obj.get("AssetsNotServiced"),
                "assets_without_schedule": obj.get("AssetsWithoutSchedule"),
                "assets_without_vendor": obj.get("AssetsWithoutVendor"),
                "assets_without_product": obj.get("AssetsWithoutProduct"),
                "assets_added": obj.get("AssetsAdded"),
                "assets_updated": obj.get("AssetsUpdated"),
                "assets_deleted": obj.get("AssetsDeleted"),
                "assets_no_agreement": obj.get("AssetsNoAgreement"),
                "assets_expired_agreement": obj.get("AssetsExpiredAgreement"),
                "assets_expiring_soon_agreement": obj.get(
                    "AssetsExpiringSoonAgreement"
                ),
            }
        )
        return _obj
