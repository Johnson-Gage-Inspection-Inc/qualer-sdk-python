# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Any, ClassVar, Dict, List, Optional, Set

from pydantic import BaseModel, ConfigDict, Field, StrictInt
from typing_extensions import Self


class QualerApiModelsAssetToAssetsCountResponseModel(BaseModel):
    """
    QualerApiModelsAssetToAssetsCountResponseModel
    """  # noqa: E501

    assets_all: Optional[StrictInt] = Field(default=None, alias="AssetsAll")
    assets_collected: Optional[StrictInt] = Field(default=None, alias="AssetsCollected")
    assets_recently_serviced: Optional[StrictInt] = Field(
        default=None, alias="AssetsRecentlyServiced"
    )
    assets_due: Optional[StrictInt] = Field(default=None, alias="AssetsDue")
    assets_past_due: Optional[StrictInt] = Field(default=None, alias="AssetsPastDue")
    assets_service_pending: Optional[StrictInt] = Field(
        default=None, alias="AssetsServicePending"
    )
    assets_recently_purchased: Optional[StrictInt] = Field(
        default=None, alias="AssetsRecentlyPurchased"
    )
    assets_warranty_expires: Optional[StrictInt] = Field(
        default=None, alias="AssetsWarrantyExpires"
    )
    assets_due_for_replacement: Optional[StrictInt] = Field(
        default=None, alias="AssetsDueForReplacement"
    )
    assets_out_of_service: Optional[StrictInt] = Field(
        default=None, alias="AssetsOutOfService"
    )
    assets_not_serviced: Optional[StrictInt] = Field(
        default=None, alias="AssetsNotServiced"
    )
    assets_without_schedule: Optional[StrictInt] = Field(
        default=None, alias="AssetsWithoutSchedule"
    )
    assets_without_vendor: Optional[StrictInt] = Field(
        default=None, alias="AssetsWithoutVendor"
    )
    assets_without_product: Optional[StrictInt] = Field(
        default=None, alias="AssetsWithoutProduct"
    )
    assets_added: Optional[StrictInt] = Field(default=None, alias="AssetsAdded")
    assets_updated: Optional[StrictInt] = Field(default=None, alias="AssetsUpdated")
    assets_deleted: Optional[StrictInt] = Field(default=None, alias="AssetsDeleted")
    assets_no_agreement: Optional[StrictInt] = Field(
        default=None, alias="AssetsNoAgreement"
    )
    assets_expired_agreement: Optional[StrictInt] = Field(
        default=None, alias="AssetsExpiredAgreement"
    )
    assets_expiring_soon_agreement: Optional[StrictInt] = Field(
        default=None, alias="AssetsExpiringSoonAgreement"
    )
    __properties: ClassVar[List[str]] = [
        "AssetsAll",
        "AssetsCollected",
        "AssetsRecentlyServiced",
        "AssetsDue",
        "AssetsPastDue",
        "AssetsServicePending",
        "AssetsRecentlyPurchased",
        "AssetsWarrantyExpires",
        "AssetsDueForReplacement",
        "AssetsOutOfService",
        "AssetsNotServiced",
        "AssetsWithoutSchedule",
        "AssetsWithoutVendor",
        "AssetsWithoutProduct",
        "AssetsAdded",
        "AssetsUpdated",
        "AssetsDeleted",
        "AssetsNoAgreement",
        "AssetsExpiredAgreement",
        "AssetsExpiringSoonAgreement",
    ]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of QualerApiModelsAssetToAssetsCountResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of QualerApiModelsAssetToAssetsCountResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate(
            {
                "AssetsAll": obj.get("AssetsAll"),
                "AssetsCollected": obj.get("AssetsCollected"),
                "AssetsRecentlyServiced": obj.get("AssetsRecentlyServiced"),
                "AssetsDue": obj.get("AssetsDue"),
                "AssetsPastDue": obj.get("AssetsPastDue"),
                "AssetsServicePending": obj.get("AssetsServicePending"),
                "AssetsRecentlyPurchased": obj.get("AssetsRecentlyPurchased"),
                "AssetsWarrantyExpires": obj.get("AssetsWarrantyExpires"),
                "AssetsDueForReplacement": obj.get("AssetsDueForReplacement"),
                "AssetsOutOfService": obj.get("AssetsOutOfService"),
                "AssetsNotServiced": obj.get("AssetsNotServiced"),
                "AssetsWithoutSchedule": obj.get("AssetsWithoutSchedule"),
                "AssetsWithoutVendor": obj.get("AssetsWithoutVendor"),
                "AssetsWithoutProduct": obj.get("AssetsWithoutProduct"),
                "AssetsAdded": obj.get("AssetsAdded"),
                "AssetsUpdated": obj.get("AssetsUpdated"),
                "AssetsDeleted": obj.get("AssetsDeleted"),
                "AssetsNoAgreement": obj.get("AssetsNoAgreement"),
                "AssetsExpiredAgreement": obj.get("AssetsExpiredAgreement"),
                "AssetsExpiringSoonAgreement": obj.get("AssetsExpiringSoonAgreement"),
            }
        )
        return _obj
