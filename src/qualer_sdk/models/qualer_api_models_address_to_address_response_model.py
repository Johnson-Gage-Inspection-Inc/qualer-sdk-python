# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional

from pydantic import BaseModel, Field, StrictStr


class QualerApiModelsAddressToAddressResponseModel(BaseModel):
    """
    QualerApiModelsAddressToAddressResponseModel
    """

    first_name: Optional[StrictStr] = Field(None, alias="FirstName")
    last_name: Optional[StrictStr] = Field(None, alias="LastName")
    email: Optional[StrictStr] = Field(None, alias="Email")
    company: Optional[StrictStr] = Field(None, alias="Company")
    city: Optional[StrictStr] = Field(None, alias="City")
    address1: Optional[StrictStr] = Field(None, alias="Address1")
    address2: Optional[StrictStr] = Field(None, alias="Address2")
    zip_postal_code: Optional[StrictStr] = Field(None, alias="ZipPostalCode")
    phone_number: Optional[StrictStr] = Field(None, alias="PhoneNumber")
    fax_number: Optional[StrictStr] = Field(None, alias="FaxNumber")
    attention1: Optional[StrictStr] = Field(None, alias="Attention1")
    attention2: Optional[StrictStr] = Field(None, alias="Attention2")
    country: Optional[StrictStr] = Field(None, alias="Country")
    state_province: Optional[StrictStr] = Field(None, alias="StateProvince")
    state_province_abbreviation: Optional[StrictStr] = Field(
        None, alias="StateProvinceAbbreviation"
    )
    __properties = [
        "FirstName",
        "LastName",
        "Email",
        "Company",
        "City",
        "Address1",
        "Address2",
        "ZipPostalCode",
        "PhoneNumber",
        "FaxNumber",
        "Attention1",
        "Attention2",
        "Country",
        "StateProvince",
        "StateProvinceAbbreviation",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> QualerApiModelsAddressToAddressResponseModel:
        """Create an instance of QualerApiModelsAddressToAddressResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QualerApiModelsAddressToAddressResponseModel:
        """Create an instance of QualerApiModelsAddressToAddressResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsAddressToAddressResponseModel.parse_obj(obj)

        _obj = QualerApiModelsAddressToAddressResponseModel.parse_obj(
            {
                "first_name": obj.get("FirstName"),
                "last_name": obj.get("LastName"),
                "email": obj.get("Email"),
                "company": obj.get("Company"),
                "city": obj.get("City"),
                "address1": obj.get("Address1"),
                "address2": obj.get("Address2"),
                "zip_postal_code": obj.get("ZipPostalCode"),
                "phone_number": obj.get("PhoneNumber"),
                "fax_number": obj.get("FaxNumber"),
                "attention1": obj.get("Attention1"),
                "attention2": obj.get("Attention2"),
                "country": obj.get("Country"),
                "state_province": obj.get("StateProvince"),
                "state_province_abbreviation": obj.get("StateProvinceAbbreviation"),
            }
        )
        return _obj
