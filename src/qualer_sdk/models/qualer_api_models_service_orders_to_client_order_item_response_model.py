# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Any, ClassVar, Dict, List, Optional, Set, Union

from pydantic import (
    BaseModel,
    ConfigDict,
    Field,
    StrictBool,
    StrictFloat,
    StrictInt,
    StrictStr,
)
from typing_extensions import Self

from qualer_sdk.models.qualer_api_models_service_options_to_service_option_response_model import (
    QualerApiModelsServiceOptionsToServiceOptionResponseModel,
)


class QualerApiModelsServiceOrdersToClientOrderItemResponseModel(BaseModel):
    """
    QualerApiModelsServiceOrdersToClientOrderItemResponseModel
    """  # noqa: E501

    work_item_id: Optional[StrictInt] = Field(default=None, alias="WorkItemId")
    client_notes: Optional[StrictStr] = Field(default=None, alias="ClientNotes")
    service_comments: Optional[StrictStr] = Field(default=None, alias="ServiceComments")
    private_comments: Optional[StrictStr] = Field(default=None, alias="PrivateComments")
    order_item_number: Optional[StrictInt] = Field(
        default=None, alias="OrderItemNumber"
    )
    service_order_id: Optional[StrictInt] = Field(default=None, alias="ServiceOrderId")
    channel_count: Optional[StrictInt] = Field(default=None, alias="ChannelCount")
    service_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="ServiceTotal"
    )
    repairs_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="RepairsTotal"
    )
    parts_total: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsTotal"
    )
    parts_total_before_discount: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsTotalBeforeDiscount"
    )
    override_service_total: Optional[StrictBool] = Field(
        default=None, alias="OverrideServiceTotal"
    )
    override_repairs_total: Optional[StrictBool] = Field(
        default=None, alias="OverrideRepairsTotal"
    )
    override_parts_total: Optional[StrictBool] = Field(
        default=None, alias="OverridePartsTotal"
    )
    service_type: Optional[StrictStr] = Field(default=None, alias="ServiceType")
    document_number: Optional[StrictStr] = Field(default=None, alias="DocumentNumber")
    document_section: Optional[StrictStr] = Field(default=None, alias="DocumentSection")
    work_status: Optional[StrictStr] = Field(default=None, alias="WorkStatus")
    custom_work_status: Optional[StrictStr] = Field(
        default=None, alias="CustomWorkStatus"
    )
    is_limited: Optional[StrictBool] = Field(default=None, alias="IsLimited")
    checked_on: Optional[datetime] = Field(default=None, alias="CheckedOn")
    checked_by_name: Optional[StrictStr] = Field(default=None, alias="CheckedByName")
    checked_by_id: Optional[StrictInt] = Field(default=None, alias="CheckedById")
    completed_on: Optional[datetime] = Field(default=None, alias="CompletedOn")
    completed_by_name: Optional[StrictStr] = Field(
        default=None, alias="CompletedByName"
    )
    completed_by_id: Optional[StrictInt] = Field(default=None, alias="CompletedById")
    updated_by_id: Optional[StrictInt] = Field(default=None, alias="UpdatedById")
    updated_by: Optional[StrictStr] = Field(default=None, alias="UpdatedBy")
    as_found_check: Optional[StrictStr] = Field(default=None, alias="AsFoundCheck")
    as_left_check: Optional[StrictStr] = Field(default=None, alias="AsLeftCheck")
    item_result_status: Optional[StrictStr] = Field(
        default=None, alias="ItemResultStatus"
    )
    item_as_found_result: Optional[StrictStr] = Field(
        default=None, alias="ItemAsFoundResult"
    )
    item_as_left_result: Optional[StrictStr] = Field(
        default=None, alias="ItemAsLeftResult"
    )
    as_found_specification: Optional[StrictInt] = Field(
        default=None, alias="AsFoundSpecification"
    )
    as_left_specification: Optional[StrictInt] = Field(
        default=None, alias="AsLeftSpecification"
    )
    created_on_utc: Optional[datetime] = Field(default=None, alias="CreatedOnUtc")
    updated_on_utc: Optional[datetime] = Field(default=None, alias="UpdatedOnUtc")
    equipment_id: Optional[StrictStr] = Field(default=None, alias="EquipmentId")
    service_level: Optional[StrictStr] = Field(default=None, alias="ServiceLevel")
    service_level_code: Optional[StrictStr] = Field(
        default=None, alias="ServiceLevelCode"
    )
    service_level_document_number: Optional[StrictStr] = Field(
        default=None, alias="ServiceLevelDocumentNumber"
    )
    service_level_document_section: Optional[StrictStr] = Field(
        default=None, alias="ServiceLevelDocumentSection"
    )
    next_service_level: Optional[StrictStr] = Field(
        default=None, alias="NextServiceLevel"
    )
    next_service_level_code: Optional[StrictStr] = Field(
        default=None, alias="NextServiceLevelCode"
    )
    result_status: Optional[StrictStr] = Field(default=None, alias="ResultStatus")
    as_found_result: Optional[StrictStr] = Field(default=None, alias="AsFoundResult")
    as_left_result: Optional[StrictStr] = Field(default=None, alias="AsLeftResult")
    serial_number: Optional[StrictStr] = Field(default=None, alias="SerialNumber")
    serial_number_change: Optional[StrictStr] = Field(
        default=None, alias="SerialNumberChange"
    )
    asset_tag: Optional[StrictStr] = Field(default=None, alias="AssetTag")
    asset_user: Optional[StrictStr] = Field(default=None, alias="AssetUser")
    asset_tag_change: Optional[StrictStr] = Field(default=None, alias="AssetTagChange")
    asset_user_change: Optional[StrictStr] = Field(
        default=None, alias="AssetUserChange"
    )
    asset_id: Optional[StrictInt] = Field(default=None, alias="AssetId")
    asset_name: Optional[StrictStr] = Field(default=None, alias="AssetName")
    asset_description: Optional[StrictStr] = Field(
        default=None, alias="AssetDescription"
    )
    asset_site_name: Optional[StrictStr] = Field(default=None, alias="AssetSiteName")
    asset_site_id: Optional[StrictInt] = Field(default=None, alias="AssetSiteId")
    asset_company_name: Optional[StrictStr] = Field(
        default=None, alias="AssetCompanyName"
    )
    asset_company_id: Optional[StrictInt] = Field(default=None, alias="AssetCompanyId")
    client_company_id: Optional[StrictInt] = Field(
        default=None, alias="ClientCompanyId"
    )
    vendor_company_id: Optional[StrictInt] = Field(
        default=None, alias="VendorCompanyId"
    )
    service_notes: Optional[StrictStr] = Field(default=None, alias="ServiceNotes")
    provider_technician: Optional[StrictStr] = Field(
        default=None, alias="ProviderTechnician"
    )
    provider_phone: Optional[StrictStr] = Field(default=None, alias="ProviderPhone")
    provider_company: Optional[StrictStr] = Field(default=None, alias="ProviderCompany")
    service_charge: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="ServiceCharge"
    )
    repairs_charge: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="RepairsCharge"
    )
    parts_charge: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsCharge"
    )
    parts_charge_before_discount: Optional[Union[StrictFloat, StrictInt]] = Field(
        default=None, alias="PartsChargeBeforeDiscount"
    )
    custom_order_number: Optional[StrictStr] = Field(
        default=None, alias="CustomOrderNumber"
    )
    certificate_number: Optional[StrictStr] = Field(
        default=None, alias="CertificateNumber"
    )
    service_date: Optional[datetime] = Field(default=None, alias="ServiceDate")
    due_date: Optional[datetime] = Field(default=None, alias="DueDate")
    next_service_date: Optional[datetime] = Field(default=None, alias="NextServiceDate")
    maintenance_task: Optional[StrictStr] = Field(default=None, alias="MaintenanceTask")
    maintenance_plan: Optional[StrictStr] = Field(default=None, alias="MaintenancePlan")
    service_options: Optional[
        List[QualerApiModelsServiceOptionsToServiceOptionResponseModel]
    ] = Field(default=None, alias="ServiceOptions")
    vendor_tag: Optional[StrictStr] = Field(default=None, alias="VendorTag")
    legacy_id: Optional[StrictStr] = Field(default=None, alias="LegacyId")
    asset_ownership: Optional[StrictStr] = Field(default=None, alias="AssetOwnership")
    __properties: ClassVar[List[str]] = [
        "WorkItemId",
        "ClientNotes",
        "ServiceComments",
        "PrivateComments",
        "OrderItemNumber",
        "ServiceOrderId",
        "ChannelCount",
        "ServiceTotal",
        "RepairsTotal",
        "PartsTotal",
        "PartsTotalBeforeDiscount",
        "OverrideServiceTotal",
        "OverrideRepairsTotal",
        "OverridePartsTotal",
        "ServiceType",
        "DocumentNumber",
        "DocumentSection",
        "WorkStatus",
        "CustomWorkStatus",
        "IsLimited",
        "CheckedOn",
        "CheckedByName",
        "CheckedById",
        "CompletedOn",
        "CompletedByName",
        "CompletedById",
        "UpdatedById",
        "UpdatedBy",
        "AsFoundCheck",
        "AsLeftCheck",
        "ItemResultStatus",
        "ItemAsFoundResult",
        "ItemAsLeftResult",
        "AsFoundSpecification",
        "AsLeftSpecification",
        "CreatedOnUtc",
        "UpdatedOnUtc",
        "EquipmentId",
        "ServiceLevel",
        "ServiceLevelCode",
        "ServiceLevelDocumentNumber",
        "ServiceLevelDocumentSection",
        "NextServiceLevel",
        "NextServiceLevelCode",
        "ResultStatus",
        "AsFoundResult",
        "AsLeftResult",
        "SerialNumber",
        "SerialNumberChange",
        "AssetTag",
        "AssetUser",
        "AssetTagChange",
        "AssetUserChange",
        "AssetId",
        "AssetName",
        "AssetDescription",
        "AssetSiteName",
        "AssetSiteId",
        "AssetCompanyName",
        "AssetCompanyId",
        "ClientCompanyId",
        "VendorCompanyId",
        "ServiceNotes",
        "ProviderTechnician",
        "ProviderPhone",
        "ProviderCompany",
        "ServiceCharge",
        "RepairsCharge",
        "PartsCharge",
        "PartsChargeBeforeDiscount",
        "CustomOrderNumber",
        "CertificateNumber",
        "ServiceDate",
        "DueDate",
        "NextServiceDate",
        "MaintenanceTask",
        "MaintenancePlan",
        "ServiceOptions",
        "VendorTag",
        "LegacyId",
        "AssetOwnership",
    ]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of QualerApiModelsServiceOrdersToClientOrderItemResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        """
        excluded_fields: Set[str] = set(
            [
                "asset_ownership",
            ]
        )

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in service_options (list)
        _items = []
        if self.service_options:
            for _item_service_options in self.service_options:
                if _item_service_options:
                    _items.append(_item_service_options.to_dict())
            _dict["ServiceOptions"] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of QualerApiModelsServiceOrdersToClientOrderItemResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate(
            {
                "WorkItemId": obj.get("WorkItemId"),
                "ClientNotes": obj.get("ClientNotes"),
                "ServiceComments": obj.get("ServiceComments"),
                "PrivateComments": obj.get("PrivateComments"),
                "OrderItemNumber": obj.get("OrderItemNumber"),
                "ServiceOrderId": obj.get("ServiceOrderId"),
                "ChannelCount": obj.get("ChannelCount"),
                "ServiceTotal": obj.get("ServiceTotal"),
                "RepairsTotal": obj.get("RepairsTotal"),
                "PartsTotal": obj.get("PartsTotal"),
                "PartsTotalBeforeDiscount": obj.get("PartsTotalBeforeDiscount"),
                "OverrideServiceTotal": obj.get("OverrideServiceTotal"),
                "OverrideRepairsTotal": obj.get("OverrideRepairsTotal"),
                "OverridePartsTotal": obj.get("OverridePartsTotal"),
                "ServiceType": obj.get("ServiceType"),
                "DocumentNumber": obj.get("DocumentNumber"),
                "DocumentSection": obj.get("DocumentSection"),
                "WorkStatus": obj.get("WorkStatus"),
                "CustomWorkStatus": obj.get("CustomWorkStatus"),
                "IsLimited": obj.get("IsLimited"),
                "CheckedOn": obj.get("CheckedOn"),
                "CheckedByName": obj.get("CheckedByName"),
                "CheckedById": obj.get("CheckedById"),
                "CompletedOn": obj.get("CompletedOn"),
                "CompletedByName": obj.get("CompletedByName"),
                "CompletedById": obj.get("CompletedById"),
                "UpdatedById": obj.get("UpdatedById"),
                "UpdatedBy": obj.get("UpdatedBy"),
                "AsFoundCheck": obj.get("AsFoundCheck"),
                "AsLeftCheck": obj.get("AsLeftCheck"),
                "ItemResultStatus": obj.get("ItemResultStatus"),
                "ItemAsFoundResult": obj.get("ItemAsFoundResult"),
                "ItemAsLeftResult": obj.get("ItemAsLeftResult"),
                "AsFoundSpecification": obj.get("AsFoundSpecification"),
                "AsLeftSpecification": obj.get("AsLeftSpecification"),
                "CreatedOnUtc": obj.get("CreatedOnUtc"),
                "UpdatedOnUtc": obj.get("UpdatedOnUtc"),
                "EquipmentId": obj.get("EquipmentId"),
                "ServiceLevel": obj.get("ServiceLevel"),
                "ServiceLevelCode": obj.get("ServiceLevelCode"),
                "ServiceLevelDocumentNumber": obj.get("ServiceLevelDocumentNumber"),
                "ServiceLevelDocumentSection": obj.get("ServiceLevelDocumentSection"),
                "NextServiceLevel": obj.get("NextServiceLevel"),
                "NextServiceLevelCode": obj.get("NextServiceLevelCode"),
                "ResultStatus": obj.get("ResultStatus"),
                "AsFoundResult": obj.get("AsFoundResult"),
                "AsLeftResult": obj.get("AsLeftResult"),
                "SerialNumber": obj.get("SerialNumber"),
                "SerialNumberChange": obj.get("SerialNumberChange"),
                "AssetTag": obj.get("AssetTag"),
                "AssetUser": obj.get("AssetUser"),
                "AssetTagChange": obj.get("AssetTagChange"),
                "AssetUserChange": obj.get("AssetUserChange"),
                "AssetId": obj.get("AssetId"),
                "AssetName": obj.get("AssetName"),
                "AssetDescription": obj.get("AssetDescription"),
                "AssetSiteName": obj.get("AssetSiteName"),
                "AssetSiteId": obj.get("AssetSiteId"),
                "AssetCompanyName": obj.get("AssetCompanyName"),
                "AssetCompanyId": obj.get("AssetCompanyId"),
                "ClientCompanyId": obj.get("ClientCompanyId"),
                "VendorCompanyId": obj.get("VendorCompanyId"),
                "ServiceNotes": obj.get("ServiceNotes"),
                "ProviderTechnician": obj.get("ProviderTechnician"),
                "ProviderPhone": obj.get("ProviderPhone"),
                "ProviderCompany": obj.get("ProviderCompany"),
                "ServiceCharge": obj.get("ServiceCharge"),
                "RepairsCharge": obj.get("RepairsCharge"),
                "PartsCharge": obj.get("PartsCharge"),
                "PartsChargeBeforeDiscount": obj.get("PartsChargeBeforeDiscount"),
                "CustomOrderNumber": obj.get("CustomOrderNumber"),
                "CertificateNumber": obj.get("CertificateNumber"),
                "ServiceDate": obj.get("ServiceDate"),
                "DueDate": obj.get("DueDate"),
                "NextServiceDate": obj.get("NextServiceDate"),
                "MaintenanceTask": obj.get("MaintenanceTask"),
                "MaintenancePlan": obj.get("MaintenancePlan"),
                "ServiceOptions": (
                    [
                        QualerApiModelsServiceOptionsToServiceOptionResponseModel.from_dict(
                            _item
                        )
                        for _item in obj["ServiceOptions"]
                    ]
                    if obj.get("ServiceOptions") is not None
                    else None
                ),
                "VendorTag": obj.get("VendorTag"),
                "LegacyId": obj.get("LegacyId"),
                "AssetOwnership": obj.get("AssetOwnership"),
            }
        )
        return _obj
