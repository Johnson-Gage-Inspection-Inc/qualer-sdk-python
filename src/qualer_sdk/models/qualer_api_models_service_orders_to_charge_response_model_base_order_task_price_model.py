# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional, Union

from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr


class QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel(
    BaseModel
):
    """
    QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel
    """

    contract_discount: Optional[Union[StrictFloat, StrictInt]] = Field(
        None, alias="ContractDiscount"
    )
    time_spent: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="TimeSpent")
    is_hourly: Optional[StrictBool] = Field(None, alias="IsHourly")
    details: Optional[StrictStr] = Field(None, alias="Details")
    name: Optional[StrictStr] = Field(None, alias="Name")
    price: Optional[Union[StrictFloat, StrictInt]] = Field(None, alias="Price")
    __properties = [
        "ContractDiscount",
        "TimeSpent",
        "IsHourly",
        "Details",
        "Name",
        "Price",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel:
        """Create an instance of QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(
            by_alias=True,
            exclude={
                "name",
                "price",
            },
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(
        cls, obj: dict
    ) -> QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel:
        """Create an instance of QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.parse_obj(
                obj
            )

        _obj = QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.parse_obj(
            {
                "contract_discount": obj.get("ContractDiscount"),
                "time_spent": obj.get("TimeSpent"),
                "is_hourly": obj.get("IsHourly"),
                "details": obj.get("Details"),
                "name": obj.get("Name"),
                "price": obj.get("Price"),
            }
        )
        return _obj
