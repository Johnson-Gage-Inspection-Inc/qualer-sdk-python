# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from qualer_sdk.configuration import Configuration


class QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        "contract_discount": "float",
        "time_spent": "float",
        "is_hourly": "bool",
        "details": "str",
        "name": "str",
        "price": "float",
    }

    attribute_map = {
        "contract_discount": "ContractDiscount",
        "time_spent": "TimeSpent",
        "is_hourly": "IsHourly",
        "details": "Details",
        "name": "Name",
        "price": "Price",
    }

    def __init__(
        self,
        contract_discount=None,
        time_spent=None,
        is_hourly=None,
        details=None,
        name=None,
        price=None,
        _configuration=None,
    ):  # noqa: E501
        """QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._contract_discount = None
        self._time_spent = None
        self._is_hourly = None
        self._details = None
        self._name = None
        self._price = None
        self.discriminator = None

        if contract_discount is not None:
            self.contract_discount = contract_discount
        if time_spent is not None:
            self.time_spent = time_spent
        if is_hourly is not None:
            self.is_hourly = is_hourly
        if details is not None:
            self.details = details
        if name is not None:
            self.name = name
        if price is not None:
            self.price = price

    @property
    def contract_discount(self):
        """Gets the contract_discount of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501


        :return: The contract_discount of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :rtype: float
        """
        return self._contract_discount

    @contract_discount.setter
    def contract_discount(self, contract_discount):
        """Sets the contract_discount of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.


        :param contract_discount: The contract_discount of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :type: float
        """

        self._contract_discount = contract_discount

    @property
    def time_spent(self):
        """Gets the time_spent of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501


        :return: The time_spent of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :rtype: float
        """
        return self._time_spent

    @time_spent.setter
    def time_spent(self, time_spent):
        """Sets the time_spent of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.


        :param time_spent: The time_spent of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :type: float
        """

        self._time_spent = time_spent

    @property
    def is_hourly(self):
        """Gets the is_hourly of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501


        :return: The is_hourly of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :rtype: bool
        """
        return self._is_hourly

    @is_hourly.setter
    def is_hourly(self, is_hourly):
        """Sets the is_hourly of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.


        :param is_hourly: The is_hourly of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :type: bool
        """

        self._is_hourly = is_hourly

    @property
    def details(self):
        """Gets the details of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501


        :return: The details of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.


        :param details: The details of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :type: str
        """

        self._details = details

    @property
    def name(self):
        """Gets the name of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501


        :return: The name of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.


        :param name: The name of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501


        :return: The price of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.


        :param price: The price of this QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel.  # noqa: E501
        :type: float
        """

        self._price = price

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (
                            (item[0], item[1].to_dict())
                            if hasattr(item[1], "to_dict")
                            else item
                        ),
                        value.items(),
                    )
                )
            else:
                result[attr] = value
        if issubclass(
            QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel,
            dict,
        ):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(
            other,
            QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel,
        ):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(
            other,
            QualerApiModelsServiceOrdersToChargeResponseModelBaseOrderTaskPriceModel,
        ):
            return True

        return self.to_dict() != other.to_dict()
