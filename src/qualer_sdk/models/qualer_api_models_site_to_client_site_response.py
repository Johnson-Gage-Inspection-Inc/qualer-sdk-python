# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Any, ClassVar, Dict, List, Optional, Set

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr
from typing_extensions import Self

from qualer_sdk.models.qualer_api_models_address_to_address_response_model import (
    QualerApiModelsAddressToAddressResponseModel,
)
from qualer_sdk.models.qualer_api_models_common_from_attribute_model import (
    QualerApiModelsCommonFromAttributeModel,
)


class QualerApiModelsSiteToClientSiteResponse(BaseModel):
    """
    QualerApiModelsSiteToClientSiteResponse
    """  # noqa: E501

    site_id: Optional[StrictInt] = Field(default=None, alias="SiteId")
    site_name: Optional[StrictStr] = Field(default=None, alias="SiteName")
    site_code: Optional[StrictStr] = Field(default=None, alias="SiteCode")
    shipping_address: Optional[QualerApiModelsAddressToAddressResponseModel] = Field(
        default=None, alias="ShippingAddress"
    )
    shipping_inherited: Optional[StrictBool] = Field(
        default=None, alias="ShippingInherited"
    )
    billing_address: Optional[QualerApiModelsAddressToAddressResponseModel] = Field(
        default=None, alias="BillingAddress"
    )
    default_account_representative_employee_id: Optional[StrictInt] = Field(
        default=None, alias="DefaultAccountRepresentativeEmployeeId"
    )
    billing_inherited: Optional[StrictBool] = Field(
        default=None, alias="BillingInherited"
    )
    federal_number: Optional[StrictStr] = Field(default=None, alias="FederalNumber")
    state_number: Optional[StrictStr] = Field(default=None, alias="StateNumber")
    culture_name: Optional[StrictStr] = Field(default=None, alias="CultureName")
    is_science_facility: Optional[StrictBool] = Field(
        default=None, alias="IsScienceFacility"
    )
    is_service_center: Optional[StrictBool] = Field(
        default=None, alias="IsServiceCenter"
    )
    is_inventory_storage: Optional[StrictBool] = Field(
        default=None, alias="IsInventoryStorage"
    )
    is_production: Optional[StrictBool] = Field(default=None, alias="IsProduction")
    time_zone_id: Optional[StrictStr] = Field(default=None, alias="TimeZoneId")
    time_zone_offset_minutes: Optional[StrictInt] = Field(
        default=None, alias="TimeZoneOffsetMinutes"
    )
    updated_on_utc: Optional[datetime] = Field(default=None, alias="UpdatedOnUtc")
    attributes: Optional[List[QualerApiModelsCommonFromAttributeModel]] = Field(
        default=None, alias="Attributes"
    )
    __properties: ClassVar[List[str]] = [
        "SiteId",
        "SiteName",
        "SiteCode",
        "ShippingAddress",
        "ShippingInherited",
        "BillingAddress",
        "DefaultAccountRepresentativeEmployeeId",
        "BillingInherited",
        "FederalNumber",
        "StateNumber",
        "CultureName",
        "IsScienceFacility",
        "IsServiceCenter",
        "IsInventoryStorage",
        "IsProduction",
        "TimeZoneId",
        "TimeZoneOffsetMinutes",
        "UpdatedOnUtc",
        "Attributes",
    ]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of QualerApiModelsSiteToClientSiteResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of shipping_address
        if self.shipping_address:
            _dict["ShippingAddress"] = self.shipping_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of billing_address
        if self.billing_address:
            _dict["BillingAddress"] = self.billing_address.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in attributes (list)
        _items = []
        if self.attributes:
            for _item_attributes in self.attributes:
                if _item_attributes:
                    _items.append(_item_attributes.to_dict())
            _dict["Attributes"] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of QualerApiModelsSiteToClientSiteResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate(
            {
                "SiteId": obj.get("SiteId"),
                "SiteName": obj.get("SiteName"),
                "SiteCode": obj.get("SiteCode"),
                "ShippingAddress": (
                    QualerApiModelsAddressToAddressResponseModel.from_dict(
                        obj["ShippingAddress"]
                    )
                    if obj.get("ShippingAddress") is not None
                    else None
                ),
                "ShippingInherited": obj.get("ShippingInherited"),
                "BillingAddress": (
                    QualerApiModelsAddressToAddressResponseModel.from_dict(
                        obj["BillingAddress"]
                    )
                    if obj.get("BillingAddress") is not None
                    else None
                ),
                "DefaultAccountRepresentativeEmployeeId": obj.get(
                    "DefaultAccountRepresentativeEmployeeId"
                ),
                "BillingInherited": obj.get("BillingInherited"),
                "FederalNumber": obj.get("FederalNumber"),
                "StateNumber": obj.get("StateNumber"),
                "CultureName": obj.get("CultureName"),
                "IsScienceFacility": obj.get("IsScienceFacility"),
                "IsServiceCenter": obj.get("IsServiceCenter"),
                "IsInventoryStorage": obj.get("IsInventoryStorage"),
                "IsProduction": obj.get("IsProduction"),
                "TimeZoneId": obj.get("TimeZoneId"),
                "TimeZoneOffsetMinutes": obj.get("TimeZoneOffsetMinutes"),
                "UpdatedOnUtc": obj.get("UpdatedOnUtc"),
                "Attributes": (
                    [
                        QualerApiModelsCommonFromAttributeModel.from_dict(_item)
                        for _item in obj["Attributes"]
                    ]
                    if obj.get("Attributes") is not None
                    else None
                ),
            }
        )
        return _obj
