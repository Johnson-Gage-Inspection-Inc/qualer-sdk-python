# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field, StrictInt, StrictStr, conlist

from qualer_sdk.models.qualer_api_models_asset_to_asset_maintenance_plan_response_assigned_employee import (
    QualerApiModelsAssetToAssetMaintenancePlanResponseAssignedEmployee,
)


class QualerApiModelsAssetToAssetMaintenancePlanResponse(BaseModel):
    """
    QualerApiModelsAssetToAssetMaintenancePlanResponse
    """

    maintenance_plan_id: Optional[StrictInt] = Field(None, alias="MaintenancePlanId")
    maintenance_plan_name: Optional[StrictStr] = Field(
        None, alias="MaintenancePlanName"
    )
    task_notes: Optional[StrictStr] = Field(None, alias="TaskNotes")
    last_service_task: Optional[StrictStr] = Field(None, alias="LastServiceTask")
    last_service_date: Optional[datetime] = Field(None, alias="LastServiceDate")
    next_service_task: Optional[StrictStr] = Field(None, alias="NextServiceTask")
    next_service_date: Optional[datetime] = Field(None, alias="NextServiceDate")
    certificate_due_date: Optional[datetime] = Field(None, alias="CertificateDueDate")
    owner_first_name: Optional[StrictStr] = Field(None, alias="OwnerFirstName")
    owner_last_name: Optional[StrictStr] = Field(None, alias="OwnerLastName")
    owner_alias: Optional[StrictStr] = Field(None, alias="OwnerAlias")
    owner_department_name: Optional[StrictStr] = Field(
        None, alias="OwnerDepartmentName"
    )
    technician_first_name: Optional[StrictStr] = Field(
        None, alias="TechnicianFirstName"
    )
    technician_last_name: Optional[StrictStr] = Field(None, alias="TechnicianLastName")
    technician_alias: Optional[StrictStr] = Field(None, alias="TechnicianAlias")
    technician_department_name: Optional[StrictStr] = Field(
        None, alias="TechnicianDepartmentName"
    )
    assigned_employees: Optional[
        conlist(QualerApiModelsAssetToAssetMaintenancePlanResponseAssignedEmployee)
    ] = Field(None, alias="AssignedEmployees")
    __properties = [
        "MaintenancePlanId",
        "MaintenancePlanName",
        "TaskNotes",
        "LastServiceTask",
        "LastServiceDate",
        "NextServiceTask",
        "NextServiceDate",
        "CertificateDueDate",
        "OwnerFirstName",
        "OwnerLastName",
        "OwnerAlias",
        "OwnerDepartmentName",
        "TechnicianFirstName",
        "TechnicianLastName",
        "TechnicianAlias",
        "TechnicianDepartmentName",
        "AssignedEmployees",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsAssetToAssetMaintenancePlanResponse:
        """Create an instance of QualerApiModelsAssetToAssetMaintenancePlanResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of each item in assigned_employees (list)
        _items = []
        if self.assigned_employees:
            for _item in self.assigned_employees:
                if _item:
                    _items.append(_item.to_dict())
            _dict["AssignedEmployees"] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QualerApiModelsAssetToAssetMaintenancePlanResponse:
        """Create an instance of QualerApiModelsAssetToAssetMaintenancePlanResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsAssetToAssetMaintenancePlanResponse.parse_obj(obj)

        _obj = QualerApiModelsAssetToAssetMaintenancePlanResponse.parse_obj(
            {
                "maintenance_plan_id": obj.get("MaintenancePlanId"),
                "maintenance_plan_name": obj.get("MaintenancePlanName"),
                "task_notes": obj.get("TaskNotes"),
                "last_service_task": obj.get("LastServiceTask"),
                "last_service_date": obj.get("LastServiceDate"),
                "next_service_task": obj.get("NextServiceTask"),
                "next_service_date": obj.get("NextServiceDate"),
                "certificate_due_date": obj.get("CertificateDueDate"),
                "owner_first_name": obj.get("OwnerFirstName"),
                "owner_last_name": obj.get("OwnerLastName"),
                "owner_alias": obj.get("OwnerAlias"),
                "owner_department_name": obj.get("OwnerDepartmentName"),
                "technician_first_name": obj.get("TechnicianFirstName"),
                "technician_last_name": obj.get("TechnicianLastName"),
                "technician_alias": obj.get("TechnicianAlias"),
                "technician_department_name": obj.get("TechnicianDepartmentName"),
                "assigned_employees": (
                    [
                        QualerApiModelsAssetToAssetMaintenancePlanResponseAssignedEmployee.from_dict(
                            _item
                        )
                        for _item in obj.get("AssignedEmployees")
                    ]
                    if obj.get("AssignedEmployees") is not None
                    else None
                ),
            }
        )
        return _obj
