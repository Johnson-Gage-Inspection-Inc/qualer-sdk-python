# coding: utf-8

"""
Qualer.Web.Mvc

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

The version of the OpenAPI document: v1
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401
from typing import Optional, Union

from pydantic import BaseModel, Field, StrictBool, StrictFloat, StrictInt, StrictStr


class QualerApiModelsProductToProductApiResponseModel(BaseModel):
    """
    QualerApiModelsProductToProductApiResponseModel
    """

    product_id: Optional[StrictInt] = Field(None, alias="ProductId")
    parent_product_id: Optional[StrictInt] = Field(None, alias="ParentProductId")
    category_id: Optional[StrictInt] = Field(None, alias="CategoryId")
    manufacturer_id: Optional[StrictInt] = Field(None, alias="ManufacturerId")
    manufacturer_name: Optional[StrictStr] = Field(None, alias="ManufacturerName")
    product_name: Optional[StrictStr] = Field(None, alias="ProductName")
    parent_product_name: Optional[StrictStr] = Field(None, alias="ParentProductName")
    manufacturer_part_number: Optional[StrictStr] = Field(
        None, alias="ManufacturerPartNumber"
    )
    product_description: Optional[StrictStr] = Field(None, alias="ProductDescription")
    is_family: Optional[StrictBool] = Field(None, alias="IsFamily")
    is_discontinued: Optional[StrictBool] = Field(None, alias="IsDiscontinued")
    is_stock_item: Optional[StrictBool] = Field(None, alias="IsStockItem")
    unit_sale_price: Optional[Union[StrictFloat, StrictInt]] = Field(
        None, alias="UnitSalePrice"
    )
    supplier_information: Optional[StrictStr] = Field(None, alias="SupplierInformation")
    quantity_on_hand: Optional[StrictInt] = Field(None, alias="QuantityOnHand")
    product_code: Optional[StrictStr] = Field(None, alias="ProductCode")
    category_name: Optional[StrictStr] = Field(None, alias="CategoryName")
    parent_category_name: Optional[StrictStr] = Field(None, alias="ParentCategoryName")
    __properties = [
        "ProductId",
        "ParentProductId",
        "CategoryId",
        "ManufacturerId",
        "ManufacturerName",
        "ProductName",
        "ParentProductName",
        "ManufacturerPartNumber",
        "ProductDescription",
        "IsFamily",
        "IsDiscontinued",
        "IsStockItem",
        "UnitSalePrice",
        "SupplierInformation",
        "QuantityOnHand",
        "ProductCode",
        "CategoryName",
        "ParentCategoryName",
    ]

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(
        cls, json_str: str
    ) -> QualerApiModelsProductToProductApiResponseModel:
        """Create an instance of QualerApiModelsProductToProductApiResponseModel from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> QualerApiModelsProductToProductApiResponseModel:
        """Create an instance of QualerApiModelsProductToProductApiResponseModel from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return QualerApiModelsProductToProductApiResponseModel.parse_obj(obj)

        _obj = QualerApiModelsProductToProductApiResponseModel.parse_obj(
            {
                "product_id": obj.get("ProductId"),
                "parent_product_id": obj.get("ParentProductId"),
                "category_id": obj.get("CategoryId"),
                "manufacturer_id": obj.get("ManufacturerId"),
                "manufacturer_name": obj.get("ManufacturerName"),
                "product_name": obj.get("ProductName"),
                "parent_product_name": obj.get("ParentProductName"),
                "manufacturer_part_number": obj.get("ManufacturerPartNumber"),
                "product_description": obj.get("ProductDescription"),
                "is_family": obj.get("IsFamily"),
                "is_discontinued": obj.get("IsDiscontinued"),
                "is_stock_item": obj.get("IsStockItem"),
                "unit_sale_price": obj.get("UnitSalePrice"),
                "supplier_information": obj.get("SupplierInformation"),
                "quantity_on_hand": obj.get("QuantityOnHand"),
                "product_code": obj.get("ProductCode"),
                "category_name": obj.get("CategoryName"),
                "parent_category_name": obj.get("ParentCategoryName"),
            }
        )
        return _obj
